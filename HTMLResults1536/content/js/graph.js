/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 62764.0, "minX": 0.0, "maxY": 762568.0, "series": [{"data": [[0.0, 296784.0], [0.1, 296784.0], [0.2, 300741.0], [0.3, 300741.0], [0.4, 300769.0], [0.5, 300769.0], [0.6, 300769.0], [0.7, 300770.0], [0.8, 307434.0], [0.9, 307434.0], [1.0, 308416.0], [1.1, 308416.0], [1.2, 309474.0], [1.3, 309474.0], [1.4, 324185.0], [1.5, 324185.0], [1.6, 324236.0], [1.7, 324236.0], [1.8, 346639.0], [1.9, 346639.0], [2.0, 355806.0], [2.1, 355806.0], [2.2, 364242.0], [2.3, 364242.0], [2.4, 364505.0], [2.5, 364505.0], [2.6, 365211.0], [2.7, 365211.0], [2.8, 365211.0], [2.9, 367586.0], [3.0, 367586.0], [3.1, 382092.0], [3.2, 382092.0], [3.3, 408669.0], [3.4, 408669.0], [3.5, 412470.0], [3.6, 412470.0], [3.7, 414716.0], [3.8, 414716.0], [3.9, 415782.0], [4.0, 415782.0], [4.1, 416075.0], [4.2, 416075.0], [4.3, 421467.0], [4.4, 421467.0], [4.5, 422047.0], [4.6, 422047.0], [4.7, 423622.0], [4.8, 423622.0], [4.9, 424489.0], [5.0, 424489.0], [5.1, 425919.0], [5.2, 425919.0], [5.3, 425947.0], [5.4, 425947.0], [5.5, 426728.0], [5.6, 426728.0], [5.7, 434185.0], [5.8, 434185.0], [5.9, 441034.0], [6.0, 441034.0], [6.1, 443696.0], [6.2, 443696.0], [6.3, 443734.0], [6.4, 443734.0], [6.5, 522792.0], [6.6, 522792.0], [6.7, 527994.0], [6.8, 527994.0], [6.9, 558229.0], [7.0, 558229.0], [7.1, 564893.0], [7.2, 564893.0], [7.3, 574029.0], [7.4, 574029.0], [7.5, 574257.0], [7.6, 574257.0], [7.7, 577169.0], [7.8, 577169.0], [7.9, 578276.0], [8.0, 578276.0], [8.1, 578358.0], [8.2, 578358.0], [8.3, 578857.0], [8.4, 578857.0], [8.5, 579537.0], [8.6, 579537.0], [8.7, 580195.0], [8.8, 581275.0], [8.9, 581275.0], [9.0, 581765.0], [9.1, 581765.0], [9.2, 583161.0], [9.3, 583161.0], [9.4, 583440.0], [9.5, 583440.0], [9.6, 583512.0], [9.7, 583512.0], [9.8, 583514.0], [9.9, 583514.0], [10.0, 584143.0], [10.1, 584143.0], [10.2, 584625.0], [10.3, 584625.0], [10.4, 584730.0], [10.5, 584730.0], [10.6, 585131.0], [10.7, 585131.0], [10.8, 585444.0], [10.9, 585444.0], [11.0, 585636.0], [11.1, 585636.0], [11.2, 585912.0], [11.3, 585912.0], [11.4, 586132.0], [11.5, 586132.0], [11.6, 586166.0], [11.7, 586166.0], [11.8, 586185.0], [11.9, 586185.0], [12.0, 586528.0], [12.1, 586528.0], [12.2, 586970.0], [12.3, 586970.0], [12.4, 587613.0], [12.5, 587613.0], [12.6, 589020.0], [12.7, 589020.0], [12.8, 589233.0], [12.9, 589233.0], [13.0, 589308.0], [13.1, 589308.0], [13.2, 589343.0], [13.3, 589343.0], [13.4, 589438.0], [13.5, 589438.0], [13.6, 589467.0], [13.7, 589467.0], [13.8, 589650.0], [13.9, 589650.0], [14.0, 589671.0], [14.1, 589671.0], [14.2, 590002.0], [14.3, 590002.0], [14.4, 590073.0], [14.5, 590073.0], [14.6, 590114.0], [14.7, 590114.0], [14.8, 590160.0], [14.9, 590160.0], [15.0, 590911.0], [15.1, 590911.0], [15.2, 590999.0], [15.3, 590999.0], [15.4, 591765.0], [15.5, 591765.0], [15.6, 592233.0], [15.7, 592233.0], [15.8, 592349.0], [15.9, 592349.0], [16.0, 592486.0], [16.1, 592486.0], [16.2, 593061.0], [16.3, 593061.0], [16.4, 593457.0], [16.5, 593457.0], [16.6, 594326.0], [16.7, 594326.0], [16.8, 594501.0], [16.9, 594501.0], [17.0, 595600.0], [17.1, 595600.0], [17.2, 595747.0], [17.3, 595747.0], [17.4, 596037.0], [17.5, 596037.0], [17.6, 596135.0], [17.7, 596135.0], [17.8, 596460.0], [17.9, 596460.0], [18.0, 596851.0], [18.1, 596851.0], [18.2, 596955.0], [18.3, 596955.0], [18.4, 597320.0], [18.5, 597320.0], [18.6, 597437.0], [18.7, 597437.0], [18.8, 597851.0], [18.9, 597851.0], [19.0, 598218.0], [19.1, 598218.0], [19.2, 598279.0], [19.3, 598279.0], [19.4, 598325.0], [19.5, 598325.0], [19.6, 598469.0], [19.7, 598469.0], [19.8, 598514.0], [19.9, 598514.0], [20.0, 598632.0], [20.1, 598632.0], [20.2, 599465.0], [20.3, 599465.0], [20.4, 600225.0], [20.5, 600225.0], [20.6, 600875.0], [20.7, 600875.0], [20.8, 601375.0], [20.9, 601375.0], [21.0, 601525.0], [21.1, 601525.0], [21.2, 601667.0], [21.3, 601667.0], [21.4, 602827.0], [21.5, 602827.0], [21.6, 603452.0], [21.7, 603452.0], [21.8, 603751.0], [21.9, 603751.0], [22.0, 604196.0], [22.1, 604196.0], [22.2, 604469.0], [22.3, 604469.0], [22.4, 604957.0], [22.5, 604957.0], [22.6, 605251.0], [22.7, 605251.0], [22.8, 605813.0], [22.9, 605813.0], [23.0, 606036.0], [23.1, 606036.0], [23.2, 607303.0], [23.3, 607303.0], [23.4, 607499.0], [23.5, 607499.0], [23.6, 607521.0], [23.7, 607521.0], [23.8, 607564.0], [23.9, 607564.0], [24.0, 608152.0], [24.1, 608152.0], [24.2, 608918.0], [24.3, 608918.0], [24.4, 609579.0], [24.5, 609579.0], [24.6, 609588.0], [24.7, 609588.0], [24.8, 609717.0], [24.9, 609717.0], [25.0, 609828.0], [25.1, 609828.0], [25.2, 609878.0], [25.3, 609878.0], [25.4, 609885.0], [25.5, 609885.0], [25.6, 609955.0], [25.7, 609955.0], [25.8, 610131.0], [25.9, 610131.0], [26.0, 610258.0], [26.1, 610258.0], [26.2, 611296.0], [26.3, 611296.0], [26.4, 611526.0], [26.5, 611526.0], [26.6, 612138.0], [26.7, 612138.0], [26.8, 612249.0], [26.9, 612249.0], [27.0, 612993.0], [27.1, 612993.0], [27.2, 613097.0], [27.3, 613097.0], [27.4, 613246.0], [27.5, 613246.0], [27.6, 613294.0], [27.7, 613294.0], [27.8, 613297.0], [27.9, 613297.0], [28.0, 613938.0], [28.1, 613938.0], [28.2, 614333.0], [28.3, 614333.0], [28.4, 615009.0], [28.5, 615009.0], [28.6, 615064.0], [28.7, 615064.0], [28.8, 615491.0], [28.9, 615491.0], [29.0, 615600.0], [29.1, 615600.0], [29.2, 615603.0], [29.3, 615603.0], [29.4, 615700.0], [29.5, 615700.0], [29.6, 615716.0], [29.7, 615716.0], [29.8, 615777.0], [29.9, 615777.0], [30.0, 616132.0], [30.1, 616132.0], [30.2, 616146.0], [30.3, 616146.0], [30.4, 616319.0], [30.5, 616319.0], [30.6, 616546.0], [30.7, 616546.0], [30.8, 616601.0], [30.9, 616601.0], [31.0, 616637.0], [31.1, 616637.0], [31.2, 616678.0], [31.3, 616678.0], [31.4, 616690.0], [31.5, 616690.0], [31.6, 616770.0], [31.7, 616770.0], [31.8, 616901.0], [31.9, 616901.0], [32.0, 616916.0], [32.1, 616916.0], [32.2, 617112.0], [32.3, 617112.0], [32.4, 617208.0], [32.5, 617208.0], [32.6, 617396.0], [32.7, 617396.0], [32.8, 617776.0], [32.9, 617776.0], [33.0, 618162.0], [33.1, 618162.0], [33.2, 618176.0], [33.3, 618176.0], [33.4, 618218.0], [33.5, 618218.0], [33.6, 618824.0], [33.7, 618824.0], [33.8, 619479.0], [33.9, 619479.0], [34.0, 620245.0], [34.1, 620245.0], [34.2, 620536.0], [34.3, 620536.0], [34.4, 620674.0], [34.5, 620674.0], [34.6, 620695.0], [34.7, 620695.0], [34.8, 620921.0], [34.9, 620921.0], [35.0, 620967.0], [35.1, 620967.0], [35.2, 621005.0], [35.3, 621005.0], [35.4, 621209.0], [35.5, 621209.0], [35.6, 621315.0], [35.7, 621315.0], [35.8, 622193.0], [35.9, 622193.0], [36.0, 622725.0], [36.1, 622725.0], [36.2, 622790.0], [36.3, 622790.0], [36.4, 623461.0], [36.5, 623461.0], [36.6, 623998.0], [36.7, 623998.0], [36.8, 626009.0], [36.9, 626009.0], [37.0, 626112.0], [37.1, 626112.0], [37.2, 626984.0], [37.3, 626984.0], [37.4, 627140.0], [37.5, 627140.0], [37.6, 627810.0], [37.7, 627810.0], [37.8, 627904.0], [37.9, 627904.0], [38.0, 628054.0], [38.1, 628054.0], [38.2, 628792.0], [38.3, 628792.0], [38.4, 628792.0], [38.5, 629397.0], [38.6, 629397.0], [38.7, 629628.0], [38.8, 629628.0], [38.9, 630319.0], [39.0, 630319.0], [39.1, 630797.0], [39.2, 630797.0], [39.3, 630805.0], [39.4, 630805.0], [39.5, 630960.0], [39.6, 630960.0], [39.7, 631077.0], [39.8, 631077.0], [39.9, 631449.0], [40.0, 631449.0], [40.1, 631669.0], [40.2, 631669.0], [40.3, 633704.0], [40.4, 633704.0], [40.5, 633826.0], [40.6, 633826.0], [40.7, 633994.0], [40.8, 633994.0], [40.9, 634029.0], [41.0, 634029.0], [41.1, 634029.0], [41.2, 634029.0], [41.3, 634451.0], [41.4, 634451.0], [41.5, 634606.0], [41.6, 634606.0], [41.7, 635393.0], [41.8, 635393.0], [41.9, 636362.0], [42.0, 636362.0], [42.1, 636439.0], [42.2, 636439.0], [42.3, 636648.0], [42.4, 636648.0], [42.5, 636650.0], [42.6, 636650.0], [42.7, 636867.0], [42.8, 636867.0], [42.9, 637017.0], [43.0, 637017.0], [43.1, 637452.0], [43.2, 637452.0], [43.3, 638083.0], [43.4, 638083.0], [43.5, 638140.0], [43.6, 638140.0], [43.7, 638258.0], [43.8, 638258.0], [43.9, 638721.0], [44.0, 638721.0], [44.1, 638775.0], [44.2, 638775.0], [44.3, 639200.0], [44.4, 639200.0], [44.5, 639304.0], [44.6, 639304.0], [44.7, 640063.0], [44.8, 640063.0], [44.9, 640183.0], [45.0, 640183.0], [45.1, 640267.0], [45.2, 640267.0], [45.3, 640650.0], [45.4, 640650.0], [45.5, 641034.0], [45.6, 641034.0], [45.7, 641059.0], [45.8, 641059.0], [45.9, 641112.0], [46.0, 641112.0], [46.1, 641141.0], [46.2, 641141.0], [46.3, 641435.0], [46.4, 641435.0], [46.5, 642068.0], [46.6, 642068.0], [46.7, 642099.0], [46.8, 642099.0], [46.9, 642550.0], [47.0, 642550.0], [47.1, 642665.0], [47.2, 642665.0], [47.3, 643059.0], [47.4, 643059.0], [47.5, 643255.0], [47.6, 643255.0], [47.7, 643747.0], [47.8, 643747.0], [47.9, 643756.0], [48.0, 643756.0], [48.1, 644033.0], [48.2, 644033.0], [48.3, 644891.0], [48.4, 644891.0], [48.5, 645042.0], [48.6, 645042.0], [48.7, 645140.0], [48.8, 645140.0], [48.9, 645872.0], [49.0, 645872.0], [49.1, 646283.0], [49.2, 646283.0], [49.3, 647595.0], [49.4, 647595.0], [49.5, 648119.0], [49.6, 648119.0], [49.7, 648364.0], [49.8, 648364.0], [49.9, 648796.0], [50.0, 648796.0], [50.1, 648822.0], [50.2, 648822.0], [50.3, 649675.0], [50.4, 649675.0], [50.5, 650508.0], [50.6, 650508.0], [50.7, 650808.0], [50.8, 650808.0], [50.9, 651325.0], [51.0, 651325.0], [51.1, 651369.0], [51.2, 651369.0], [51.3, 651526.0], [51.4, 651526.0], [51.5, 651765.0], [51.6, 651765.0], [51.7, 651877.0], [51.8, 651877.0], [51.9, 653236.0], [52.0, 653236.0], [52.1, 653363.0], [52.2, 653363.0], [52.3, 653927.0], [52.4, 653927.0], [52.5, 654527.0], [52.6, 654527.0], [52.7, 654925.0], [52.8, 654925.0], [52.9, 655088.0], [53.0, 655088.0], [53.1, 655590.0], [53.2, 655590.0], [53.3, 655851.0], [53.4, 655851.0], [53.5, 656084.0], [53.6, 656084.0], [53.7, 656695.0], [53.8, 656695.0], [53.9, 656769.0], [54.0, 656769.0], [54.1, 657033.0], [54.2, 657033.0], [54.3, 657065.0], [54.4, 657065.0], [54.5, 658111.0], [54.6, 658111.0], [54.7, 658759.0], [54.8, 658759.0], [54.9, 658832.0], [55.0, 658832.0], [55.1, 658920.0], [55.2, 658920.0], [55.3, 659197.0], [55.4, 659197.0], [55.5, 659431.0], [55.6, 659431.0], [55.7, 659687.0], [55.8, 659687.0], [55.9, 659704.0], [56.0, 659704.0], [56.1, 660448.0], [56.2, 660448.0], [56.3, 660646.0], [56.4, 660646.0], [56.5, 660691.0], [56.6, 660691.0], [56.7, 660777.0], [56.8, 660777.0], [56.9, 660945.0], [57.0, 660945.0], [57.1, 661374.0], [57.2, 661374.0], [57.3, 661768.0], [57.4, 661768.0], [57.5, 662045.0], [57.6, 662045.0], [57.7, 662652.0], [57.8, 662652.0], [57.9, 662704.0], [58.0, 662704.0], [58.1, 662848.0], [58.2, 662848.0], [58.3, 663214.0], [58.4, 663214.0], [58.5, 663422.0], [58.6, 663422.0], [58.7, 663555.0], [58.8, 663555.0], [58.9, 663967.0], [59.0, 663967.0], [59.1, 663996.0], [59.2, 663996.0], [59.3, 664001.0], [59.4, 664001.0], [59.5, 664021.0], [59.6, 664021.0], [59.7, 664318.0], [59.8, 664318.0], [59.9, 664496.0], [60.0, 664496.0], [60.1, 664498.0], [60.2, 664498.0], [60.3, 665250.0], [60.4, 665250.0], [60.5, 665632.0], [60.6, 665632.0], [60.7, 665673.0], [60.8, 665673.0], [60.9, 666115.0], [61.0, 666115.0], [61.1, 666252.0], [61.2, 666252.0], [61.3, 666928.0], [61.4, 666928.0], [61.5, 667204.0], [61.6, 667204.0], [61.7, 667372.0], [61.8, 667372.0], [61.9, 667430.0], [62.0, 667430.0], [62.1, 667455.0], [62.2, 667455.0], [62.3, 668539.0], [62.4, 668539.0], [62.5, 668789.0], [62.6, 668789.0], [62.7, 669340.0], [62.8, 669340.0], [62.9, 669342.0], [63.0, 669342.0], [63.1, 669567.0], [63.2, 669567.0], [63.3, 669732.0], [63.4, 669732.0], [63.5, 670395.0], [63.6, 670395.0], [63.7, 671617.0], [63.8, 671617.0], [63.9, 672007.0], [64.0, 672007.0], [64.1, 672542.0], [64.2, 672542.0], [64.3, 673208.0], [64.4, 673208.0], [64.5, 673220.0], [64.6, 673220.0], [64.7, 673942.0], [64.8, 673942.0], [64.9, 674073.0], [65.0, 674073.0], [65.1, 674285.0], [65.2, 674285.0], [65.3, 674797.0], [65.4, 674797.0], [65.5, 675580.0], [65.6, 675580.0], [65.7, 676065.0], [65.8, 676065.0], [65.9, 676244.0], [66.0, 676244.0], [66.1, 676373.0], [66.2, 676373.0], [66.3, 676616.0], [66.4, 676616.0], [66.5, 677137.0], [66.6, 677137.0], [66.7, 677181.0], [66.8, 677181.0], [66.9, 677216.0], [67.0, 677216.0], [67.1, 677307.0], [67.2, 677307.0], [67.3, 677416.0], [67.4, 677416.0], [67.5, 677468.0], [67.6, 677468.0], [67.7, 677679.0], [67.8, 677679.0], [67.9, 677679.0], [68.0, 677679.0], [68.1, 677830.0], [68.2, 677830.0], [68.3, 677901.0], [68.4, 677901.0], [68.5, 678017.0], [68.6, 678017.0], [68.7, 678026.0], [68.8, 678026.0], [68.9, 678052.0], [69.0, 678052.0], [69.1, 678227.0], [69.2, 678227.0], [69.3, 678288.0], [69.4, 678288.0], [69.5, 678444.0], [69.6, 678444.0], [69.7, 679734.0], [69.8, 679734.0], [69.9, 679961.0], [70.0, 679961.0], [70.1, 680646.0], [70.2, 680646.0], [70.3, 681205.0], [70.4, 681205.0], [70.5, 681411.0], [70.6, 681411.0], [70.7, 681675.0], [70.8, 681675.0], [70.9, 682103.0], [71.0, 682103.0], [71.1, 682171.0], [71.2, 682171.0], [71.3, 682779.0], [71.4, 682779.0], [71.5, 683476.0], [71.6, 683476.0], [71.7, 683872.0], [71.8, 683872.0], [71.9, 684794.0], [72.0, 684794.0], [72.1, 685354.0], [72.2, 685354.0], [72.3, 685510.0], [72.4, 685510.0], [72.5, 686028.0], [72.6, 686028.0], [72.7, 688135.0], [72.8, 688135.0], [72.9, 688222.0], [73.0, 688222.0], [73.1, 688575.0], [73.2, 688575.0], [73.3, 690209.0], [73.4, 690209.0], [73.5, 690316.0], [73.6, 690316.0], [73.7, 691249.0], [73.8, 691249.0], [73.9, 691567.0], [74.0, 691567.0], [74.1, 692303.0], [74.2, 692303.0], [74.3, 693019.0], [74.4, 693019.0], [74.5, 693846.0], [74.6, 693846.0], [74.7, 693907.0], [74.8, 693907.0], [74.9, 693931.0], [75.0, 693931.0], [75.1, 693945.0], [75.2, 693945.0], [75.3, 694034.0], [75.4, 694034.0], [75.5, 694102.0], [75.6, 694102.0], [75.7, 694164.0], [75.8, 694164.0], [75.9, 694212.0], [76.0, 694212.0], [76.1, 694430.0], [76.2, 694430.0], [76.3, 694511.0], [76.4, 694511.0], [76.5, 694552.0], [76.6, 694552.0], [76.7, 694591.0], [76.8, 694591.0], [76.9, 694630.0], [77.0, 694630.0], [77.1, 694902.0], [77.2, 694902.0], [77.3, 694909.0], [77.4, 694909.0], [77.5, 695475.0], [77.6, 695475.0], [77.7, 695575.0], [77.8, 695575.0], [77.9, 695731.0], [78.0, 695731.0], [78.1, 696331.0], [78.2, 696331.0], [78.3, 696808.0], [78.4, 696808.0], [78.5, 697209.0], [78.6, 697209.0], [78.7, 697486.0], [78.8, 697486.0], [78.9, 697713.0], [79.0, 697713.0], [79.1, 698118.0], [79.2, 698118.0], [79.3, 698844.0], [79.4, 698844.0], [79.5, 698938.0], [79.6, 698938.0], [79.7, 698967.0], [79.8, 698967.0], [79.9, 700416.0], [80.0, 700416.0], [80.1, 701273.0], [80.2, 701273.0], [80.3, 702269.0], [80.4, 702269.0], [80.5, 702417.0], [80.6, 702417.0], [80.7, 702650.0], [80.8, 702650.0], [80.9, 702952.0], [81.0, 702952.0], [81.1, 703537.0], [81.2, 703537.0], [81.3, 703544.0], [81.4, 703544.0], [81.5, 705206.0], [81.6, 705206.0], [81.7, 705226.0], [81.8, 705226.0], [81.9, 705950.0], [82.0, 705950.0], [82.1, 706232.0], [82.2, 706232.0], [82.3, 706302.0], [82.4, 706302.0], [82.5, 707851.0], [82.6, 707851.0], [82.7, 708063.0], [82.8, 708063.0], [82.9, 708270.0], [83.0, 708270.0], [83.1, 708479.0], [83.2, 708479.0], [83.3, 709814.0], [83.4, 709814.0], [83.5, 710035.0], [83.6, 710035.0], [83.7, 710151.0], [83.8, 710151.0], [83.9, 710559.0], [84.0, 710559.0], [84.1, 710691.0], [84.2, 710691.0], [84.3, 710732.0], [84.4, 710732.0], [84.5, 711283.0], [84.6, 711283.0], [84.7, 711813.0], [84.8, 711813.0], [84.9, 711835.0], [85.0, 711835.0], [85.1, 712197.0], [85.2, 712197.0], [85.3, 712595.0], [85.4, 712595.0], [85.5, 712754.0], [85.6, 712754.0], [85.7, 714023.0], [85.8, 714023.0], [85.9, 714178.0], [86.0, 714178.0], [86.1, 714245.0], [86.2, 714245.0], [86.3, 714812.0], [86.4, 714812.0], [86.5, 715130.0], [86.6, 715130.0], [86.7, 715185.0], [86.8, 715185.0], [86.9, 715204.0], [87.0, 715204.0], [87.1, 715283.0], [87.2, 715283.0], [87.3, 715346.0], [87.4, 715346.0], [87.5, 715533.0], [87.6, 715533.0], [87.7, 715626.0], [87.8, 715626.0], [87.9, 715890.0], [88.0, 715890.0], [88.1, 716129.0], [88.2, 716129.0], [88.3, 716237.0], [88.4, 716237.0], [88.5, 716411.0], [88.6, 716411.0], [88.7, 716435.0], [88.8, 716435.0], [88.9, 716684.0], [89.0, 716684.0], [89.1, 716726.0], [89.2, 716726.0], [89.3, 716933.0], [89.4, 716933.0], [89.5, 717036.0], [89.6, 717036.0], [89.7, 717083.0], [89.8, 717083.0], [89.9, 717333.0], [90.0, 717333.0], [90.1, 717416.0], [90.2, 717416.0], [90.3, 717647.0], [90.4, 717647.0], [90.5, 717798.0], [90.6, 717798.0], [90.7, 717926.0], [90.8, 717926.0], [90.9, 717990.0], [91.0, 717990.0], [91.1, 718045.0], [91.2, 718045.0], [91.3, 718232.0], [91.4, 718232.0], [91.5, 718253.0], [91.6, 718253.0], [91.7, 718339.0], [91.8, 718339.0], [91.9, 718340.0], [92.0, 718340.0], [92.1, 718589.0], [92.2, 718589.0], [92.3, 718783.0], [92.4, 718783.0], [92.5, 718907.0], [92.6, 718907.0], [92.7, 718936.0], [92.8, 718936.0], [92.9, 718994.0], [93.0, 718994.0], [93.1, 719368.0], [93.2, 719368.0], [93.3, 720119.0], [93.4, 720119.0], [93.5, 720602.0], [93.6, 720602.0], [93.7, 721215.0], [93.8, 721215.0], [93.9, 721678.0], [94.0, 721678.0], [94.1, 722735.0], [94.2, 722735.0], [94.3, 723715.0], [94.4, 723715.0], [94.5, 723821.0], [94.6, 723821.0], [94.7, 727004.0], [94.8, 727004.0], [94.9, 727075.0], [95.0, 727075.0], [95.1, 727467.0], [95.2, 727467.0], [95.3, 727468.0], [95.4, 727468.0], [95.5, 727645.0], [95.6, 727645.0], [95.7, 727861.0], [95.8, 727861.0], [95.9, 731830.0], [96.0, 731830.0], [96.1, 732774.0], [96.2, 732774.0], [96.3, 733514.0], [96.4, 733514.0], [96.5, 733816.0], [96.6, 733816.0], [96.7, 734207.0], [96.8, 734207.0], [96.9, 734548.0], [97.0, 734548.0], [97.1, 735101.0], [97.2, 735101.0], [97.3, 735784.0], [97.4, 735784.0], [97.5, 737587.0], [97.6, 737587.0], [97.7, 739531.0], [97.8, 739531.0], [97.9, 743155.0], [98.0, 743155.0], [98.1, 743343.0], [98.2, 743343.0], [98.3, 743495.0], [98.4, 743495.0], [98.5, 746917.0], [98.6, 746917.0], [98.7, 749090.0], [98.8, 749090.0], [98.9, 750091.0], [99.0, 750091.0], [99.1, 750237.0], [99.2, 750237.0], [99.3, 753529.0], [99.4, 753529.0], [99.5, 756413.0], [99.6, 756413.0], [99.7, 756918.0], [99.8, 756918.0], [99.9, 762568.0], [100.0, 762568.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[0.0, 62764.0], [0.1, 62764.0], [0.2, 62769.0], [0.3, 62769.0], [0.4, 62961.0], [0.5, 62961.0], [0.6, 62961.0], [0.7, 62965.0], [0.8, 62982.0], [0.9, 62982.0], [1.0, 62986.0], [1.1, 62986.0], [1.2, 62987.0], [1.3, 62987.0], [1.4, 62989.0], [1.5, 62989.0], [1.6, 63002.0], [1.7, 63002.0], [1.8, 63026.0], [1.9, 63026.0], [2.0, 63044.0], [2.1, 63044.0], [2.2, 66038.0], [2.3, 66038.0], [2.4, 66049.0], [2.5, 66049.0], [2.6, 66063.0], [2.7, 66063.0], [2.8, 66063.0], [2.9, 66077.0], [3.0, 66077.0], [3.1, 66080.0], [3.2, 66080.0], [3.3, 66097.0], [3.4, 66097.0], [3.5, 66098.0], [3.6, 66098.0], [3.7, 66100.0], [3.8, 66100.0], [3.9, 66110.0], [4.0, 66110.0], [4.1, 66112.0], [4.2, 66112.0], [4.3, 66114.0], [4.4, 66114.0], [4.5, 66123.0], [4.6, 66123.0], [4.7, 66156.0], [4.8, 66156.0], [4.9, 66159.0], [5.0, 66159.0], [5.1, 66172.0], [5.2, 66172.0], [5.3, 66174.0], [5.4, 66174.0], [5.5, 69856.0], [5.6, 69856.0], [5.7, 70247.0], [5.8, 70247.0], [5.9, 70268.0], [6.0, 70268.0], [6.1, 70641.0], [6.2, 70641.0], [6.3, 70787.0], [6.4, 70787.0], [6.5, 74838.0], [6.6, 74838.0], [6.7, 82748.0], [6.8, 82748.0], [6.9, 86210.0], [7.0, 86210.0], [7.1, 86438.0], [7.2, 86438.0], [7.3, 87193.0], [7.4, 87193.0], [7.5, 87196.0], [7.6, 87196.0], [7.7, 87397.0], [7.8, 87397.0], [7.9, 87425.0], [8.0, 87425.0], [8.1, 89988.0], [8.2, 89988.0], [8.3, 90694.0], [8.4, 90694.0], [8.5, 91866.0], [8.6, 91866.0], [8.7, 91957.0], [8.8, 92018.0], [8.9, 92018.0], [9.0, 93390.0], [9.1, 93390.0], [9.2, 93495.0], [9.3, 93495.0], [9.4, 93654.0], [9.5, 93654.0], [9.6, 93785.0], [9.7, 93785.0], [9.8, 94115.0], [9.9, 94115.0], [10.0, 94529.0], [10.1, 94529.0], [10.2, 94568.0], [10.3, 94568.0], [10.4, 94934.0], [10.5, 94934.0], [10.6, 95708.0], [10.7, 95708.0], [10.8, 96179.0], [10.9, 96179.0], [11.0, 97101.0], [11.1, 97101.0], [11.2, 100620.0], [11.3, 100620.0], [11.4, 100732.0], [11.5, 100732.0], [11.6, 102511.0], [11.7, 102511.0], [11.8, 102736.0], [11.9, 102736.0], [12.0, 102868.0], [12.1, 102868.0], [12.2, 104165.0], [12.3, 104165.0], [12.4, 114270.0], [12.5, 114270.0], [12.6, 114455.0], [12.7, 114455.0], [12.8, 123569.0], [12.9, 123569.0], [13.0, 123631.0], [13.1, 123631.0], [13.2, 123877.0], [13.3, 123877.0], [13.4, 134154.0], [13.5, 134154.0], [13.6, 134171.0], [13.7, 134171.0], [13.8, 134235.0], [13.9, 134235.0], [14.0, 137348.0], [14.1, 137348.0], [14.2, 137771.0], [14.3, 137771.0], [14.4, 138209.0], [14.5, 138209.0], [14.6, 138386.0], [14.7, 138386.0], [14.8, 138456.0], [14.9, 138456.0], [15.0, 141624.0], [15.1, 141624.0], [15.2, 142174.0], [15.3, 142174.0], [15.4, 142570.0], [15.5, 142570.0], [15.6, 142821.0], [15.7, 142821.0], [15.8, 142837.0], [15.9, 142837.0], [16.0, 143151.0], [16.1, 143151.0], [16.2, 143189.0], [16.3, 143189.0], [16.4, 143222.0], [16.5, 143222.0], [16.6, 143310.0], [16.7, 143310.0], [16.8, 144232.0], [16.9, 144232.0], [17.0, 144403.0], [17.1, 144403.0], [17.2, 144607.0], [17.3, 144607.0], [17.4, 144632.0], [17.5, 144632.0], [17.6, 144782.0], [17.7, 144782.0], [17.8, 145398.0], [17.9, 145398.0], [18.0, 145424.0], [18.1, 145424.0], [18.2, 145543.0], [18.3, 145543.0], [18.4, 145584.0], [18.5, 145584.0], [18.6, 145641.0], [18.7, 145641.0], [18.8, 146561.0], [18.9, 146561.0], [19.0, 146613.0], [19.1, 146613.0], [19.2, 146800.0], [19.3, 146800.0], [19.4, 146876.0], [19.5, 146876.0], [19.6, 149741.0], [19.7, 149741.0], [19.8, 149754.0], [19.9, 149754.0], [20.0, 161821.0], [20.1, 161821.0], [20.2, 161903.0], [20.3, 161903.0], [20.4, 163988.0], [20.5, 163988.0], [20.6, 166443.0], [20.7, 166443.0], [20.8, 175394.0], [20.9, 175394.0], [21.0, 175579.0], [21.1, 175579.0], [21.2, 175650.0], [21.3, 175650.0], [21.4, 175764.0], [21.5, 175764.0], [21.6, 181340.0], [21.7, 181340.0], [21.8, 181525.0], [21.9, 181525.0], [22.0, 186580.0], [22.1, 186580.0], [22.2, 186639.0], [22.3, 186639.0], [22.4, 186794.0], [22.5, 186794.0], [22.6, 186807.0], [22.7, 186807.0], [22.8, 186818.0], [22.9, 186818.0], [23.0, 186828.0], [23.1, 186828.0], [23.2, 186855.0], [23.3, 186855.0], [23.4, 186991.0], [23.5, 186991.0], [23.6, 187189.0], [23.7, 187189.0], [23.8, 187195.0], [23.9, 187195.0], [24.0, 187289.0], [24.1, 187289.0], [24.2, 187969.0], [24.3, 187969.0], [24.4, 187990.0], [24.5, 187990.0], [24.6, 188312.0], [24.7, 188312.0], [24.8, 188375.0], [24.9, 188375.0], [25.0, 188378.0], [25.1, 188378.0], [25.2, 188384.0], [25.3, 188384.0], [25.4, 188480.0], [25.5, 188480.0], [25.6, 188555.0], [25.7, 188555.0], [25.8, 188648.0], [25.9, 188648.0], [26.0, 189832.0], [26.1, 189832.0], [26.2, 190251.0], [26.3, 190251.0], [26.4, 190275.0], [26.5, 190275.0], [26.6, 190302.0], [26.7, 190302.0], [26.8, 190546.0], [26.9, 190546.0], [27.0, 190551.0], [27.1, 190551.0], [27.2, 190594.0], [27.3, 190594.0], [27.4, 202094.0], [27.5, 202094.0], [27.6, 214627.0], [27.7, 214627.0], [27.8, 217557.0], [27.9, 217557.0], [28.0, 220512.0], [28.1, 220512.0], [28.2, 220837.0], [28.3, 220837.0], [28.4, 222998.0], [28.5, 222998.0], [28.6, 224044.0], [28.7, 224044.0], [28.8, 226999.0], [28.9, 226999.0], [29.0, 227188.0], [29.1, 227188.0], [29.2, 227196.0], [29.3, 227196.0], [29.4, 227220.0], [29.5, 227220.0], [29.6, 227236.0], [29.7, 227236.0], [29.8, 227244.0], [29.9, 227244.0], [30.0, 227287.0], [30.1, 227287.0], [30.2, 227803.0], [30.3, 227803.0], [30.4, 227863.0], [30.5, 227863.0], [30.6, 228176.0], [30.7, 228176.0], [30.8, 228371.0], [30.9, 228371.0], [31.0, 228454.0], [31.1, 228454.0], [31.2, 232454.0], [31.3, 232454.0], [31.4, 232487.0], [31.5, 232487.0], [31.6, 233436.0], [31.7, 233436.0], [31.8, 233533.0], [31.9, 233533.0], [32.0, 233610.0], [32.1, 233610.0], [32.2, 234057.0], [32.3, 234057.0], [32.4, 234175.0], [32.5, 234175.0], [32.6, 234349.0], [32.7, 234349.0], [32.8, 234397.0], [32.9, 234397.0], [33.0, 235830.0], [33.1, 235830.0], [33.2, 236133.0], [33.3, 236133.0], [33.4, 239267.0], [33.5, 239267.0], [33.6, 240267.0], [33.7, 240267.0], [33.8, 240537.0], [33.9, 240537.0], [34.0, 240544.0], [34.1, 240544.0], [34.2, 240590.0], [34.3, 240590.0], [34.4, 243433.0], [34.5, 243433.0], [34.6, 249298.0], [34.7, 249298.0], [34.8, 249299.0], [34.9, 249299.0], [35.0, 249427.0], [35.1, 249427.0], [35.2, 252619.0], [35.3, 252619.0], [35.4, 253247.0], [35.5, 253247.0], [35.6, 257132.0], [35.7, 257132.0], [35.8, 257691.0], [35.9, 257691.0], [36.0, 257836.0], [36.1, 257836.0], [36.2, 257854.0], [36.3, 257854.0], [36.4, 258569.0], [36.5, 258569.0], [36.6, 267253.0], [36.7, 267253.0], [36.8, 269835.0], [36.9, 269835.0], [37.0, 270284.0], [37.1, 270284.0], [37.2, 271994.0], [37.3, 271994.0], [37.4, 273737.0], [37.5, 273737.0], [37.6, 273862.0], [37.7, 273862.0], [37.8, 273948.0], [37.9, 273948.0], [38.0, 274033.0], [38.1, 274033.0], [38.2, 274285.0], [38.3, 274285.0], [38.4, 274285.0], [38.5, 276572.0], [38.6, 276572.0], [38.7, 276573.0], [38.8, 276573.0], [38.9, 276658.0], [39.0, 276658.0], [39.1, 276731.0], [39.2, 276731.0], [39.3, 276958.0], [39.4, 276958.0], [39.5, 276960.0], [39.6, 276960.0], [39.7, 276971.0], [39.8, 276971.0], [39.9, 276972.0], [40.0, 276972.0], [40.1, 277550.0], [40.2, 277550.0], [40.3, 277920.0], [40.4, 277920.0], [40.5, 278552.0], [40.6, 278552.0], [40.7, 278870.0], [40.8, 278870.0], [40.9, 278976.0], [41.0, 278976.0], [41.1, 279005.0], [41.2, 279005.0], [41.3, 279038.0], [41.4, 279038.0], [41.5, 279074.0], [41.6, 279074.0], [41.7, 279292.0], [41.8, 279292.0], [41.9, 281786.0], [42.0, 281786.0], [42.1, 288599.0], [42.2, 288599.0], [42.3, 288793.0], [42.4, 288793.0], [42.5, 300359.0], [42.6, 300359.0], [42.7, 300544.0], [42.8, 300544.0], [42.9, 302520.0], [43.0, 302520.0], [43.1, 302647.0], [43.2, 302647.0], [43.3, 304293.0], [43.4, 304293.0], [43.5, 304636.0], [43.6, 304636.0], [43.7, 305914.0], [43.8, 305914.0], [43.9, 307153.0], [44.0, 307153.0], [44.1, 310610.0], [44.2, 310610.0], [44.3, 310754.0], [44.4, 310754.0], [44.5, 310890.0], [44.6, 310890.0], [44.7, 311384.0], [44.8, 311384.0], [44.9, 311521.0], [45.0, 311521.0], [45.1, 311578.0], [45.2, 311578.0], [45.3, 311717.0], [45.4, 311717.0], [45.5, 312191.0], [45.6, 312191.0], [45.7, 315031.0], [45.8, 315031.0], [45.9, 318263.0], [46.0, 318263.0], [46.1, 318297.0], [46.2, 318297.0], [46.3, 319453.0], [46.4, 319453.0], [46.5, 323011.0], [46.6, 323011.0], [46.7, 323145.0], [46.8, 323145.0], [46.9, 323943.0], [47.0, 323943.0], [47.1, 325069.0], [47.2, 325069.0], [47.3, 327299.0], [47.4, 327299.0], [47.5, 327390.0], [47.6, 327390.0], [47.7, 337462.0], [47.8, 337462.0], [47.9, 342697.0], [48.0, 342697.0], [48.1, 350368.0], [48.2, 350368.0], [48.3, 357784.0], [48.4, 357784.0], [48.5, 358408.0], [48.6, 358408.0], [48.7, 361824.0], [48.8, 361824.0], [48.9, 361951.0], [49.0, 361951.0], [49.1, 362268.0], [49.2, 362268.0], [49.3, 362544.0], [49.4, 362544.0], [49.5, 365414.0], [49.6, 365414.0], [49.7, 365904.0], [49.8, 365904.0], [49.9, 370891.0], [50.0, 370891.0], [50.1, 371028.0], [50.2, 371028.0], [50.3, 372196.0], [50.4, 372196.0], [50.5, 374042.0], [50.6, 374042.0], [50.7, 374186.0], [50.8, 374186.0], [50.9, 378206.0], [51.0, 378206.0], [51.1, 378300.0], [51.2, 378300.0], [51.3, 378396.0], [51.4, 378396.0], [51.5, 379855.0], [51.6, 379855.0], [51.7, 381942.0], [51.8, 381942.0], [51.9, 381961.0], [52.0, 381961.0], [52.1, 381965.0], [52.2, 381965.0], [52.3, 382049.0], [52.4, 382049.0], [52.5, 382903.0], [52.6, 382903.0], [52.7, 382941.0], [52.8, 382941.0], [52.9, 383490.0], [53.0, 383490.0], [53.1, 384635.0], [53.2, 384635.0], [53.3, 385931.0], [53.4, 385931.0], [53.5, 385944.0], [53.6, 385944.0], [53.7, 386057.0], [53.8, 386057.0], [53.9, 388341.0], [54.0, 388341.0], [54.1, 391539.0], [54.2, 391539.0], [54.3, 396791.0], [54.4, 396791.0], [54.5, 397191.0], [54.6, 397191.0], [54.7, 397520.0], [54.8, 397520.0], [54.9, 402472.0], [55.0, 402472.0], [55.1, 409465.0], [55.2, 409465.0], [55.3, 409488.0], [55.4, 409488.0], [55.5, 414930.0], [55.6, 414930.0], [55.7, 415228.0], [55.8, 415228.0], [55.9, 419162.0], [56.0, 419162.0], [56.1, 424489.0], [56.2, 424489.0], [56.3, 424675.0], [56.4, 424675.0], [56.5, 424897.0], [56.6, 424897.0], [56.7, 429211.0], [56.8, 429211.0], [56.9, 429299.0], [57.0, 429299.0], [57.1, 429514.0], [57.2, 429514.0], [57.3, 430190.0], [57.4, 430190.0], [57.5, 434230.0], [57.6, 434230.0], [57.7, 434332.0], [57.8, 434332.0], [57.9, 434835.0], [58.0, 434835.0], [58.1, 440426.0], [58.2, 440426.0], [58.3, 440828.0], [58.4, 440828.0], [58.5, 440852.0], [58.6, 440852.0], [58.7, 440955.0], [58.8, 440955.0], [58.9, 441557.0], [59.0, 441557.0], [59.1, 441710.0], [59.2, 441710.0], [59.3, 442458.0], [59.4, 442458.0], [59.5, 442481.0], [59.6, 442481.0], [59.7, 445151.0], [59.8, 445151.0], [59.9, 445645.0], [60.0, 445645.0], [60.1, 445851.0], [60.2, 445851.0], [60.3, 446372.0], [60.4, 446372.0], [60.5, 446891.0], [60.6, 446891.0], [60.7, 461730.0], [60.8, 461730.0], [60.9, 463752.0], [61.0, 463752.0], [61.1, 464102.0], [61.2, 464102.0], [61.3, 466464.0], [61.4, 466464.0], [61.5, 466481.0], [61.6, 466481.0], [61.7, 468686.0], [61.8, 468686.0], [61.9, 469085.0], [62.0, 469085.0], [62.1, 469097.0], [62.2, 469097.0], [62.3, 469326.0], [62.4, 469326.0], [62.5, 472080.0], [62.6, 472080.0], [62.7, 473091.0], [62.8, 473091.0], [62.9, 473118.0], [63.0, 473118.0], [63.1, 476562.0], [63.2, 476562.0], [63.3, 476671.0], [63.4, 476671.0], [63.5, 480205.0], [63.6, 480205.0], [63.7, 480262.0], [63.8, 480262.0], [63.9, 480269.0], [64.0, 480269.0], [64.1, 483348.0], [64.2, 483348.0], [64.3, 483379.0], [64.4, 483379.0], [64.5, 483440.0], [64.6, 483440.0], [64.7, 483464.0], [64.8, 483464.0], [64.9, 483634.0], [65.0, 483634.0], [65.1, 484191.0], [65.2, 484191.0], [65.3, 484199.0], [65.4, 484199.0], [65.5, 484453.0], [65.6, 484453.0], [65.7, 484711.0], [65.8, 484711.0], [65.9, 485244.0], [66.0, 485244.0], [66.1, 485788.0], [66.2, 485788.0], [66.3, 489487.0], [66.4, 489487.0], [66.5, 489811.0], [66.6, 489811.0], [66.7, 490372.0], [66.8, 490372.0], [66.9, 490522.0], [67.0, 490522.0], [67.1, 490726.0], [67.2, 490726.0], [67.3, 490738.0], [67.4, 490738.0], [67.5, 490750.0], [67.6, 490750.0], [67.7, 491086.0], [67.8, 491086.0], [67.9, 491409.0], [68.0, 491409.0], [68.1, 491435.0], [68.2, 491435.0], [68.3, 491612.0], [68.4, 491612.0], [68.5, 492059.0], [68.6, 492059.0], [68.7, 493230.0], [68.8, 493230.0], [68.9, 500697.0], [69.0, 500697.0], [69.1, 501992.0], [69.2, 501992.0], [69.3, 505799.0], [69.4, 505799.0], [69.5, 508958.0], [69.6, 508958.0], [69.7, 515450.0], [69.8, 515450.0], [69.9, 515596.0], [70.0, 515596.0], [70.1, 515958.0], [70.2, 515958.0], [70.3, 523725.0], [70.4, 523725.0], [70.5, 526161.0], [70.6, 526161.0], [70.7, 526295.0], [70.8, 526295.0], [70.9, 528017.0], [71.0, 528017.0], [71.1, 528761.0], [71.2, 528761.0], [71.3, 528818.0], [71.4, 528818.0], [71.5, 531190.0], [71.6, 531190.0], [71.7, 531469.0], [71.8, 531469.0], [71.9, 534773.0], [72.0, 534773.0], [72.1, 535085.0], [72.2, 535085.0], [72.3, 535294.0], [72.4, 535294.0], [72.5, 535310.0], [72.6, 535310.0], [72.7, 535313.0], [72.8, 535313.0], [72.9, 535384.0], [73.0, 535384.0], [73.1, 535513.0], [73.2, 535513.0], [73.3, 535705.0], [73.4, 535705.0], [73.5, 538802.0], [73.6, 538802.0], [73.7, 538833.0], [73.8, 538833.0], [73.9, 539470.0], [74.0, 539470.0], [74.1, 539485.0], [74.2, 539485.0], [74.3, 539801.0], [74.4, 539801.0], [74.5, 539857.0], [74.6, 539857.0], [74.7, 539893.0], [74.8, 539893.0], [74.9, 539900.0], [75.0, 539900.0], [75.1, 540438.0], [75.2, 540438.0], [75.3, 540474.0], [75.4, 540474.0], [75.5, 540697.0], [75.6, 540697.0], [75.7, 540725.0], [75.8, 540725.0], [75.9, 543743.0], [76.0, 543743.0], [76.1, 543899.0], [76.2, 543899.0], [76.3, 544068.0], [76.4, 544068.0], [76.5, 544348.0], [76.6, 544348.0], [76.7, 544384.0], [76.8, 544384.0], [76.9, 544490.0], [77.0, 544490.0], [77.1, 544566.0], [77.2, 544566.0], [77.3, 562941.0], [77.4, 562941.0], [77.5, 569806.0], [77.6, 569806.0], [77.7, 569849.0], [77.8, 569849.0], [77.9, 569867.0], [78.0, 569867.0], [78.1, 570017.0], [78.2, 570017.0], [78.3, 570033.0], [78.4, 570033.0], [78.5, 570295.0], [78.6, 570295.0], [78.7, 572623.0], [78.8, 572623.0], [78.9, 581878.0], [79.0, 581878.0], [79.1, 583855.0], [79.2, 583855.0], [79.3, 584022.0], [79.4, 584022.0], [79.5, 584041.0], [79.6, 584041.0], [79.7, 586872.0], [79.8, 586872.0], [79.9, 587038.0], [80.0, 587038.0], [80.1, 587044.0], [80.2, 587044.0], [80.3, 589378.0], [80.4, 589378.0], [80.5, 589738.0], [80.6, 589738.0], [80.7, 596240.0], [80.8, 596240.0], [80.9, 596262.0], [81.0, 596262.0], [81.1, 596478.0], [81.2, 596478.0], [81.3, 601637.0], [81.4, 601637.0], [81.5, 601728.0], [81.6, 601728.0], [81.7, 601783.0], [81.8, 601783.0], [81.9, 601789.0], [82.0, 601789.0], [82.1, 602302.0], [82.2, 602302.0], [82.3, 603002.0], [82.4, 603002.0], [82.5, 603161.0], [82.6, 603161.0], [82.7, 605619.0], [82.8, 605619.0], [82.9, 605730.0], [83.0, 605730.0], [83.1, 605942.0], [83.2, 605942.0], [83.3, 606382.0], [83.4, 606382.0], [83.5, 606523.0], [83.6, 606523.0], [83.7, 606826.0], [83.8, 606826.0], [83.9, 606946.0], [84.0, 606946.0], [84.1, 607298.0], [84.2, 607298.0], [84.3, 607470.0], [84.4, 607470.0], [84.5, 607499.0], [84.6, 607499.0], [84.7, 607522.0], [84.8, 607522.0], [84.9, 607676.0], [85.0, 607676.0], [85.1, 607680.0], [85.2, 607680.0], [85.3, 607872.0], [85.4, 607872.0], [85.5, 607912.0], [85.6, 607912.0], [85.7, 608218.0], [85.8, 608218.0], [85.9, 608272.0], [86.0, 608272.0], [86.1, 608300.0], [86.2, 608300.0], [86.3, 616065.0], [86.4, 616065.0], [86.5, 617903.0], [86.6, 617903.0], [86.7, 618527.0], [86.8, 618527.0], [86.9, 627348.0], [87.0, 627348.0], [87.1, 627720.0], [87.2, 627720.0], [87.3, 627746.0], [87.4, 627746.0], [87.5, 630462.0], [87.6, 630462.0], [87.7, 630816.0], [87.8, 630816.0], [87.9, 630874.0], [88.0, 630874.0], [88.1, 646185.0], [88.2, 646185.0], [88.3, 646469.0], [88.4, 646469.0], [88.5, 646503.0], [88.6, 646503.0], [88.7, 646703.0], [88.8, 646703.0], [88.9, 650675.0], [89.0, 650675.0], [89.1, 651800.0], [89.2, 651800.0], [89.3, 652141.0], [89.4, 652141.0], [89.5, 652381.0], [89.6, 652381.0], [89.7, 652633.0], [89.8, 652633.0], [89.9, 655832.0], [90.0, 655832.0], [90.1, 658963.0], [90.2, 658963.0], [90.3, 659748.0], [90.4, 659748.0], [90.5, 659750.0], [90.6, 659750.0], [90.7, 659962.0], [90.8, 659962.0], [90.9, 660176.0], [91.0, 660176.0], [91.1, 662784.0], [91.2, 662784.0], [91.3, 663068.0], [91.4, 663068.0], [91.5, 663923.0], [91.6, 663923.0], [91.7, 664290.0], [91.8, 664290.0], [91.9, 669161.0], [92.0, 669161.0], [92.1, 669321.0], [92.2, 669321.0], [92.3, 675628.0], [92.4, 675628.0], [92.5, 675798.0], [92.6, 675798.0], [92.7, 675801.0], [92.8, 675801.0], [92.9, 678503.0], [93.0, 678503.0], [93.1, 678565.0], [93.2, 678565.0], [93.3, 678880.0], [93.4, 678880.0], [93.5, 682061.0], [93.6, 682061.0], [93.7, 683549.0], [93.8, 683549.0], [93.9, 684381.0], [94.0, 684381.0], [94.1, 684469.0], [94.2, 684469.0], [94.3, 685055.0], [94.4, 685055.0], [94.5, 688514.0], [94.6, 688514.0], [94.7, 689211.0], [94.8, 689211.0], [94.9, 689254.0], [95.0, 689254.0], [95.1, 689260.0], [95.2, 689260.0], [95.3, 689465.0], [95.4, 689465.0], [95.5, 689515.0], [95.6, 689515.0], [95.7, 689726.0], [95.8, 689726.0], [95.9, 689926.0], [96.0, 689926.0], [96.1, 689935.0], [96.2, 689935.0], [96.3, 689958.0], [96.4, 689958.0], [96.5, 690637.0], [96.6, 690637.0], [96.7, 694500.0], [96.8, 694500.0], [96.9, 697838.0], [97.0, 697838.0], [97.1, 701760.0], [97.2, 701760.0], [97.3, 701804.0], [97.4, 701804.0], [97.5, 708426.0], [97.6, 708426.0], [97.7, 708641.0], [97.8, 708641.0], [97.9, 708684.0], [98.0, 708684.0], [98.1, 708761.0], [98.2, 708761.0], [98.3, 711409.0], [98.4, 711409.0], [98.5, 711472.0], [98.6, 711472.0], [98.7, 711628.0], [98.8, 711628.0], [98.9, 711930.0], [99.0, 711930.0], [99.1, 712591.0], [99.2, 712591.0], [99.3, 714405.0], [99.4, 714405.0], [99.5, 714662.0], [99.6, 714662.0], [99.7, 728315.0], [99.8, 728315.0], [99.9, 738015.0], [100.0, 738015.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 62700.0, "maxY": 9.0, "series": [{"data": [[621200.0, 1.0], [595600.0, 1.0], [634000.0, 2.0], [659600.0, 1.0], [586900.0, 1.0], [638100.0, 1.0], [578200.0, 1.0], [616600.0, 4.0], [655000.0, 1.0], [680600.0, 1.0], [706200.0, 1.0], [731800.0, 1.0], [659100.0, 1.0], [684700.0, 1.0], [643200.0, 1.0], [681600.0, 1.0], [656000.0, 1.0], [694400.0, 1.0], [608900.0, 1.0], [596100.0, 1.0], [762500.0, 1.0], [613000.0, 1.0], [600200.0, 1.0], [702600.0, 1.0], [617100.0, 1.0], [655500.0, 1.0], [693900.0, 3.0], [590000.0, 2.0], [602800.0, 1.0], [615600.0, 2.0], [705200.0, 2.0], [718000.0, 1.0], [756400.0, 1.0], [658100.0, 1.0], [585400.0, 1.0], [598200.0, 2.0], [636600.0, 2.0], [627900.0, 1.0], [743100.0, 1.0], [663200.0, 1.0], [676000.0, 1.0], [616100.0, 2.0], [654500.0, 1.0], [667300.0, 1.0], [718500.0, 1.0], [756900.0, 1.0], [620200.0, 1.0], [607400.0, 1.0], [645800.0, 1.0], [709800.0, 1.0], [585900.0, 1.0], [611500.0, 1.0], [662700.0, 1.0], [675500.0, 1.0], [739500.0, 1.0], [674000.0, 1.0], [601300.0, 1.0], [626900.0, 1.0], [618200.0, 1.0], [631000.0, 1.0], [656600.0, 1.0], [707800.0, 1.0], [720600.0, 1.0], [609500.0, 2.0], [660700.0, 1.0], [737500.0, 1.0], [644800.0, 1.0], [721600.0, 1.0], [661700.0, 1.0], [589000.0, 1.0], [324200.0, 1.0], [640200.0, 1.0], [717000.0, 2.0], [682700.0, 1.0], [695500.0, 1.0], [578800.0, 1.0], [604400.0, 1.0], [617200.0, 1.0], [681200.0, 1.0], [694000.0, 1.0], [595700.0, 1.0], [621300.0, 1.0], [672500.0, 1.0], [685300.0, 1.0], [659700.0, 1.0], [698100.0, 1.0], [723700.0, 1.0], [574200.0, 1.0], [638200.0, 1.0], [676600.0, 1.0], [702200.0, 1.0], [727800.0, 1.0], [422000.0, 1.0], [578300.0, 1.0], [616700.0, 1.0], [706300.0, 1.0], [600800.0, 1.0], [639200.0, 1.0], [677600.0, 2.0], [604900.0, 1.0], [617700.0, 1.0], [720100.0, 1.0], [694500.0, 3.0], [583400.0, 1.0], [634600.0, 1.0], [651500.0, 1.0], [638700.0, 2.0], [677100.0, 2.0], [664300.0, 1.0], [715500.0, 1.0], [592400.0, 1.0], [605200.0, 1.0], [324100.0, 1.0], [630800.0, 1.0], [622100.0, 1.0], [698900.0, 2.0], [651800.0, 1.0], [677400.0, 2.0], [715800.0, 1.0], [690200.0, 1.0], [527900.0, 1.0], [416000.0, 1.0], [630300.0, 1.0], [668700.0, 1.0], [732700.0, 1.0], [601600.0, 1.0], [640000.0, 1.0], [678400.0, 1.0], [665600.0, 2.0], [691200.0, 1.0], [580100.0, 1.0], [669700.0, 1.0], [609800.0, 3.0], [613900.0, 1.0], [677900.0, 1.0], [703500.0, 2.0], [574000.0, 1.0], [650800.0, 1.0], [638000.0, 1.0], [714800.0, 1.0], [727600.0, 1.0], [590900.0, 2.0], [603700.0, 1.0], [616500.0, 1.0], [654900.0, 1.0], [629300.0, 1.0], [718900.0, 3.0], [620600.0, 2.0], [646200.0, 1.0], [697400.0, 1.0], [596000.0, 1.0], [634400.0, 1.0], [711200.0, 1.0], [612900.0, 1.0], [651300.0, 2.0], [715300.0, 1.0], [642600.0, 1.0], [693800.0, 1.0], [408600.0, 1.0], [421400.0, 1.0], [633900.0, 1.0], [710700.0, 1.0], [581200.0, 1.0], [589400.0, 2.0], [615000.0, 2.0], [627800.0, 1.0], [640600.0, 1.0], [666200.0, 1.0], [717400.0, 1.0], [670300.0, 1.0], [564800.0, 1.0], [667200.0, 1.0], [581700.0, 1.0], [607300.0, 1.0], [594500.0, 1.0], [598600.0, 1.0], [637000.0, 1.0], [662600.0, 1.0], [688200.0, 1.0], [577100.0, 1.0], [653900.0, 1.0], [641100.0, 2.0], [717900.0, 2.0], [692300.0, 1.0], [678000.0, 3.0], [665200.0, 1.0], [716400.0, 2.0], [618100.0, 2.0], [443700.0, 1.0], [643700.0, 2.0], [630900.0, 1.0], [682100.0, 2.0], [669300.0, 2.0], [694900.0, 2.0], [558200.0, 1.0], [660600.0, 2.0], [711800.0, 2.0], [750200.0, 1.0], [382000.0, 1.0], [690300.0, 1.0], [648800.0, 1.0], [640100.0, 1.0], [716900.0, 1.0], [605800.0, 1.0], [593000.0, 1.0], [631400.0, 1.0], [657000.0, 2.0], [708200.0, 1.0], [695400.0, 1.0], [733800.0, 1.0], [609900.0, 1.0], [622700.0, 2.0], [648300.0, 1.0], [673900.0, 1.0], [589200.0, 1.0], [653200.0, 1.0], [695700.0, 1.0], [746900.0, 1.0], [584600.0, 1.0], [610200.0, 1.0], [597400.0, 1.0], [674200.0, 1.0], [614300.0, 1.0], [601500.0, 1.0], [627100.0, 1.0], [716700.0, 1.0], [585600.0, 1.0], [611200.0, 1.0], [598400.0, 1.0], [636800.0, 1.0], [649600.0, 1.0], [426700.0, 1.0], [717700.0, 1.0], [743300.0, 1.0], [522700.0, 1.0], [307400.0, 1.0], [619400.0, 1.0], [645000.0, 1.0], [683400.0, 1.0], [585100.0, 1.0], [636300.0, 1.0], [674700.0, 1.0], [596400.0, 1.0], [673200.0, 2.0], [686000.0, 1.0], [660400.0, 1.0], [698800.0, 1.0], [364500.0, 1.0], [750000.0, 1.0], [415700.0, 1.0], [651700.0, 1.0], [626100.0, 1.0], [677300.0, 1.0], [702900.0, 1.0], [643000.0, 1.0], [681400.0, 1.0], [655800.0, 1.0], [694200.0, 1.0], [424400.0, 1.0], [583100.0, 1.0], [443600.0, 1.0], [685500.0, 1.0], [644000.0, 1.0], [708000.0, 1.0], [584100.0, 1.0], [609700.0, 1.0], [596900.0, 1.0], [648100.0, 1.0], [635300.0, 1.0], [660900.0, 1.0], [712100.0, 1.0], [677800.0, 1.0], [355800.0, 1.0], [716200.0, 1.0], [579500.0, 1.0], [592300.0, 1.0], [630700.0, 1.0], [642000.0, 2.0], [620500.0, 1.0], [658900.0, 1.0], [710100.0, 1.0], [735700.0, 1.0], [637400.0, 1.0], [714200.0, 1.0], [727000.0, 2.0], [628700.0, 1.0], [679900.0, 1.0], [718300.0, 2.0], [664000.0, 2.0], [715200.0, 2.0], [702400.0, 1.0], [414700.0, 1.0], [616900.0, 2.0], [604100.0, 1.0], [642500.0, 1.0], [719300.0, 1.0], [621000.0, 1.0], [633800.0, 1.0], [659400.0, 1.0], [346600.0, 1.0], [710600.0, 1.0], [749000.0, 1.0], [676300.0, 1.0], [663500.0, 1.0], [636400.0, 1.0], [662000.0, 1.0], [700400.0, 1.0], [589300.0, 2.0], [653300.0, 1.0], [666100.0, 1.0], [717300.0, 1.0], [593400.0, 1.0], [734200.0, 1.0], [412400.0, 1.0], [584700.0, 1.0], [648700.0, 1.0], [712700.0, 1.0], [296700.0, 1.0], [696800.0, 1.0], [598500.0, 1.0], [688100.0, 1.0], [615400.0, 1.0], [641000.0, 2.0], [743400.0, 1.0], [645100.0, 1.0], [696300.0, 1.0], [662800.0, 1.0], [714000.0, 1.0], [701200.0, 1.0], [615700.0, 3.0], [590100.0, 2.0], [679700.0, 1.0], [666900.0, 1.0], [683800.0, 1.0], [598300.0, 1.0], [623900.0, 1.0], [672000.0, 1.0], [367500.0, 1.0], [586500.0, 1.0], [612100.0, 1.0], [650500.0, 1.0], [603400.0, 1.0], [667400.0, 2.0], [693000.0, 1.0], [607500.0, 2.0], [658700.0, 1.0], [722700.0, 1.0], [618800.0, 1.0], [606000.0, 1.0], [631600.0, 1.0], [708400.0, 1.0], [721200.0, 1.0], [610100.0, 1.0], [597300.0, 1.0], [661300.0, 1.0], [712500.0, 1.0], [678200.0, 2.0], [716600.0, 1.0], [365200.0, 1.0], [656700.0, 1.0], [669500.0, 1.0], [733500.0, 1.0], [589600.0, 2.0], [300700.0, 3.0], [628000.0, 1.0], [717600.0, 1.0], [734500.0, 1.0], [309400.0, 1.0], [597800.0, 1.0], [623400.0, 1.0], [691500.0, 1.0], [587600.0, 1.0], [613200.0, 3.0], [626000.0, 1.0], [677200.0, 1.0], [664400.0, 2.0], [715600.0, 1.0], [617300.0, 1.0], [591700.0, 1.0], [668500.0, 1.0], [694100.0, 2.0], [723800.0, 1.0], [663900.0, 2.0], [715100.0, 2.0], [753500.0, 1.0], [596800.0, 1.0], [425900.0, 2.0], [639300.0, 1.0], [716100.0, 1.0], [592200.0, 1.0], [694600.0, 1.0], [364200.0, 1.0], [583500.0, 2.0], [441000.0, 1.0], [647500.0, 1.0], [671600.0, 1.0], [658800.0, 1.0], [710000.0, 1.0], [697200.0, 1.0], [586100.0, 3.0], [434100.0, 1.0], [714100.0, 1.0], [688500.0, 1.0], [308400.0, 1.0], [641400.0, 1.0], [718200.0, 2.0], [423600.0, 1.0], [594300.0, 1.0], [735100.0, 1.0], [629600.0, 1.0], [620900.0, 2.0], [608100.0, 1.0], [633700.0, 1.0], [710500.0, 1.0], [697700.0, 1.0], [599400.0, 1.0], [612200.0, 1.0], [676200.0, 1.0], [663400.0, 1.0], [727400.0, 2.0], [616300.0, 1.0], [718700.0, 1.0], [705900.0, 1.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[138400.0, 1.0], [544400.0, 1.0], [141600.0, 1.0], [570000.0, 2.0], [357700.0, 1.0], [535700.0, 1.0], [440900.0, 1.0], [485700.0, 1.0], [539800.0, 3.0], [531100.0, 1.0], [607900.0, 1.0], [528000.0, 1.0], [142500.0, 1.0], [630400.0, 1.0], [365900.0, 1.0], [190500.0, 3.0], [391500.0, 1.0], [660100.0, 1.0], [304200.0, 1.0], [310600.0, 1.0], [82700.0, 1.0], [342600.0, 1.0], [664200.0, 1.0], [361800.0, 1.0], [97100.0, 1.0], [483400.0, 2.0], [489800.0, 1.0], [515400.0, 1.0], [538800.0, 2.0], [146600.0, 1.0], [374100.0, 1.0], [606900.0, 1.0], [463700.0, 1.0], [476500.0, 1.0], [274000.0, 1.0], [572600.0, 1.0], [440400.0, 1.0], [602300.0, 1.0], [446800.0, 1.0], [485200.0, 1.0], [491600.0, 1.0], [535200.0, 1.0], [350300.0, 1.0], [714400.0, 1.0], [446300.0, 1.0], [484700.0, 1.0], [70600.0, 1.0], [581800.0, 1.0], [607400.0, 2.0], [365400.0, 1.0], [378200.0, 1.0], [384600.0, 1.0], [534700.0, 1.0], [662700.0, 1.0], [281700.0, 1.0], [186800.0, 4.0], [738000.0, 1.0], [562900.0, 1.0], [441700.0, 1.0], [228400.0, 1.0], [505700.0, 1.0], [424800.0, 1.0], [711900.0, 1.0], [181300.0, 1.0], [385900.0, 2.0], [222900.0, 1.0], [87300.0, 1.0], [93700.0, 1.0], [605900.0, 1.0], [445800.0, 1.0], [134200.0, 1.0], [540400.0, 2.0], [278900.0, 1.0], [188600.0, 1.0], [544500.0, 1.0], [233400.0, 1.0], [659700.0, 2.0], [249400.0, 1.0], [252600.0, 1.0], [587000.0, 2.0], [689400.0, 1.0], [370800.0, 1.0], [539900.0, 1.0], [434800.0, 1.0], [138300.0, 1.0], [144700.0, 1.0], [163900.0, 1.0], [434300.0, 1.0], [234300.0, 2.0], [694500.0, 1.0], [270200.0, 1.0], [276600.0, 1.0], [596200.0, 2.0], [315000.0, 1.0], [86400.0, 1.0], [711400.0, 2.0], [468600.0, 1.0], [689900.0, 3.0], [500600.0, 1.0], [728300.0, 1.0], [311300.0, 1.0], [630800.0, 2.0], [166400.0, 1.0], [682000.0, 1.0], [362500.0, 1.0], [220800.0, 1.0], [227200.0, 4.0], [224000.0, 1.0], [233600.0, 1.0], [484100.0, 2.0], [490500.0, 1.0], [651800.0, 1.0], [358400.0, 1.0], [540700.0, 1.0], [300300.0, 1.0], [601600.0, 1.0], [186500.0, 1.0], [605700.0, 1.0], [618500.0, 1.0], [228100.0, 1.0], [473100.0, 1.0], [302600.0, 1.0], [100700.0, 1.0], [652300.0, 1.0], [469000.0, 2.0], [276500.0, 2.0], [586800.0, 1.0], [161800.0, 1.0], [689200.0, 3.0], [430100.0, 1.0], [257800.0, 2.0], [543800.0, 1.0], [278800.0, 1.0], [310800.0, 1.0], [607800.0, 1.0], [483600.0, 1.0], [271900.0, 1.0], [323100.0, 1.0], [175500.0, 1.0], [188300.0, 4.0], [419100.0, 1.0], [689700.0, 1.0], [62700.0, 2.0], [274200.0, 1.0], [91800.0, 1.0], [93400.0, 1.0], [544300.0, 2.0], [434200.0, 1.0], [608300.0, 1.0], [114200.0, 1.0], [646700.0, 1.0], [123800.0, 1.0], [273700.0, 1.0], [144400.0, 1.0], [606800.0, 1.0], [312100.0, 1.0], [202000.0, 1.0], [234000.0, 1.0], [253200.0, 1.0], [327200.0, 1.0], [606300.0, 1.0], [442400.0, 2.0], [708700.0, 1.0], [142100.0, 1.0], [145300.0, 1.0], [616000.0, 1.0], [186900.0, 1.0], [397100.0, 1.0], [94100.0, 1.0], [95700.0, 1.0], [235800.0, 1.0], [469300.0, 1.0], [669300.0, 1.0], [583800.0, 1.0], [382000.0, 1.0], [484400.0, 1.0], [323900.0, 1.0], [217500.0, 1.0], [601700.0, 3.0], [227100.0, 2.0], [627300.0, 1.0], [233500.0, 1.0], [678500.0, 2.0], [490300.0, 1.0], [515900.0, 1.0], [66000.0, 7.0], [371000.0, 1.0], [409400.0, 2.0], [102800.0, 1.0], [123600.0, 1.0], [143200.0, 1.0], [678800.0, 1.0], [239200.0, 1.0], [267200.0, 1.0], [472000.0, 1.0], [137700.0, 1.0], [311500.0, 2.0], [381900.0, 3.0], [388300.0, 1.0], [589700.0, 1.0], [490700.0, 3.0], [70700.0, 1.0], [89900.0, 1.0], [102700.0, 1.0], [480200.0, 3.0], [123500.0, 1.0], [300500.0, 1.0], [596400.0, 1.0], [711600.0, 1.0], [186600.0, 1.0], [189800.0, 1.0], [540600.0, 1.0], [655800.0, 1.0], [386000.0, 1.0], [424400.0, 1.0], [659900.0, 1.0], [276700.0, 1.0], [528800.0, 1.0], [605600.0, 1.0], [161900.0, 1.0], [62900.0, 6.0], [69800.0, 1.0], [279000.0, 3.0], [304600.0, 1.0], [87400.0, 1.0], [690600.0, 1.0], [90600.0, 1.0], [362200.0, 1.0], [617900.0, 1.0], [669100.0, 1.0], [278500.0, 1.0], [146800.0, 2.0], [175600.0, 1.0], [188400.0, 1.0], [543700.0, 1.0], [646100.0, 1.0], [464100.0, 1.0], [658900.0, 1.0], [483300.0, 2.0], [249200.0, 2.0], [508900.0, 1.0], [535000.0, 1.0], [663000.0, 1.0], [675800.0, 1.0], [402400.0, 1.0], [415200.0, 1.0], [440800.0, 2.0], [603100.0, 1.0], [466400.0, 2.0], [492000.0, 1.0], [273900.0, 1.0], [305900.0, 1.0], [234100.0, 1.0], [240500.0, 3.0], [269800.0, 1.0], [531400.0, 1.0], [569800.0, 3.0], [608200.0, 2.0], [685000.0, 1.0], [697800.0, 1.0], [94500.0, 2.0], [96100.0, 1.0], [535500.0, 1.0], [102500.0, 1.0], [104100.0, 1.0], [145400.0, 1.0], [288500.0, 1.0], [190200.0, 2.0], [589300.0, 1.0], [627700.0, 2.0], [708600.0, 2.0], [374000.0, 1.0], [277500.0, 1.0], [143100.0, 2.0], [607200.0, 1.0], [181500.0, 1.0], [187900.0, 2.0], [318200.0, 2.0], [337400.0, 1.0], [92000.0, 1.0], [93600.0, 1.0], [114400.0, 1.0], [683500.0, 1.0], [491000.0, 1.0], [145600.0, 1.0], [327300.0, 1.0], [675600.0, 1.0], [187200.0, 1.0], [372100.0, 1.0], [526100.0, 1.0], [461700.0, 1.0], [257600.0, 1.0], [277900.0, 1.0], [544000.0, 1.0], [143300.0, 1.0], [146500.0, 1.0], [149700.0, 2.0], [646400.0, 1.0], [175300.0, 1.0], [535300.0, 3.0], [236100.0, 1.0], [701700.0, 1.0], [501900.0, 1.0], [258500.0, 1.0], [273800.0, 1.0], [539400.0, 2.0], [325000.0, 1.0], [87100.0, 2.0], [91900.0, 1.0], [607500.0, 1.0], [684300.0, 1.0], [491400.0, 2.0], [144200.0, 1.0], [311700.0, 1.0], [708400.0, 1.0], [214600.0, 1.0], [240200.0, 1.0], [243400.0, 1.0], [712500.0, 1.0], [652600.0, 1.0], [528700.0, 1.0], [429200.0, 2.0], [493200.0, 1.0], [307100.0, 1.0], [186700.0, 1.0], [396700.0, 1.0], [441500.0, 1.0], [606500.0, 1.0], [228300.0, 1.0], [257100.0, 1.0], [70200.0, 2.0], [86200.0, 1.0], [379800.0, 1.0], [100600.0, 1.0], [424600.0, 1.0], [276900.0, 4.0], [142800.0, 2.0], [302500.0, 1.0], [232400.0, 2.0], [279200.0, 1.0], [570200.0, 1.0], [445600.0, 1.0], [663900.0, 1.0], [689500.0, 1.0], [134100.0, 2.0], [137300.0, 1.0], [584000.0, 2.0], [310700.0, 1.0], [175700.0, 1.0], [361900.0, 1.0], [188500.0, 1.0], [220500.0, 1.0], [226900.0, 1.0], [445100.0, 1.0], [652100.0, 1.0], [515500.0, 1.0], [66100.0, 9.0], [319400.0, 1.0], [93300.0, 1.0], [94900.0, 1.0], [383400.0, 1.0], [473000.0, 1.0], [138200.0, 1.0], [144600.0, 2.0], [607600.0, 2.0], [684400.0, 1.0], [382900.0, 2.0], [414900.0, 1.0], [227800.0, 2.0], [675700.0, 1.0], [688500.0, 1.0], [523700.0, 1.0], [526200.0, 1.0], [603000.0, 1.0], [145500.0, 2.0], [288700.0, 1.0], [187100.0, 2.0], [190300.0, 1.0], [378300.0, 2.0], [397500.0, 1.0], [429500.0, 1.0], [646500.0, 1.0], [63000.0, 3.0], [74800.0, 1.0], [323000.0, 1.0], [650600.0, 1.0], [701800.0, 1.0], [714600.0, 1.0], [476600.0, 1.0], [489400.0, 1.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 762500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1000.0, "series": [{"data": [[2.0, 1000.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 24.5, "minX": 1.53039066E12, "maxY": 500.0, "series": [{"data": [[1.5303912E12, 466.3953488372093], [1.5303909E12, 500.0], [1.53039186E12, 116.51851851851848], [1.53039156E12, 349.0], [1.53039126E12, 463.44444444444446], [1.53039096E12, 496.75609756097566], [1.53039192E12, 69.02439024390243], [1.53039066E12, 317.5], [1.53039162E12, 299.0158730158731], [1.53039132E12, 457.0975609756098], [1.53039102E12, 487.99999999999994], [1.53039198E12, 24.5], [1.53039072E12, 468.05555555555554], [1.53039168E12, 244.5], [1.53039138E12, 445.25423728813564], [1.53039108E12, 477.63414634146346], [1.53039078E12, 500.0], [1.53039174E12, 200.5], [1.53039144E12, 427.95744680851067], [1.53039114E12, 468.14893617021283], [1.53039084E12, 500.0], [1.5303918E12, 161.5], [1.5303915E12, 387.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53039198E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 65687.37499999999, "minX": 1.0, "maxY": 762568.0, "series": [{"data": [[2.0, 558229.0], [3.0, 584730.0], [4.0, 584143.0], [5.0, 583161.0], [6.0, 586970.0], [7.0, 583512.0], [8.0, 585444.0], [9.0, 585131.0], [10.0, 578857.0], [11.0, 564893.0], [12.0, 578276.0], [13.0, 600875.0], [14.0, 601375.0], [15.0, 615064.0], [16.0, 621315.0], [17.0, 605251.0], [18.0, 608152.0], [19.0, 581765.0], [20.0, 600225.0], [21.0, 595600.0], [22.0, 617776.0], [23.0, 597320.0], [24.0, 630960.0], [25.0, 597437.0], [26.0, 596955.0], [27.0, 607499.0], [28.0, 596460.0], [29.0, 595747.0], [30.0, 583440.0], [31.0, 607564.0], [33.0, 598632.0], [32.0, 604196.0], [35.0, 589308.0], [34.0, 594501.0], [37.0, 627140.0], [36.0, 628054.0], [39.0, 627904.0], [38.0, 615491.0], [41.0, 574257.0], [40.0, 581275.0], [43.0, 586528.0], [42.0, 592233.0], [45.0, 618176.0], [44.0, 586166.0], [47.0, 592486.0], [46.0, 591765.0], [49.0, 589233.0], [48.0, 598514.0], [51.0, 641435.0], [50.0, 587613.0], [53.0, 589671.0], [52.0, 642550.0], [55.0, 642068.0], [54.0, 589467.0], [57.0, 589650.0], [56.0, 643756.0], [59.0, 590114.0], [58.0, 643059.0], [61.0, 641059.0], [60.0, 641141.0], [63.0, 637452.0], [62.0, 640650.0], [67.0, 585636.0], [66.0, 626112.0], [65.0, 598469.0], [64.0, 637017.0], [71.0, 616546.0], [70.0, 626009.0], [69.0, 613938.0], [68.0, 592349.0], [75.0, 613097.0], [74.0, 636648.0], [73.0, 616132.0], [72.0, 627810.0], [79.0, 578358.0], [78.0, 579537.0], [77.0, 609856.5], [83.0, 610131.0], [82.0, 609878.0], [81.0, 611296.0], [80.0, 577169.0], [87.0, 593457.0], [86.0, 594326.0], [85.0, 598218.0], [84.0, 609717.0], [91.0, 593061.0], [90.0, 636362.0], [89.0, 596135.0], [88.0, 596037.0], [95.0, 620695.0], [94.0, 597851.0], [93.0, 607521.0], [92.0, 598325.0], [99.0, 633994.0], [98.0, 596851.0], [97.0, 590911.0], [96.0, 634029.0], [103.0, 604957.0], [102.0, 590160.0], [101.0, 613246.0], [100.0, 633704.0], [107.0, 620245.0], [106.0, 629628.0], [105.0, 589438.0], [104.0, 613294.0], [111.0, 601525.0], [110.0, 655088.0], [109.0, 655590.0], [108.0, 589343.0], [115.0, 651765.0], [114.0, 651877.0], [113.0, 612249.0], [112.0, 615600.0], [119.0, 620921.0], [118.0, 618218.0], [117.0, 646283.0], [116.0, 620536.0], [123.0, 623998.0], [122.0, 620967.0], [121.0, 629397.0], [120.0, 638083.0], [127.0, 616901.0], [126.0, 616916.0], [125.0, 700416.0], [124.0, 623461.0], [135.0, 615777.0], [134.0, 616319.0], [133.0, 620839.5], [131.0, 616637.0], [130.0, 617112.0], [129.0, 618162.0], [128.0, 617208.0], [143.0, 614333.0], [142.0, 610258.0], [141.0, 615716.0], [140.0, 619479.0], [139.0, 615603.0], [138.0, 616601.0], [137.0, 616678.0], [136.0, 616770.0], [151.0, 615700.0], [150.0, 664496.0], [149.0, 666252.0], [148.0, 668789.0], [147.0, 621209.0], [146.0, 643747.0], [145.0, 675580.0], [144.0, 622193.0], [159.0, 660945.0], [158.0, 603751.0], [157.0, 653236.0], [156.0, 660691.0], [155.0, 659704.0], [154.0, 658832.0], [153.0, 658111.0], [152.0, 640267.0], [167.0, 607303.0], [166.0, 649675.0], [165.0, 648822.0], [164.0, 655851.0], [163.0, 638721.0], [162.0, 640063.0], [161.0, 647595.0], [160.0, 638258.0], [175.0, 630797.0], [174.0, 638140.0], [173.0, 630319.0], [172.0, 589020.0], [171.0, 639200.0], [170.0, 642099.0], [169.0, 604469.0], [168.0, 641034.0], [183.0, 606036.0], [182.0, 609955.0], [181.0, 612138.0], [180.0, 616146.0], [179.0, 631669.0], [178.0, 574029.0], [177.0, 590999.0], [176.0, 634606.0], [191.0, 613297.0], [190.0, 662848.0], [189.0, 663422.0], [188.0, 639304.0], [187.0, 605813.0], [186.0, 663967.0], [185.0, 609588.0], [184.0, 609579.0], [199.0, 664318.0], [198.0, 615009.0], [197.0, 658759.0], [196.0, 617396.0], [195.0, 608918.0], [194.0, 612993.0], [193.0, 663555.0], [192.0, 616690.0], [207.0, 660448.0], [206.0, 661374.0], [205.0, 618824.0], [204.0, 664001.0], [203.0, 659687.0], [202.0, 611526.0], [201.0, 664021.0], [200.0, 663996.0], [215.0, 654527.0], [214.0, 654925.0], [213.0, 650808.0], [212.0, 630805.0], [211.0, 601667.0], [210.0, 653363.0], [209.0, 660646.0], [208.0, 635393.0], [223.0, 645140.0], [222.0, 636867.0], [221.0, 634451.0], [220.0, 641112.0], [219.0, 686028.0], [218.0, 598279.0], [217.0, 658920.0], [216.0, 603452.0], [231.0, 670395.0], [230.0, 644033.0], [229.0, 662045.0], [228.0, 651325.0], [227.0, 645042.0], [226.0, 626984.0], [225.0, 622790.0], [224.0, 653927.0], [239.0, 669340.0], [238.0, 643255.0], [237.0, 660777.0], [236.0, 656084.0], [235.0, 666928.0], [234.0, 667204.0], [233.0, 669732.0], [232.0, 667372.0], [247.0, 677468.0], [246.0, 727468.0], [245.0, 693019.0], [244.0, 668539.0], [243.0, 673208.0], [242.0, 674073.0], [241.0, 669342.0], [240.0, 678227.0], [255.0, 667455.0], [254.0, 665632.0], [253.0, 665673.0], [252.0, 669567.0], [251.0, 664498.0], [250.0, 723715.0], [249.0, 706302.0], [248.0, 673942.0], [270.0, 638775.0], [271.0, 622725.0], [269.0, 677679.0], [268.0, 640183.0], [267.0, 682171.0], [266.0, 672007.0], [265.0, 666115.0], [264.0, 633826.0], [263.0, 634029.0], [257.0, 648119.0], [256.0, 753529.0], [259.0, 694630.0], [258.0, 696331.0], [262.0, 676373.0], [261.0, 648364.0], [260.0, 636650.0], [286.0, 679734.0], [287.0, 674285.0], [285.0, 677137.0], [284.0, 677830.0], [283.0, 683872.0], [282.0, 680646.0], [281.0, 685354.0], [280.0, 677181.0], [279.0, 677416.0], [273.0, 678017.0], [272.0, 681675.0], [275.0, 712197.0], [274.0, 678026.0], [278.0, 677216.0], [277.0, 677679.0], [276.0, 681411.0], [302.0, 695575.0], [303.0, 695475.0], [301.0, 750237.0], [300.0, 743343.0], [299.0, 697209.0], [298.0, 698967.0], [297.0, 702952.0], [296.0, 705206.0], [295.0, 671617.0], [289.0, 674797.0], [288.0, 683476.0], [291.0, 712754.0], [290.0, 693907.0], [294.0, 691249.0], [293.0, 693989.5], [318.0, 734207.0], [319.0, 732774.0], [317.0, 733514.0], [316.0, 756918.0], [315.0, 743495.0], [314.0, 693931.0], [313.0, 693846.0], [312.0, 694212.0], [311.0, 694552.0], [305.0, 749090.0], [304.0, 727861.0], [307.0, 762568.0], [306.0, 750091.0], [310.0, 694902.0], [309.0, 756413.0], [308.0, 694909.0], [334.0, 678444.0], [335.0, 735101.0], [333.0, 716933.0], [332.0, 727467.0], [331.0, 708270.0], [330.0, 733816.0], [329.0, 682103.0], [328.0, 731830.0], [327.0, 710691.0], [321.0, 709814.0], [320.0, 734548.0], [323.0, 743155.0], [322.0, 690209.0], [326.0, 685510.0], [325.0, 688575.0], [324.0, 692303.0], [350.0, 694102.0], [351.0, 667430.0], [349.0, 694511.0], [348.0, 694591.0], [347.0, 701273.0], [346.0, 644891.0], [345.0, 672542.0], [344.0, 694164.0], [343.0, 696808.0], [337.0, 716435.0], [336.0, 673220.0], [339.0, 698844.0], [338.0, 697713.0], [342.0, 651526.0], [341.0, 651369.0], [340.0, 698118.0], [366.0, 721678.0], [367.0, 720602.0], [365.0, 631077.0], [364.0, 715130.0], [363.0, 727004.0], [362.0, 694430.0], [361.0, 631449.0], [360.0, 727075.0], [359.0, 678288.0], [353.0, 636439.0], [352.0, 681205.0], [355.0, 628792.0], [354.0, 688222.0], [358.0, 684794.0], [357.0, 677901.0], [356.0, 677307.0], [382.0, 711835.0], [383.0, 710559.0], [381.0, 712595.0], [380.0, 716684.0], [379.0, 718339.0], [378.0, 717083.0], [377.0, 717647.0], [376.0, 718589.0], [375.0, 718936.0], [369.0, 719368.0], [368.0, 722735.0], [371.0, 717990.0], [370.0, 716129.0], [374.0, 717333.0], [373.0, 718253.0], [372.0, 717926.0], [398.0, 676616.0], [399.0, 665250.0], [397.0, 702269.0], [396.0, 702417.0], [395.0, 679961.0], [394.0, 720119.0], [393.0, 717798.0], [392.0, 739531.0], [391.0, 707851.0], [385.0, 711813.0], [384.0, 708063.0], [387.0, 706232.0], [386.0, 710151.0], [390.0, 702650.0], [389.0, 716726.0], [388.0, 705950.0], [414.0, 715533.0], [415.0, 698938.0], [413.0, 746917.0], [412.0, 718783.0], [411.0, 718045.0], [410.0, 737587.0], [409.0, 718340.0], [408.0, 723821.0], [407.0, 717036.0], [401.0, 676065.0], [400.0, 676244.0], [403.0, 715626.0], [402.0, 715890.0], [406.0, 715346.0], [405.0, 717416.0], [404.0, 715283.0], [430.0, 705226.0], [431.0, 727645.0], [429.0, 710732.0], [428.0, 703537.0], [427.0, 710035.0], [426.0, 708479.0], [425.0, 718907.0], [424.0, 718994.0], [423.0, 711283.0], [417.0, 714245.0], [416.0, 715185.0], [419.0, 714023.0], [418.0, 721215.0], [422.0, 714812.0], [421.0, 715204.0], [420.0, 716411.0], [446.0, 659197.0], [447.0, 656695.0], [445.0, 657033.0], [444.0, 659431.0], [443.0, 678052.0], [442.0, 688135.0], [441.0, 691567.0], [440.0, 718232.0], [439.0, 682779.0], [433.0, 735784.0], [432.0, 697486.0], [435.0, 714178.0], [434.0, 716237.0], [438.0, 695731.0], [437.0, 690316.0], [436.0, 703544.0], [462.0, 586185.0], [463.0, 580195.0], [461.0, 590073.0], [460.0, 590002.0], [459.0, 599465.0], [458.0, 602827.0], [457.0, 642665.0], [456.0, 648796.0], [455.0, 645872.0], [449.0, 663214.0], [448.0, 662704.0], [451.0, 661768.0], [450.0, 656769.0], [454.0, 657065.0], [453.0, 650508.0], [452.0, 662652.0], [478.0, 422047.0], [479.0, 421467.0], [477.0, 425947.0], [476.0, 426728.0], [475.0, 423622.0], [474.0, 425919.0], [473.0, 424489.0], [472.0, 434185.0], [471.0, 441034.0], [465.0, 585912.0], [464.0, 583514.0], [467.0, 522792.0], [466.0, 586132.0], [470.0, 443696.0], [469.0, 443734.0], [468.0, 527994.0], [494.0, 309474.0], [495.0, 308416.0], [493.0, 324185.0], [492.0, 324236.0], [491.0, 346639.0], [490.0, 355806.0], [489.0, 364242.0], [488.0, 367586.0], [487.0, 364505.0], [481.0, 415782.0], [480.0, 416075.0], [483.0, 414716.0], [482.0, 412470.0], [486.0, 365211.0], [485.0, 382092.0], [484.0, 408669.0], [500.0, 296784.0], [499.0, 300741.0], [498.0, 300770.0], [497.0, 300769.0], [496.0, 307434.0], [1.0, 584625.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[250.50599999999977, 637534.7419999995]], "isOverall": false, "label": "completarEncuestaPreInscripcion-Aggregated", "isController": false}, {"data": [[300.0, 65687.37499999999], [350.0, 78793.0], [400.0, 90264.44444444444], [446.0, 652381.0], [443.0, 666094.7142857143], [442.0, 681251.5555555555], [441.0, 688514.0], [440.0, 700615.9199999999], [438.0, 728315.0], [437.0, 738015.0], [462.0, 589738.0], [450.0, 94944.64705882352], [449.0, 657861.5], [451.0, 663068.0], [459.0, 591655.6666666666], [458.0, 601847.8], [457.0, 613649.8666666667], [456.0, 652141.0], [454.0, 649659.5], [453.0, 659749.0], [452.0, 658399.25], [476.0, 434258.2], [478.0, 429999.3333333333], [479.0, 424489.0], [477.0, 440878.3333333333], [473.0, 441041.8], [472.0, 440863.0], [470.0, 442469.5], [468.0, 485178.16000000003], [466.0, 546867.3043478262], [464.0, 589378.0], [494.0, 318067.0], [495.0, 313845.55555555556], [493.0, 326586.0], [483.0, 415228.0], [482.0, 430190.0], [480.0, 419162.0], [491.0, 350295.8], [490.0, 366997.1666666667], [489.0, 375640.5], [488.0, 382922.0], [486.0, 375136.3333333333], [485.0, 387477.75], [484.0, 405056.1666666667], [500.0, 209438.84276729566], [499.0, 314158.0], [497.0, 307153.0], [496.0, 319453.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}, {"data": [[464.14999999999964, 370868.6579999995]], "isOverall": false, "label": "obtenerEncuesta-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 109.36666666666666, "minX": 1.53039066E12, "maxY": 39568.61666666667, "series": [{"data": [[1.5303912E12, 30058.166666666668], [1.5303909E12, 24913.833333333332], [1.53039186E12, 405.0], [1.53039156E12, 277.5], [1.53039126E12, 14707.35], [1.53039096E12, 23515.616666666665], [1.53039192E12, 307.5], [1.53039066E12, 29310.283333333333], [1.53039162E12, 472.5], [1.53039132E12, 26417.416666666668], [1.53039102E12, 24966.5], [1.53039198E12, 360.0], [1.53039072E12, 26379.166666666668], [1.53039168E12, 345.0], [1.53039138E12, 33079.55], [1.53039108E12, 19889.15], [1.53039078E12, 39568.61666666667], [1.53039174E12, 315.0], [1.53039144E12, 9781.1], [1.53039114E12, 32989.816666666666], [1.53039084E12, 31508.616666666665], [1.5303918E12, 270.0], [1.5303915E12, 292.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5303912E12, 154.83333333333334], [1.5303909E12, 109.36666666666666], [1.53039186E12, 622.2], [1.53039156E12, 427.8], [1.53039126E12, 145.16666666666666], [1.53039096E12, 206.65], [1.53039192E12, 472.75], [1.53039066E12, 128.66666666666666], [1.53039162E12, 725.9166666666666], [1.53039132E12, 173.56666666666666], [1.53039102E12, 189.51666666666668], [1.53039198E12, 553.7833333333333], [1.53039072E12, 115.8], [1.53039168E12, 530.75], [1.53039138E12, 306.8], [1.53039108E12, 248.66666666666666], [1.53039078E12, 173.7], [1.53039174E12, 483.95], [1.53039144E12, 433.71666666666664], [1.53039114E12, 167.55], [1.53039084E12, 138.31666666666666], [1.5303918E12, 415.35], [1.5303915E12, 449.3833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53039198E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 69736.875, "minX": 1.53039066E12, "maxY": 714533.7692307692, "series": [{"data": [[1.5303912E12, 525393.0], [1.53039186E12, 620032.1851851852], [1.53039156E12, 687436.3513513514], [1.53039126E12, 586001.8571428572], [1.53039096E12, 308089.8888888888], [1.53039192E12, 611528.1219512195], [1.53039162E12, 699993.9365079363], [1.53039132E12, 627925.0], [1.53039102E12, 363725.8571428571], [1.53039198E12, 596362.0208333333], [1.53039168E12, 667380.6956521738], [1.53039138E12, 664627.8571428572], [1.53039108E12, 422367.8571428572], [1.53039174E12, 636618.6666666666], [1.53039144E12, 713977.0588235294], [1.53039114E12, 443715.0], [1.5303918E12, 637393.6666666664], [1.5303915E12, 709673.5384615386]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.5303912E12, 533132.6585365854], [1.5303909E12, 269613.4705882353], [1.53039126E12, 580913.85], [1.53039096E12, 309047.0], [1.53039066E12, 69736.875], [1.53039132E12, 613079.8888888889], [1.53039102E12, 375315.20588235295], [1.53039072E12, 109381.5277777778], [1.53039138E12, 674625.2222222224], [1.53039108E12, 429177.5185185185], [1.53039078E12, 165747.1851851852], [1.53039144E12, 714533.7692307692], [1.53039114E12, 478935.0444444445], [1.53039084E12, 223375.72093023255]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53039198E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 69096.625, "minX": 1.53039066E12, "maxY": 714512.4615384615, "series": [{"data": [[1.5303912E12, 525393.0], [1.53039186E12, 620032.1851851852], [1.53039156E12, 687436.3513513514], [1.53039126E12, 586001.8571428572], [1.53039096E12, 308089.8888888888], [1.53039192E12, 611528.1219512195], [1.53039162E12, 699993.9365079363], [1.53039132E12, 627925.0], [1.53039102E12, 363725.8571428571], [1.53039198E12, 596362.0208333333], [1.53039168E12, 667380.6956521738], [1.53039138E12, 664627.8571428572], [1.53039108E12, 422367.8571428572], [1.53039174E12, 636618.6666666666], [1.53039144E12, 713977.0588235294], [1.53039114E12, 443715.0], [1.5303918E12, 637393.6666666664], [1.5303915E12, 709673.5384615386]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.5303912E12, 533116.512195122], [1.5303909E12, 269601.2352941177], [1.53039126E12, 580888.9999999999], [1.53039096E12, 309040.15625], [1.53039066E12, 69096.625], [1.53039132E12, 613066.8055555554], [1.53039102E12, 375302.79411764705], [1.53039072E12, 109354.36111111111], [1.53039138E12, 674615.9777777775], [1.53039108E12, 429044.9259259259], [1.53039078E12, 165727.53703703708], [1.53039144E12, 714512.4615384615], [1.53039114E12, 478923.1333333333], [1.53039084E12, 223343.39534883728]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53039198E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.638888888888889, "minX": 1.53039066E12, "maxY": 245.57500000000002, "series": [{"data": [[1.5303912E12, 1.0], [1.53039186E12, 0.648148148148148], [1.53039156E12, 1.0270270270270268], [1.53039126E12, 1.5714285714285714], [1.53039096E12, 2.3333333333333335], [1.53039192E12, 0.7317073170731705], [1.53039162E12, 1.3174603174603177], [1.53039132E12, 1.8], [1.53039102E12, 1.5714285714285714], [1.53039198E12, 0.6875], [1.53039168E12, 0.8260869565217391], [1.53039138E12, 0.857142857142857], [1.53039108E12, 2.8571428571428568], [1.53039174E12, 0.7857142857142856], [1.53039144E12, 0.9117647058823529], [1.53039114E12, 1.0], [1.5303918E12, 0.638888888888889], [1.5303915E12, 1.2820512820512822]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.5303912E12, 1.3658536585365857], [1.5303909E12, 1.9411764705882353], [1.53039126E12, 1.8], [1.53039096E12, 1.9374999999999998], [1.53039066E12, 245.57500000000002], [1.53039132E12, 10.638888888888886], [1.53039102E12, 2.6176470588235294], [1.53039072E12, 70.47222222222223], [1.53039138E12, 1.8000000000000003], [1.53039108E12, 1.6296296296296295], [1.53039078E12, 1.5925925925925926], [1.53039144E12, 1.153846153846154], [1.53039114E12, 1.3555555555555556], [1.53039084E12, 1.2558139534883723]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53039198E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 62764.0, "minX": 1.53039066E12, "maxY": 762568.0, "series": [{"data": [[1.5303912E12, 544566.0], [1.5303909E12, 281786.0], [1.53039186E12, 700416.0], [1.53039156E12, 735101.0], [1.53039126E12, 596478.0], [1.53039096E12, 342697.0], [1.53039192E12, 643756.0], [1.53039066E12, 90694.0], [1.53039162E12, 762568.0], [1.53039132E12, 652141.0], [1.53039102E12, 402472.0], [1.53039198E12, 630960.0], [1.53039072E12, 141624.0], [1.53039168E12, 753529.0], [1.53039138E12, 701804.0], [1.53039108E12, 446891.0], [1.53039078E12, 188648.0], [1.53039174E12, 686028.0], [1.53039144E12, 746917.0], [1.53039114E12, 500697.0], [1.53039084E12, 243433.0], [1.5303918E12, 675580.0], [1.5303915E12, 739531.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5303912E12, 501992.0], [1.5303909E12, 249298.0], [1.53039186E12, 589343.0], [1.53039156E12, 628792.0], [1.53039126E12, 562941.0], [1.53039096E12, 276572.0], [1.53039192E12, 577169.0], [1.53039066E12, 62764.0], [1.53039162E12, 622725.0], [1.53039132E12, 599465.0], [1.53039102E12, 337462.0], [1.53039198E12, 558229.0], [1.53039072E12, 86210.0], [1.53039168E12, 622790.0], [1.53039138E12, 646469.0], [1.53039108E12, 396791.0], [1.53039078E12, 142174.0], [1.53039174E12, 598279.0], [1.53039144E12, 682779.0], [1.53039114E12, 442458.0], [1.53039084E12, 189832.0], [1.5303918E12, 574029.0], [1.5303915E12, 665250.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5303912E12, 505418.3000000001], [1.5303909E12, 272342.60000000003], [1.53039186E12, 710127.8], [1.53039156E12, 710714.7], [1.53039126E12, 538960.4], [1.53039096E12, 307181.1], [1.53039192E12, 708671.1], [1.53039066E12, 87376.9], [1.53039162E12, 713515.4], [1.53039132E12, 587277.4], [1.53039102E12, 365211.0], [1.53039198E12, 708041.8], [1.53039072E12, 134190.2], [1.53039168E12, 712595.0], [1.53039138E12, 651868.2], [1.53039108E12, 415198.2], [1.53039078E12, 186977.4], [1.53039174E12, 711830.6], [1.53039144E12, 689257.0], [1.53039114E12, 466922.0], [1.53039084E12, 230853.99999999997], [1.5303918E12, 711421.6], [1.5303915E12, 708666.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5303912E12, 544289.2], [1.5303909E12, 279274.56], [1.53039186E12, 743476.76], [1.53039156E12, 730282.9399999997], [1.53039126E12, 590038.92], [1.53039096E12, 327345.41], [1.53039192E12, 743414.4400000001], [1.53039066E12, 90694.0], [1.53039162E12, 745753.5199999999], [1.53039132E12, 643017.77], [1.53039102E12, 392137.10000000015], [1.53039198E12, 743341.12], [1.53039072E12, 141624.0], [1.53039168E12, 747351.6000000001], [1.53039138E12, 691120.6], [1.53039108E12, 445491.86], [1.53039078E12, 188619.17], [1.53039174E12, 746164.1599999999], [1.53039144E12, 727678.5], [1.53039114E12, 491710.33999999997], [1.53039084E12, 241329.17999999996], [1.5303918E12, 744932.2399999999], [1.5303915E12, 728087.2]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5303912E12, 535506.55], [1.5303909E12, 277318.8], [1.53039186E12, 718240.4], [1.53039156E12, 717370.35], [1.53039126E12, 570026.6], [1.53039096E12, 316808.5999999999], [1.53039192E12, 718009.25], [1.53039066E12, 89859.84999999999], [1.53039162E12, 718915.7], [1.53039132E12, 607392.6], [1.53039102E12, 381963.0], [1.53039198E12, 717790.45], [1.53039072E12, 138235.55], [1.53039168E12, 718936.0], [1.53039138E12, 675799.8], [1.53039108E12, 429818.2], [1.53039078E12, 188340.35], [1.53039174E12, 718763.6], [1.53039144E12, 711511.0], [1.53039114E12, 484224.39999999997], [1.53039084E12, 234826.89999999997], [1.5303918E12, 718364.9], [1.5303915E12, 716696.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53039198E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 589378.0, "minX": 0.0, "maxY": 693945.0, "series": [{"data": [[0.0, 589378.0], [1.0, 693945.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 589377.0, "minX": 0.0, "maxY": 693945.0, "series": [{"data": [[0.0, 589377.0], [1.0, 693945.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.5303906E12, "maxY": 4.833333333333333, "series": [{"data": [[1.5303912E12, 0.6833333333333333], [1.5303909E12, 0.5666666666666667], [1.5303906E12, 2.5], [1.53039126E12, 0.3333333333333333], [1.53039096E12, 0.5333333333333333], [1.53039066E12, 4.833333333333333], [1.53039132E12, 0.6], [1.53039102E12, 0.5666666666666667], [1.53039072E12, 2.2666666666666666], [1.53039138E12, 0.75], [1.53039108E12, 0.45], [1.53039078E12, 0.9], [1.53039144E12, 0.21666666666666667], [1.53039114E12, 0.75], [1.53039084E12, 0.7166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53039144E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.45, "minX": 1.53039066E12, "maxY": 1.05, "series": [{"data": [[1.5303912E12, 0.7166666666666667], [1.5303909E12, 0.5666666666666667], [1.53039186E12, 0.9], [1.53039156E12, 0.6166666666666667], [1.53039126E12, 0.45], [1.53039096E12, 0.6833333333333333], [1.53039192E12, 0.6833333333333333], [1.53039066E12, 0.6666666666666666], [1.53039162E12, 1.05], [1.53039132E12, 0.6833333333333333], [1.53039102E12, 0.6833333333333333], [1.53039198E12, 0.8], [1.53039072E12, 0.6], [1.53039168E12, 0.7666666666666667], [1.53039138E12, 0.9833333333333333], [1.53039108E12, 0.6833333333333333], [1.53039078E12, 0.9], [1.53039174E12, 0.7], [1.53039144E12, 0.7833333333333333], [1.53039114E12, 0.7833333333333333], [1.53039084E12, 0.7166666666666667], [1.5303918E12, 0.6], [1.5303915E12, 0.65]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53039198E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53039066E12, "maxY": 1.05, "series": [{"data": [[1.5303912E12, 0.6833333333333333], [1.5303909E12, 0.5666666666666667], [1.53039126E12, 0.3333333333333333], [1.53039096E12, 0.5333333333333333], [1.53039066E12, 0.6666666666666666], [1.53039132E12, 0.6], [1.53039102E12, 0.5666666666666667], [1.53039072E12, 0.6], [1.53039138E12, 0.75], [1.53039108E12, 0.45], [1.53039078E12, 0.9], [1.53039144E12, 0.21666666666666667], [1.53039114E12, 0.75], [1.53039084E12, 0.7166666666666667]], "isOverall": false, "label": "obtenerEncuesta-success", "isController": false}, {"data": [[1.5303912E12, 0.03333333333333333], [1.53039186E12, 0.9], [1.53039156E12, 0.6166666666666667], [1.53039126E12, 0.11666666666666667], [1.53039096E12, 0.15], [1.53039192E12, 0.6833333333333333], [1.53039162E12, 1.05], [1.53039132E12, 0.08333333333333333], [1.53039102E12, 0.11666666666666667], [1.53039198E12, 0.8], [1.53039168E12, 0.7666666666666667], [1.53039138E12, 0.23333333333333334], [1.53039108E12, 0.23333333333333334], [1.53039174E12, 0.7], [1.53039144E12, 0.5666666666666667], [1.53039114E12, 0.03333333333333333], [1.5303918E12, 0.6], [1.5303915E12, 0.65]], "isOverall": false, "label": "completarEncuestaPreInscripcion-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53039198E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
