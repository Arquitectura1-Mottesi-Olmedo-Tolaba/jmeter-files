/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 108013.0, "minX": 0.0, "maxY": 2110230.0, "series": [{"data": [[0.0, 1455668.0], [0.1, 1455668.0], [0.2, 1666630.0], [0.3, 1666630.0], [0.4, 1897554.0], [0.5, 1897554.0], [0.6, 1897554.0], [0.7, 1903583.0], [0.8, 1904534.0], [0.9, 1904534.0], [1.0, 1904646.0], [1.1, 1904646.0], [1.2, 1904894.0], [1.3, 1904894.0], [1.4, 1906107.0], [1.5, 1906107.0], [1.6, 1906693.0], [1.7, 1906693.0], [1.8, 1906846.0], [1.9, 1906846.0], [2.0, 1907164.0], [2.1, 1907164.0], [2.2, 1907407.0], [2.3, 1907407.0], [2.4, 1908372.0], [2.5, 1908372.0], [2.6, 1908572.0], [2.7, 1908572.0], [2.8, 1908572.0], [2.9, 1909070.0], [3.0, 1909070.0], [3.1, 1909220.0], [3.2, 1909220.0], [3.3, 1909493.0], [3.4, 1909493.0], [3.5, 1909659.0], [3.6, 1909659.0], [3.7, 1910026.0], [3.8, 1910026.0], [3.9, 1910076.0], [4.0, 1910076.0], [4.1, 1910195.0], [4.2, 1910195.0], [4.3, 1910337.0], [4.4, 1910337.0], [4.5, 1910790.0], [4.6, 1910790.0], [4.7, 1910935.0], [4.8, 1910935.0], [4.9, 1911233.0], [5.0, 1911233.0], [5.1, 1911679.0], [5.2, 1911679.0], [5.3, 1911779.0], [5.4, 1911779.0], [5.5, 1911908.0], [5.6, 1911908.0], [5.7, 1912011.0], [5.8, 1912011.0], [5.9, 1912057.0], [6.0, 1912057.0], [6.1, 1912157.0], [6.2, 1912157.0], [6.3, 1912202.0], [6.4, 1912202.0], [6.5, 1912485.0], [6.6, 1912485.0], [6.7, 1912514.0], [6.8, 1912514.0], [6.9, 1912721.0], [7.0, 1912721.0], [7.1, 1912807.0], [7.2, 1912807.0], [7.3, 1912838.0], [7.4, 1912838.0], [7.5, 1912873.0], [7.6, 1912873.0], [7.7, 1912966.0], [7.8, 1912966.0], [7.9, 1912991.0], [8.0, 1912991.0], [8.1, 1913090.0], [8.2, 1913090.0], [8.3, 1913179.0], [8.4, 1913179.0], [8.5, 1913438.0], [8.6, 1913438.0], [8.7, 1913461.0], [8.8, 1913594.0], [8.9, 1913594.0], [9.0, 1913844.0], [9.1, 1913844.0], [9.2, 1913888.0], [9.3, 1913888.0], [9.4, 1913888.0], [9.5, 1913888.0], [9.6, 1914330.0], [9.7, 1914330.0], [9.8, 1914482.0], [9.9, 1914482.0], [10.0, 1914558.0], [10.1, 1914558.0], [10.2, 1914691.0], [10.3, 1914691.0], [10.4, 1914760.0], [10.5, 1914760.0], [10.6, 1914813.0], [10.7, 1914813.0], [10.8, 1915293.0], [10.9, 1915293.0], [11.0, 1915301.0], [11.1, 1915301.0], [11.2, 1915409.0], [11.3, 1915409.0], [11.4, 1915746.0], [11.5, 1915746.0], [11.6, 1915761.0], [11.7, 1915761.0], [11.8, 1916510.0], [11.9, 1916510.0], [12.0, 1916727.0], [12.1, 1916727.0], [12.2, 1916826.0], [12.3, 1916826.0], [12.4, 1916875.0], [12.5, 1916875.0], [12.6, 1917107.0], [12.7, 1917107.0], [12.8, 1917263.0], [12.9, 1917263.0], [13.0, 1917511.0], [13.1, 1917511.0], [13.2, 1917718.0], [13.3, 1917718.0], [13.4, 1918362.0], [13.5, 1918362.0], [13.6, 1918424.0], [13.7, 1918424.0], [13.8, 1918512.0], [13.9, 1918512.0], [14.0, 1918633.0], [14.1, 1918633.0], [14.2, 1918753.0], [14.3, 1918753.0], [14.4, 1918917.0], [14.5, 1918917.0], [14.6, 1919274.0], [14.7, 1919274.0], [14.8, 1919744.0], [14.9, 1919744.0], [15.0, 1919760.0], [15.1, 1919760.0], [15.2, 1920795.0], [15.3, 1920795.0], [15.4, 1922486.0], [15.5, 1922486.0], [15.6, 1922895.0], [15.7, 1922895.0], [15.8, 1924136.0], [15.9, 1924136.0], [16.0, 1924321.0], [16.1, 1924321.0], [16.2, 1924327.0], [16.3, 1924327.0], [16.4, 1924709.0], [16.5, 1924709.0], [16.6, 1924744.0], [16.7, 1924744.0], [16.8, 1924847.0], [16.9, 1924847.0], [17.0, 1925026.0], [17.1, 1925026.0], [17.2, 1925255.0], [17.3, 1925255.0], [17.4, 1925502.0], [17.5, 1925502.0], [17.6, 1926227.0], [17.7, 1926227.0], [17.8, 1927045.0], [17.9, 1927045.0], [18.0, 1927392.0], [18.1, 1927392.0], [18.2, 1927491.0], [18.3, 1927491.0], [18.4, 1927820.0], [18.5, 1927820.0], [18.6, 1927880.0], [18.7, 1927880.0], [18.8, 1927961.0], [18.9, 1927961.0], [19.0, 1929743.0], [19.1, 1929743.0], [19.2, 1929842.0], [19.3, 1929842.0], [19.4, 1929844.0], [19.5, 1929844.0], [19.6, 1930243.0], [19.7, 1930243.0], [19.8, 1930803.0], [19.9, 1930803.0], [20.0, 1931122.0], [20.1, 1931122.0], [20.2, 1931381.0], [20.3, 1931381.0], [20.4, 1931799.0], [20.5, 1931799.0], [20.6, 1931951.0], [20.7, 1931951.0], [20.8, 1931969.0], [20.9, 1931969.0], [21.0, 1932005.0], [21.1, 1932005.0], [21.2, 1932038.0], [21.3, 1932038.0], [21.4, 1933187.0], [21.5, 1933187.0], [21.6, 1933192.0], [21.7, 1933192.0], [21.8, 1934217.0], [21.9, 1934217.0], [22.0, 1934540.0], [22.1, 1934540.0], [22.2, 1934744.0], [22.3, 1934744.0], [22.4, 1935253.0], [22.5, 1935253.0], [22.6, 1935614.0], [22.7, 1935614.0], [22.8, 1935977.0], [22.9, 1935977.0], [23.0, 1936146.0], [23.1, 1936146.0], [23.2, 1936206.0], [23.3, 1936206.0], [23.4, 1936519.0], [23.5, 1936519.0], [23.6, 1936751.0], [23.7, 1936751.0], [23.8, 1937585.0], [23.9, 1937585.0], [24.0, 1937679.0], [24.1, 1937679.0], [24.2, 1937693.0], [24.3, 1937693.0], [24.4, 1937743.0], [24.5, 1937743.0], [24.6, 1938297.0], [24.7, 1938297.0], [24.8, 1938375.0], [24.9, 1938375.0], [25.0, 1938856.0], [25.1, 1938856.0], [25.2, 1939181.0], [25.3, 1939181.0], [25.4, 1939511.0], [25.5, 1939511.0], [25.6, 1939587.0], [25.7, 1939587.0], [25.8, 1939824.0], [25.9, 1939824.0], [26.0, 1940682.0], [26.1, 1940682.0], [26.2, 1940754.0], [26.3, 1940754.0], [26.4, 1940897.0], [26.5, 1940897.0], [26.6, 1941379.0], [26.7, 1941379.0], [26.8, 1941385.0], [26.9, 1941385.0], [27.0, 1941475.0], [27.1, 1941475.0], [27.2, 1941524.0], [27.3, 1941524.0], [27.4, 1942583.0], [27.5, 1942583.0], [27.6, 1942617.0], [27.7, 1942617.0], [27.8, 1942779.0], [27.9, 1942779.0], [28.0, 1942924.0], [28.1, 1942924.0], [28.2, 1942930.0], [28.3, 1942930.0], [28.4, 1942962.0], [28.5, 1942962.0], [28.6, 1943098.0], [28.7, 1943098.0], [28.8, 1943494.0], [28.9, 1943494.0], [29.0, 1943622.0], [29.1, 1943622.0], [29.2, 1943700.0], [29.3, 1943700.0], [29.4, 1943708.0], [29.5, 1943708.0], [29.6, 1944104.0], [29.7, 1944104.0], [29.8, 1944155.0], [29.9, 1944155.0], [30.0, 1944213.0], [30.1, 1944213.0], [30.2, 1944869.0], [30.3, 1944869.0], [30.4, 1945275.0], [30.5, 1945275.0], [30.6, 1945461.0], [30.7, 1945461.0], [30.8, 1945527.0], [30.9, 1945527.0], [31.0, 1945533.0], [31.1, 1945533.0], [31.2, 1945775.0], [31.3, 1945775.0], [31.4, 1946088.0], [31.5, 1946088.0], [31.6, 1947110.0], [31.7, 1947110.0], [31.8, 1947599.0], [31.9, 1947599.0], [32.0, 1947655.0], [32.1, 1947655.0], [32.2, 1947726.0], [32.3, 1947726.0], [32.4, 1947859.0], [32.5, 1947859.0], [32.6, 1948013.0], [32.7, 1948013.0], [32.8, 1948477.0], [32.9, 1948477.0], [33.0, 1948851.0], [33.1, 1948851.0], [33.2, 1949151.0], [33.3, 1949151.0], [33.4, 1949446.0], [33.5, 1949446.0], [33.6, 1949754.0], [33.7, 1949754.0], [33.8, 1950307.0], [33.9, 1950307.0], [34.0, 1950355.0], [34.1, 1950355.0], [34.2, 1950617.0], [34.3, 1950617.0], [34.4, 1950725.0], [34.5, 1950725.0], [34.6, 1950944.0], [34.7, 1950944.0], [34.8, 1952121.0], [34.9, 1952121.0], [35.0, 1952202.0], [35.1, 1952202.0], [35.2, 1952584.0], [35.3, 1952584.0], [35.4, 1952587.0], [35.5, 1952587.0], [35.6, 1952780.0], [35.7, 1952780.0], [35.8, 1952908.0], [35.9, 1952908.0], [36.0, 1953888.0], [36.1, 1953888.0], [36.2, 1954094.0], [36.3, 1954094.0], [36.4, 1954094.0], [36.5, 1954094.0], [36.6, 1954694.0], [36.7, 1954694.0], [36.8, 1954854.0], [36.9, 1954854.0], [37.0, 1954896.0], [37.1, 1954896.0], [37.2, 1955017.0], [37.3, 1955017.0], [37.4, 1955542.0], [37.5, 1955542.0], [37.6, 1956216.0], [37.7, 1956216.0], [37.8, 1956384.0], [37.9, 1956384.0], [38.0, 1956389.0], [38.1, 1956389.0], [38.2, 1956451.0], [38.3, 1956451.0], [38.4, 1956451.0], [38.5, 1956898.0], [38.6, 1956898.0], [38.7, 1957751.0], [38.8, 1957751.0], [38.9, 1958273.0], [39.0, 1958273.0], [39.1, 1958871.0], [39.2, 1958871.0], [39.3, 1959424.0], [39.4, 1959424.0], [39.5, 1959854.0], [39.6, 1959854.0], [39.7, 1960171.0], [39.8, 1960171.0], [39.9, 1960375.0], [40.0, 1960375.0], [40.1, 1960715.0], [40.2, 1960715.0], [40.3, 1961003.0], [40.4, 1961003.0], [40.5, 1961160.0], [40.6, 1961160.0], [40.7, 1961920.0], [40.8, 1961920.0], [40.9, 1962311.0], [41.0, 1962311.0], [41.1, 1962923.0], [41.2, 1962923.0], [41.3, 1964035.0], [41.4, 1964035.0], [41.5, 1964039.0], [41.6, 1964039.0], [41.7, 1964316.0], [41.8, 1964316.0], [41.9, 1964711.0], [42.0, 1964711.0], [42.1, 1964894.0], [42.2, 1964894.0], [42.3, 1964906.0], [42.4, 1964906.0], [42.5, 1965845.0], [42.6, 1965845.0], [42.7, 1966497.0], [42.8, 1966497.0], [42.9, 1966678.0], [43.0, 1966678.0], [43.1, 1966975.0], [43.2, 1966975.0], [43.3, 1967111.0], [43.4, 1967111.0], [43.5, 1967972.0], [43.6, 1967972.0], [43.7, 1968297.0], [43.8, 1968297.0], [43.9, 1968976.0], [44.0, 1968976.0], [44.1, 1968992.0], [44.2, 1968992.0], [44.3, 1969100.0], [44.4, 1969100.0], [44.5, 1969120.0], [44.6, 1969120.0], [44.7, 1969353.0], [44.8, 1969353.0], [44.9, 1969858.0], [45.0, 1969858.0], [45.1, 1970280.0], [45.2, 1970280.0], [45.3, 1970569.0], [45.4, 1970569.0], [45.5, 1971511.0], [45.6, 1971511.0], [45.7, 1971611.0], [45.8, 1971611.0], [45.9, 1971781.0], [46.0, 1971781.0], [46.1, 1972702.0], [46.2, 1972702.0], [46.3, 1972889.0], [46.4, 1972889.0], [46.5, 1973380.0], [46.6, 1973380.0], [46.7, 1973622.0], [46.8, 1973622.0], [46.9, 1973901.0], [47.0, 1973901.0], [47.1, 1974938.0], [47.2, 1974938.0], [47.3, 1975014.0], [47.4, 1975014.0], [47.5, 1975451.0], [47.6, 1975451.0], [47.7, 1975796.0], [47.8, 1975796.0], [47.9, 1975862.0], [48.0, 1975862.0], [48.1, 1976602.0], [48.2, 1976602.0], [48.3, 1977155.0], [48.4, 1977155.0], [48.5, 1977470.0], [48.6, 1977470.0], [48.7, 1977857.0], [48.8, 1977857.0], [48.9, 1978413.0], [49.0, 1978413.0], [49.1, 1979038.0], [49.2, 1979038.0], [49.3, 1979933.0], [49.4, 1979933.0], [49.5, 1980662.0], [49.6, 1980662.0], [49.7, 1980940.0], [49.8, 1980940.0], [49.9, 1981633.0], [50.0, 1981633.0], [50.1, 1982184.0], [50.2, 1982184.0], [50.3, 1982471.0], [50.4, 1982471.0], [50.5, 1982572.0], [50.6, 1982572.0], [50.7, 1983951.0], [50.8, 1983951.0], [50.9, 1984859.0], [51.0, 1984859.0], [51.1, 1985233.0], [51.2, 1985233.0], [51.3, 1985917.0], [51.4, 1985917.0], [51.5, 1986605.0], [51.6, 1986605.0], [51.7, 1987469.0], [51.8, 1987469.0], [51.9, 1988173.0], [52.0, 1988173.0], [52.1, 1988462.0], [52.2, 1988462.0], [52.3, 1988574.0], [52.4, 1988574.0], [52.5, 1988732.0], [52.6, 1988732.0], [52.7, 1988842.0], [52.8, 1988842.0], [52.9, 1988977.0], [53.0, 1988977.0], [53.1, 1989628.0], [53.2, 1989628.0], [53.3, 1989779.0], [53.4, 1989779.0], [53.5, 1989822.0], [53.6, 1989822.0], [53.7, 1990210.0], [53.8, 1990210.0], [53.9, 1990574.0], [54.0, 1990574.0], [54.1, 1991096.0], [54.2, 1991096.0], [54.3, 1991799.0], [54.4, 1991799.0], [54.5, 1992085.0], [54.6, 1992085.0], [54.7, 1992169.0], [54.8, 1992169.0], [54.9, 1993364.0], [55.0, 1993364.0], [55.1, 1994583.0], [55.2, 1994583.0], [55.3, 1995195.0], [55.4, 1995195.0], [55.5, 1995510.0], [55.6, 1995510.0], [55.7, 1998099.0], [55.8, 1998099.0], [55.9, 1998289.0], [56.0, 1998289.0], [56.1, 1998401.0], [56.2, 1998401.0], [56.3, 1998940.0], [56.4, 1998940.0], [56.5, 1998965.0], [56.6, 1998965.0], [56.7, 2000762.0], [56.8, 2000762.0], [56.9, 2001181.0], [57.0, 2001181.0], [57.1, 2001241.0], [57.2, 2001241.0], [57.3, 2002812.0], [57.4, 2002812.0], [57.5, 2002813.0], [57.6, 2002813.0], [57.7, 2003221.0], [57.8, 2003221.0], [57.9, 2003500.0], [58.0, 2003500.0], [58.1, 2003809.0], [58.2, 2003809.0], [58.3, 2003957.0], [58.4, 2003957.0], [58.5, 2004722.0], [58.6, 2004722.0], [58.7, 2005678.0], [58.8, 2005678.0], [58.9, 2005678.0], [59.0, 2005678.0], [59.1, 2006930.0], [59.2, 2006930.0], [59.3, 2007166.0], [59.4, 2007166.0], [59.5, 2007532.0], [59.6, 2007532.0], [59.7, 2007934.0], [59.8, 2007934.0], [59.9, 2008656.0], [60.0, 2008656.0], [60.1, 2008703.0], [60.2, 2008703.0], [60.3, 2008715.0], [60.4, 2008715.0], [60.5, 2009891.0], [60.6, 2009891.0], [60.7, 2010585.0], [60.8, 2010585.0], [60.9, 2011510.0], [61.0, 2011510.0], [61.1, 2011528.0], [61.2, 2011528.0], [61.3, 2012350.0], [61.4, 2012350.0], [61.5, 2013476.0], [61.6, 2013476.0], [61.7, 2014517.0], [61.8, 2014517.0], [61.9, 2014670.0], [62.0, 2014670.0], [62.1, 2014695.0], [62.2, 2014695.0], [62.3, 2015548.0], [62.4, 2015548.0], [62.5, 2015883.0], [62.6, 2015883.0], [62.7, 2016584.0], [62.8, 2016584.0], [62.9, 2017775.0], [63.0, 2017775.0], [63.1, 2018901.0], [63.2, 2018901.0], [63.3, 2019168.0], [63.4, 2019168.0], [63.5, 2019312.0], [63.6, 2019312.0], [63.7, 2019351.0], [63.8, 2019351.0], [63.9, 2019686.0], [64.0, 2019686.0], [64.1, 2019984.0], [64.2, 2019984.0], [64.3, 2021373.0], [64.4, 2021373.0], [64.5, 2021537.0], [64.6, 2021537.0], [64.7, 2022294.0], [64.8, 2022294.0], [64.9, 2022854.0], [65.0, 2022854.0], [65.1, 2022894.0], [65.2, 2022894.0], [65.3, 2022993.0], [65.4, 2022993.0], [65.5, 2023796.0], [65.6, 2023796.0], [65.7, 2024220.0], [65.8, 2024220.0], [65.9, 2024270.0], [66.0, 2024270.0], [66.1, 2024388.0], [66.2, 2024388.0], [66.3, 2024897.0], [66.4, 2024897.0], [66.5, 2025229.0], [66.6, 2025229.0], [66.7, 2025252.0], [66.8, 2025252.0], [66.9, 2025397.0], [67.0, 2025397.0], [67.1, 2025847.0], [67.2, 2025847.0], [67.3, 2026007.0], [67.4, 2026007.0], [67.5, 2026179.0], [67.6, 2026179.0], [67.7, 2026498.0], [67.8, 2026498.0], [67.9, 2027567.0], [68.0, 2027567.0], [68.1, 2029582.0], [68.2, 2029582.0], [68.3, 2030107.0], [68.4, 2030107.0], [68.5, 2030778.0], [68.6, 2030778.0], [68.7, 2032433.0], [68.8, 2032433.0], [68.9, 2032578.0], [69.0, 2032578.0], [69.1, 2033638.0], [69.2, 2033638.0], [69.3, 2033968.0], [69.4, 2033968.0], [69.5, 2034745.0], [69.6, 2034745.0], [69.7, 2035318.0], [69.8, 2035318.0], [69.9, 2035827.0], [70.0, 2035827.0], [70.1, 2035892.0], [70.2, 2035892.0], [70.3, 2036690.0], [70.4, 2036690.0], [70.5, 2036701.0], [70.6, 2036701.0], [70.7, 2036788.0], [70.8, 2036788.0], [70.9, 2036818.0], [71.0, 2036818.0], [71.1, 2036899.0], [71.2, 2036899.0], [71.3, 2037083.0], [71.4, 2037083.0], [71.5, 2037171.0], [71.6, 2037171.0], [71.7, 2037320.0], [71.8, 2037320.0], [71.9, 2037511.0], [72.0, 2037511.0], [72.1, 2037573.0], [72.2, 2037573.0], [72.3, 2038755.0], [72.4, 2038755.0], [72.5, 2038830.0], [72.6, 2038830.0], [72.7, 2038864.0], [72.8, 2038864.0], [72.9, 2039436.0], [73.0, 2039436.0], [73.1, 2040845.0], [73.2, 2040845.0], [73.3, 2041692.0], [73.4, 2041692.0], [73.5, 2041762.0], [73.6, 2041762.0], [73.7, 2042441.0], [73.8, 2042441.0], [73.9, 2044015.0], [74.0, 2044015.0], [74.1, 2044363.0], [74.2, 2044363.0], [74.3, 2045439.0], [74.4, 2045439.0], [74.5, 2046704.0], [74.6, 2046704.0], [74.7, 2047074.0], [74.8, 2047074.0], [74.9, 2047432.0], [75.0, 2047432.0], [75.1, 2047562.0], [75.2, 2047562.0], [75.3, 2047822.0], [75.4, 2047822.0], [75.5, 2047892.0], [75.6, 2047892.0], [75.7, 2047929.0], [75.8, 2047929.0], [75.9, 2048264.0], [76.0, 2048264.0], [76.1, 2048284.0], [76.2, 2048284.0], [76.3, 2048394.0], [76.4, 2048394.0], [76.5, 2048747.0], [76.6, 2048747.0], [76.7, 2049234.0], [76.8, 2049234.0], [76.9, 2049255.0], [77.0, 2049255.0], [77.1, 2049543.0], [77.2, 2049543.0], [77.3, 2049595.0], [77.4, 2049595.0], [77.5, 2049615.0], [77.6, 2049615.0], [77.7, 2049758.0], [77.8, 2049758.0], [77.9, 2049941.0], [78.0, 2049941.0], [78.1, 2050168.0], [78.2, 2050168.0], [78.3, 2050335.0], [78.4, 2050335.0], [78.5, 2050733.0], [78.6, 2050733.0], [78.7, 2050794.0], [78.8, 2050794.0], [78.9, 2052336.0], [79.0, 2052336.0], [79.1, 2053756.0], [79.2, 2053756.0], [79.3, 2053987.0], [79.4, 2053987.0], [79.5, 2054899.0], [79.6, 2054899.0], [79.7, 2055395.0], [79.8, 2055395.0], [79.9, 2057157.0], [80.0, 2057157.0], [80.1, 2057932.0], [80.2, 2057932.0], [80.3, 2059373.0], [80.4, 2059373.0], [80.5, 2060432.0], [80.6, 2060432.0], [80.7, 2060570.0], [80.8, 2060570.0], [80.9, 2060851.0], [81.0, 2060851.0], [81.1, 2061481.0], [81.2, 2061481.0], [81.3, 2061925.0], [81.4, 2061925.0], [81.5, 2062313.0], [81.6, 2062313.0], [81.7, 2062616.0], [81.8, 2062616.0], [81.9, 2063382.0], [82.0, 2063382.0], [82.1, 2063813.0], [82.2, 2063813.0], [82.3, 2064031.0], [82.4, 2064031.0], [82.5, 2064238.0], [82.6, 2064238.0], [82.7, 2064244.0], [82.8, 2064244.0], [82.9, 2064950.0], [83.0, 2064950.0], [83.1, 2065097.0], [83.2, 2065097.0], [83.3, 2065791.0], [83.4, 2065791.0], [83.5, 2066941.0], [83.6, 2066941.0], [83.7, 2067188.0], [83.8, 2067188.0], [83.9, 2067499.0], [84.0, 2067499.0], [84.1, 2067633.0], [84.2, 2067633.0], [84.3, 2068271.0], [84.4, 2068271.0], [84.5, 2068617.0], [84.6, 2068617.0], [84.7, 2068837.0], [84.8, 2068837.0], [84.9, 2069518.0], [85.0, 2069518.0], [85.1, 2069620.0], [85.2, 2069620.0], [85.3, 2069698.0], [85.4, 2069698.0], [85.5, 2069902.0], [85.6, 2069902.0], [85.7, 2070554.0], [85.8, 2070554.0], [85.9, 2072377.0], [86.0, 2072377.0], [86.1, 2073039.0], [86.2, 2073039.0], [86.3, 2073071.0], [86.4, 2073071.0], [86.5, 2073337.0], [86.6, 2073337.0], [86.7, 2073487.0], [86.8, 2073487.0], [86.9, 2074197.0], [87.0, 2074197.0], [87.1, 2074398.0], [87.2, 2074398.0], [87.3, 2074569.0], [87.4, 2074569.0], [87.5, 2074816.0], [87.6, 2074816.0], [87.7, 2074899.0], [87.8, 2074899.0], [87.9, 2075476.0], [88.0, 2075476.0], [88.1, 2075517.0], [88.2, 2075517.0], [88.3, 2078143.0], [88.4, 2078143.0], [88.5, 2079269.0], [88.6, 2079269.0], [88.7, 2079667.0], [88.8, 2079667.0], [88.9, 2080316.0], [89.0, 2080316.0], [89.1, 2080343.0], [89.2, 2080343.0], [89.3, 2080361.0], [89.4, 2080361.0], [89.5, 2080387.0], [89.6, 2080387.0], [89.7, 2080412.0], [89.8, 2080412.0], [89.9, 2081201.0], [90.0, 2081201.0], [90.1, 2081868.0], [90.2, 2081868.0], [90.3, 2082037.0], [90.4, 2082037.0], [90.5, 2082286.0], [90.6, 2082286.0], [90.7, 2082964.0], [90.8, 2082964.0], [90.9, 2083014.0], [91.0, 2083014.0], [91.1, 2083557.0], [91.2, 2083557.0], [91.3, 2085067.0], [91.4, 2085067.0], [91.5, 2086154.0], [91.6, 2086154.0], [91.7, 2086410.0], [91.8, 2086410.0], [91.9, 2086656.0], [92.0, 2086656.0], [92.1, 2087341.0], [92.2, 2087341.0], [92.3, 2087619.0], [92.4, 2087619.0], [92.5, 2087725.0], [92.6, 2087725.0], [92.7, 2087904.0], [92.8, 2087904.0], [92.9, 2088460.0], [93.0, 2088460.0], [93.1, 2088996.0], [93.2, 2088996.0], [93.3, 2089058.0], [93.4, 2089058.0], [93.5, 2089588.0], [93.6, 2089588.0], [93.7, 2089640.0], [93.8, 2089640.0], [93.9, 2090663.0], [94.0, 2090663.0], [94.1, 2090944.0], [94.2, 2090944.0], [94.3, 2091584.0], [94.4, 2091584.0], [94.5, 2091743.0], [94.6, 2091743.0], [94.7, 2092933.0], [94.8, 2092933.0], [94.9, 2093227.0], [95.0, 2093227.0], [95.1, 2093671.0], [95.2, 2093671.0], [95.3, 2094315.0], [95.4, 2094315.0], [95.5, 2095395.0], [95.6, 2095395.0], [95.7, 2095615.0], [95.8, 2095615.0], [95.9, 2095765.0], [96.0, 2095765.0], [96.1, 2096033.0], [96.2, 2096033.0], [96.3, 2096273.0], [96.4, 2096273.0], [96.5, 2097129.0], [96.6, 2097129.0], [96.7, 2097312.0], [96.8, 2097312.0], [96.9, 2097339.0], [97.0, 2097339.0], [97.1, 2097679.0], [97.2, 2097679.0], [97.3, 2097775.0], [97.4, 2097775.0], [97.5, 2097776.0], [97.6, 2097776.0], [97.7, 2098104.0], [97.8, 2098104.0], [97.9, 2098128.0], [98.0, 2098128.0], [98.1, 2098696.0], [98.2, 2098696.0], [98.3, 2099756.0], [98.4, 2099756.0], [98.5, 2100023.0], [98.6, 2100023.0], [98.7, 2100183.0], [98.8, 2100183.0], [98.9, 2100209.0], [99.0, 2100209.0], [99.1, 2102076.0], [99.2, 2102076.0], [99.3, 2102679.0], [99.4, 2102679.0], [99.5, 2102831.0], [99.6, 2102831.0], [99.7, 2104812.0], [99.8, 2104812.0], [99.9, 2110230.0], [100.0, 2110230.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[0.0, 108013.0], [0.1, 108013.0], [0.2, 115988.0], [0.3, 115988.0], [0.4, 118312.0], [0.5, 118312.0], [0.6, 118312.0], [0.7, 124846.0], [0.8, 126495.0], [0.9, 126495.0], [1.0, 128303.0], [1.1, 128303.0], [1.2, 130774.0], [1.3, 130774.0], [1.4, 130898.0], [1.5, 130898.0], [1.6, 131021.0], [1.7, 131021.0], [1.8, 131384.0], [1.9, 131384.0], [2.0, 131448.0], [2.1, 131448.0], [2.2, 131472.0], [2.3, 131472.0], [2.4, 131474.0], [2.5, 131474.0], [2.6, 131485.0], [2.7, 131485.0], [2.8, 131485.0], [2.9, 131501.0], [3.0, 131501.0], [3.1, 131705.0], [3.2, 131705.0], [3.3, 131707.0], [3.4, 131707.0], [3.5, 131724.0], [3.6, 131724.0], [3.7, 131770.0], [3.8, 131770.0], [3.9, 131772.0], [4.0, 131772.0], [4.1, 131773.0], [4.2, 131773.0], [4.3, 131957.0], [4.4, 131957.0], [4.5, 131968.0], [4.6, 131968.0], [4.7, 131997.0], [4.8, 131997.0], [4.9, 132009.0], [5.0, 132009.0], [5.1, 132256.0], [5.2, 132256.0], [5.3, 132335.0], [5.4, 132335.0], [5.5, 132842.0], [5.6, 132842.0], [5.7, 143284.0], [5.8, 143284.0], [5.9, 161499.0], [6.0, 161499.0], [6.1, 200411.0], [6.2, 200411.0], [6.3, 217821.0], [6.4, 217821.0], [6.5, 219251.0], [6.6, 219251.0], [6.7, 224878.0], [6.8, 224878.0], [6.9, 228386.0], [7.0, 228386.0], [7.1, 231446.0], [7.2, 231446.0], [7.3, 231490.0], [7.4, 231490.0], [7.5, 246296.0], [7.6, 246296.0], [7.7, 246478.0], [7.8, 246478.0], [7.9, 247117.0], [8.0, 247117.0], [8.1, 247321.0], [8.2, 247321.0], [8.3, 252651.0], [8.4, 252651.0], [8.5, 256411.0], [8.6, 256411.0], [8.7, 257117.0], [8.8, 257228.0], [8.9, 257228.0], [9.0, 257382.0], [9.1, 257382.0], [9.2, 257548.0], [9.3, 257548.0], [9.4, 257549.0], [9.5, 257549.0], [9.6, 257611.0], [9.7, 257611.0], [9.8, 257611.0], [9.9, 257611.0], [10.0, 257634.0], [10.1, 257634.0], [10.2, 257647.0], [10.3, 257647.0], [10.4, 257722.0], [10.5, 257722.0], [10.6, 257755.0], [10.7, 257755.0], [10.8, 257930.0], [10.9, 257930.0], [11.0, 257959.0], [11.1, 257959.0], [11.2, 258086.0], [11.3, 258086.0], [11.4, 264626.0], [11.5, 264626.0], [11.6, 291208.0], [11.7, 291208.0], [11.8, 293571.0], [11.9, 293571.0], [12.0, 294457.0], [12.1, 294457.0], [12.2, 296863.0], [12.3, 296863.0], [12.4, 303085.0], [12.5, 303085.0], [12.6, 305516.0], [12.7, 305516.0], [12.8, 342413.0], [12.9, 342413.0], [13.0, 345483.0], [13.1, 345483.0], [13.2, 352660.0], [13.3, 352660.0], [13.4, 352933.0], [13.5, 352933.0], [13.6, 356167.0], [13.7, 356167.0], [13.8, 358094.0], [13.9, 358094.0], [14.0, 358708.0], [14.1, 358708.0], [14.2, 359568.0], [14.3, 359568.0], [14.4, 359776.0], [14.5, 359776.0], [14.6, 362646.0], [14.7, 362646.0], [14.8, 362657.0], [14.9, 362657.0], [15.0, 362741.0], [15.1, 362741.0], [15.2, 362862.0], [15.3, 362862.0], [15.4, 362994.0], [15.5, 362994.0], [15.6, 363094.0], [15.7, 363094.0], [15.8, 363163.0], [15.9, 363163.0], [16.0, 363191.0], [16.1, 363191.0], [16.2, 363351.0], [16.3, 363351.0], [16.4, 363780.0], [16.5, 363780.0], [16.6, 363915.0], [16.7, 363915.0], [16.8, 363922.0], [16.9, 363922.0], [17.0, 377727.0], [17.1, 377727.0], [17.2, 385617.0], [17.3, 385617.0], [17.4, 385863.0], [17.5, 385863.0], [17.6, 387846.0], [17.7, 387846.0], [17.8, 393417.0], [17.9, 393417.0], [18.0, 395538.0], [18.1, 395538.0], [18.2, 429091.0], [18.3, 429091.0], [18.4, 437228.0], [18.5, 437228.0], [18.6, 448496.0], [18.7, 448496.0], [18.8, 449833.0], [18.9, 449833.0], [19.0, 450004.0], [19.1, 450004.0], [19.2, 455413.0], [19.3, 455413.0], [19.4, 456124.0], [19.5, 456124.0], [19.6, 458324.0], [19.7, 458324.0], [19.8, 459390.0], [19.9, 459390.0], [20.0, 461449.0], [20.1, 461449.0], [20.2, 461907.0], [20.3, 461907.0], [20.4, 462508.0], [20.5, 462508.0], [20.6, 462564.0], [20.7, 462564.0], [20.8, 462689.0], [20.9, 462689.0], [21.0, 462739.0], [21.1, 462739.0], [21.2, 462749.0], [21.3, 462749.0], [21.4, 462794.0], [21.5, 462794.0], [21.6, 462804.0], [21.7, 462804.0], [21.8, 462940.0], [21.9, 462940.0], [22.0, 463391.0], [22.1, 463391.0], [22.2, 463394.0], [22.3, 463394.0], [22.4, 469068.0], [22.5, 469068.0], [22.6, 475213.0], [22.7, 475213.0], [22.8, 476688.0], [22.9, 476688.0], [23.0, 479719.0], [23.1, 479719.0], [23.2, 485714.0], [23.3, 485714.0], [23.4, 490785.0], [23.5, 490785.0], [23.6, 516662.0], [23.7, 516662.0], [23.8, 526358.0], [23.9, 526358.0], [24.0, 540731.0], [24.1, 540731.0], [24.2, 541589.0], [24.3, 541589.0], [24.4, 544962.0], [24.5, 544962.0], [24.6, 547441.0], [24.7, 547441.0], [24.8, 547694.0], [24.9, 547694.0], [25.0, 549334.0], [25.1, 549334.0], [25.2, 550634.0], [25.3, 550634.0], [25.4, 554444.0], [25.5, 554444.0], [25.6, 557758.0], [25.7, 557758.0], [25.8, 562646.0], [25.9, 562646.0], [26.0, 573428.0], [26.1, 573428.0], [26.2, 573564.0], [26.3, 573564.0], [26.4, 573570.0], [26.5, 573570.0], [26.6, 575369.0], [26.7, 575369.0], [26.8, 575371.0], [26.9, 575371.0], [27.0, 575413.0], [27.1, 575413.0], [27.2, 575429.0], [27.3, 575429.0], [27.4, 575430.0], [27.5, 575430.0], [27.6, 575437.0], [27.7, 575437.0], [27.8, 576140.0], [27.9, 576140.0], [28.0, 576252.0], [28.1, 576252.0], [28.2, 580776.0], [28.3, 580776.0], [28.4, 581876.0], [28.5, 581876.0], [28.6, 587883.0], [28.7, 587883.0], [28.8, 593857.0], [28.9, 593857.0], [29.0, 615571.0], [29.1, 615571.0], [29.2, 630407.0], [29.3, 630407.0], [29.4, 634344.0], [29.5, 634344.0], [29.6, 640603.0], [29.7, 640603.0], [29.8, 641378.0], [29.9, 641378.0], [30.0, 641530.0], [30.1, 641530.0], [30.2, 641828.0], [30.3, 641828.0], [30.4, 643858.0], [30.5, 643858.0], [30.6, 646608.0], [30.7, 646608.0], [30.8, 646625.0], [30.9, 646625.0], [31.0, 647762.0], [31.1, 647762.0], [31.2, 655097.0], [31.3, 655097.0], [31.4, 661096.0], [31.5, 661096.0], [31.6, 664029.0], [31.7, 664029.0], [31.8, 667968.0], [31.9, 667968.0], [32.0, 669014.0], [32.1, 669014.0], [32.2, 674262.0], [32.3, 674262.0], [32.4, 674287.0], [32.5, 674287.0], [32.6, 674320.0], [32.7, 674320.0], [32.8, 674345.0], [32.9, 674345.0], [33.0, 674430.0], [33.1, 674430.0], [33.2, 675409.0], [33.3, 675409.0], [33.4, 675675.0], [33.5, 675675.0], [33.6, 675686.0], [33.7, 675686.0], [33.8, 675852.0], [33.9, 675852.0], [34.0, 679220.0], [34.1, 679220.0], [34.2, 687348.0], [34.3, 687348.0], [34.4, 705845.0], [34.5, 705845.0], [34.6, 721548.0], [34.7, 721548.0], [34.8, 732464.0], [34.9, 732464.0], [35.0, 733697.0], [35.1, 733697.0], [35.2, 739618.0], [35.3, 739618.0], [35.4, 739838.0], [35.5, 739838.0], [35.6, 743503.0], [35.7, 743503.0], [35.8, 744868.0], [35.9, 744868.0], [36.0, 744918.0], [36.1, 744918.0], [36.2, 747027.0], [36.3, 747027.0], [36.4, 754631.0], [36.5, 754631.0], [36.6, 758306.0], [36.7, 758306.0], [36.8, 761927.0], [36.9, 761927.0], [37.0, 770272.0], [37.1, 770272.0], [37.2, 770292.0], [37.3, 770292.0], [37.4, 773553.0], [37.5, 773553.0], [37.6, 776460.0], [37.7, 776460.0], [37.8, 776460.0], [37.9, 782949.0], [38.0, 782949.0], [38.1, 783192.0], [38.2, 783192.0], [38.3, 783608.0], [38.4, 783608.0], [38.5, 783898.0], [38.6, 783898.0], [38.7, 787654.0], [38.8, 787654.0], [38.9, 787665.0], [39.0, 787665.0], [39.1, 787698.0], [39.2, 787698.0], [39.3, 788077.0], [39.4, 788077.0], [39.5, 788112.0], [39.6, 788112.0], [39.7, 791806.0], [39.8, 791806.0], [39.9, 808530.0], [40.0, 808530.0], [40.1, 813535.0], [40.2, 813535.0], [40.3, 827647.0], [40.4, 827647.0], [40.5, 827754.0], [40.6, 827754.0], [40.7, 831137.0], [40.8, 831137.0], [40.9, 833639.0], [41.0, 833639.0], [41.1, 834441.0], [41.2, 834441.0], [41.3, 835776.0], [41.4, 835776.0], [41.5, 836600.0], [41.6, 836600.0], [41.7, 838704.0], [41.8, 838704.0], [41.9, 840745.0], [42.0, 840745.0], [42.1, 840820.0], [42.2, 840820.0], [42.3, 841602.0], [42.4, 841602.0], [42.5, 846528.0], [42.6, 846528.0], [42.7, 847838.0], [42.8, 847838.0], [42.9, 847959.0], [43.0, 847959.0], [43.1, 849437.0], [43.2, 849437.0], [43.3, 850903.0], [43.4, 850903.0], [43.5, 854949.0], [43.6, 854949.0], [43.7, 858871.0], [43.8, 858871.0], [43.9, 860356.0], [44.0, 860356.0], [44.1, 863070.0], [44.2, 863070.0], [44.3, 866603.0], [44.4, 866603.0], [44.5, 870983.0], [44.6, 870983.0], [44.7, 873315.0], [44.8, 873315.0], [44.9, 874671.0], [45.0, 874671.0], [45.1, 875157.0], [45.2, 875157.0], [45.3, 875771.0], [45.4, 875771.0], [45.5, 880796.0], [45.6, 880796.0], [45.7, 883263.0], [45.8, 883263.0], [45.9, 883560.0], [46.0, 883560.0], [46.1, 883946.0], [46.2, 883946.0], [46.3, 886297.0], [46.4, 886297.0], [46.5, 903315.0], [46.6, 903315.0], [46.7, 916717.0], [46.8, 916717.0], [46.9, 918545.0], [47.0, 918545.0], [47.1, 921901.0], [47.2, 921901.0], [47.3, 926024.0], [47.4, 926024.0], [47.5, 926966.0], [47.6, 926966.0], [47.7, 933473.0], [47.8, 933473.0], [47.9, 936352.0], [48.0, 936352.0], [48.1, 938275.0], [48.2, 938275.0], [48.3, 939125.0], [48.4, 939125.0], [48.5, 940839.0], [48.6, 940839.0], [48.7, 942068.0], [48.8, 942068.0], [48.9, 944329.0], [49.0, 944329.0], [49.1, 944471.0], [49.2, 944471.0], [49.3, 946878.0], [49.4, 946878.0], [49.5, 951455.0], [49.6, 951455.0], [49.7, 952280.0], [49.8, 952280.0], [49.9, 952444.0], [50.0, 952444.0], [50.1, 958296.0], [50.2, 958296.0], [50.3, 968993.0], [50.4, 968993.0], [50.5, 971637.0], [50.6, 971637.0], [50.7, 974508.0], [50.8, 974508.0], [50.9, 976571.0], [51.0, 976571.0], [51.1, 982223.0], [51.2, 982223.0], [51.3, 998833.0], [51.4, 998833.0], [51.5, 1001598.0], [51.6, 1001598.0], [51.7, 1013524.0], [51.8, 1013524.0], [51.9, 1018369.0], [52.0, 1018369.0], [52.1, 1022382.0], [52.2, 1022382.0], [52.3, 1022674.0], [52.4, 1022674.0], [52.5, 1023431.0], [52.6, 1023431.0], [52.7, 1036545.0], [52.8, 1036545.0], [52.9, 1044586.0], [53.0, 1044586.0], [53.1, 1047720.0], [53.2, 1047720.0], [53.3, 1048698.0], [53.4, 1048698.0], [53.5, 1049818.0], [53.6, 1049818.0], [53.7, 1053835.0], [53.8, 1053835.0], [53.9, 1054241.0], [54.0, 1054241.0], [54.1, 1054367.0], [54.2, 1054367.0], [54.3, 1063187.0], [54.4, 1063187.0], [54.5, 1066479.0], [54.6, 1066479.0], [54.7, 1071011.0], [54.8, 1071011.0], [54.9, 1075109.0], [55.0, 1075109.0], [55.1, 1078352.0], [55.2, 1078352.0], [55.3, 1079858.0], [55.4, 1079858.0], [55.5, 1080402.0], [55.6, 1080402.0], [55.7, 1085408.0], [55.8, 1085408.0], [55.9, 1088480.0], [56.0, 1088480.0], [56.1, 1093237.0], [56.2, 1093237.0], [56.3, 1095048.0], [56.4, 1095048.0], [56.5, 1097028.0], [56.6, 1097028.0], [56.7, 1097508.0], [56.8, 1097508.0], [56.9, 1104392.0], [57.0, 1104392.0], [57.1, 1108376.0], [57.2, 1108376.0], [57.3, 1114351.0], [57.4, 1114351.0], [57.5, 1115206.0], [57.6, 1115206.0], [57.7, 1119938.0], [57.8, 1119938.0], [57.9, 1127635.0], [58.0, 1127635.0], [58.1, 1128995.0], [58.2, 1128995.0], [58.3, 1133236.0], [58.4, 1133236.0], [58.5, 1133713.0], [58.6, 1133713.0], [58.7, 1135674.0], [58.8, 1135674.0], [58.9, 1138314.0], [59.0, 1138314.0], [59.1, 1141573.0], [59.2, 1141573.0], [59.3, 1144027.0], [59.4, 1144027.0], [59.5, 1149787.0], [59.6, 1149787.0], [59.7, 1150247.0], [59.8, 1150247.0], [59.9, 1151035.0], [60.0, 1151035.0], [60.1, 1158897.0], [60.2, 1158897.0], [60.3, 1167670.0], [60.4, 1167670.0], [60.5, 1178257.0], [60.6, 1178257.0], [60.7, 1182530.0], [60.8, 1182530.0], [60.9, 1185454.0], [61.0, 1185454.0], [61.1, 1185589.0], [61.2, 1185589.0], [61.3, 1187174.0], [61.4, 1187174.0], [61.5, 1187294.0], [61.6, 1187294.0], [61.7, 1191400.0], [61.8, 1191400.0], [61.9, 1192366.0], [62.0, 1192366.0], [62.1, 1195713.0], [62.2, 1195713.0], [62.3, 1202382.0], [62.4, 1202382.0], [62.5, 1205374.0], [62.6, 1205374.0], [62.7, 1212528.0], [62.8, 1212528.0], [62.9, 1214563.0], [63.0, 1214563.0], [63.1, 1224063.0], [63.2, 1224063.0], [63.3, 1225643.0], [63.4, 1225643.0], [63.5, 1231208.0], [63.6, 1231208.0], [63.7, 1237793.0], [63.8, 1237793.0], [63.9, 1247930.0], [64.0, 1247930.0], [64.1, 1248564.0], [64.2, 1248564.0], [64.3, 1253279.0], [64.4, 1253279.0], [64.5, 1254580.0], [64.6, 1254580.0], [64.7, 1257108.0], [64.8, 1257108.0], [64.9, 1265090.0], [65.0, 1265090.0], [65.1, 1265996.0], [65.2, 1265996.0], [65.3, 1268932.0], [65.4, 1268932.0], [65.5, 1281031.0], [65.6, 1281031.0], [65.7, 1281154.0], [65.8, 1281154.0], [65.9, 1281292.0], [66.0, 1281292.0], [66.1, 1287773.0], [66.2, 1287773.0], [66.3, 1288884.0], [66.4, 1288884.0], [66.5, 1291684.0], [66.6, 1291684.0], [66.7, 1302862.0], [66.8, 1302862.0], [66.9, 1305974.0], [67.0, 1305974.0], [67.1, 1306367.0], [67.2, 1306367.0], [67.3, 1307389.0], [67.4, 1307389.0], [67.5, 1309066.0], [67.6, 1309066.0], [67.7, 1312748.0], [67.8, 1312748.0], [67.9, 1312808.0], [68.0, 1312808.0], [68.1, 1313173.0], [68.2, 1313173.0], [68.3, 1315984.0], [68.4, 1315984.0], [68.5, 1317072.0], [68.6, 1317072.0], [68.7, 1332273.0], [68.8, 1332273.0], [68.9, 1339949.0], [69.0, 1339949.0], [69.1, 1341483.0], [69.2, 1341483.0], [69.3, 1341835.0], [69.4, 1341835.0], [69.5, 1342989.0], [69.6, 1342989.0], [69.7, 1347881.0], [69.8, 1347881.0], [69.9, 1353000.0], [70.0, 1353000.0], [70.1, 1353769.0], [70.2, 1353769.0], [70.3, 1367035.0], [70.4, 1367035.0], [70.5, 1369807.0], [70.6, 1369807.0], [70.7, 1372170.0], [70.8, 1372170.0], [70.9, 1382838.0], [71.0, 1382838.0], [71.1, 1383292.0], [71.2, 1383292.0], [71.3, 1385429.0], [71.4, 1385429.0], [71.5, 1394576.0], [71.6, 1394576.0], [71.7, 1394674.0], [71.8, 1394674.0], [71.9, 1401474.0], [72.0, 1401474.0], [72.1, 1404767.0], [72.2, 1404767.0], [72.3, 1406835.0], [72.4, 1406835.0], [72.5, 1413153.0], [72.6, 1413153.0], [72.7, 1413857.0], [72.8, 1413857.0], [72.9, 1415749.0], [73.0, 1415749.0], [73.1, 1417516.0], [73.2, 1417516.0], [73.3, 1434758.0], [73.4, 1434758.0], [73.5, 1439485.0], [73.6, 1439485.0], [73.7, 1443954.0], [73.8, 1443954.0], [73.9, 1446789.0], [74.0, 1446789.0], [74.1, 1449409.0], [74.2, 1449409.0], [74.3, 1455760.0], [74.4, 1455760.0], [74.5, 1457052.0], [74.6, 1457052.0], [74.7, 1463246.0], [74.8, 1463246.0], [74.9, 1464469.0], [75.0, 1464469.0], [75.1, 1467066.0], [75.2, 1467066.0], [75.3, 1468067.0], [75.4, 1468067.0], [75.5, 1469483.0], [75.6, 1469483.0], [75.7, 1486113.0], [75.8, 1486113.0], [75.9, 1491109.0], [76.0, 1491109.0], [76.1, 1492383.0], [76.2, 1492383.0], [76.3, 1494408.0], [76.4, 1494408.0], [76.5, 1494449.0], [76.6, 1494449.0], [76.7, 1495908.0], [76.8, 1495908.0], [76.9, 1496937.0], [77.0, 1496937.0], [77.1, 1502688.0], [77.2, 1502688.0], [77.3, 1503405.0], [77.4, 1503405.0], [77.5, 1505162.0], [77.6, 1505162.0], [77.7, 1512046.0], [77.8, 1512046.0], [77.9, 1527892.0], [78.0, 1527892.0], [78.1, 1529802.0], [78.2, 1529802.0], [78.3, 1530244.0], [78.4, 1530244.0], [78.5, 1534271.0], [78.6, 1534271.0], [78.7, 1536047.0], [78.8, 1536047.0], [78.9, 1538697.0], [79.0, 1538697.0], [79.1, 1540082.0], [79.2, 1540082.0], [79.3, 1546243.0], [79.4, 1546243.0], [79.5, 1547773.0], [79.6, 1547773.0], [79.7, 1552562.0], [79.8, 1552562.0], [79.9, 1553326.0], [80.0, 1553326.0], [80.1, 1563199.0], [80.2, 1563199.0], [80.3, 1566394.0], [80.4, 1566394.0], [80.5, 1567240.0], [80.6, 1567240.0], [80.7, 1569411.0], [80.8, 1569411.0], [80.9, 1572230.0], [81.0, 1572230.0], [81.1, 1576189.0], [81.2, 1576189.0], [81.3, 1579188.0], [81.4, 1579188.0], [81.5, 1580620.0], [81.6, 1580620.0], [81.7, 1582059.0], [81.8, 1582059.0], [81.9, 1584816.0], [82.0, 1584816.0], [82.1, 1584913.0], [82.2, 1584913.0], [82.3, 1594169.0], [82.4, 1594169.0], [82.5, 1601603.0], [82.6, 1601603.0], [82.7, 1610477.0], [82.8, 1610477.0], [82.9, 1611116.0], [83.0, 1611116.0], [83.1, 1619483.0], [83.2, 1619483.0], [83.3, 1623258.0], [83.4, 1623258.0], [83.5, 1627089.0], [83.6, 1627089.0], [83.7, 1629988.0], [83.8, 1629988.0], [83.9, 1632896.0], [84.0, 1632896.0], [84.1, 1634736.0], [84.2, 1634736.0], [84.3, 1642095.0], [84.4, 1642095.0], [84.5, 1643888.0], [84.6, 1643888.0], [84.7, 1644273.0], [84.8, 1644273.0], [84.9, 1646514.0], [85.0, 1646514.0], [85.1, 1652853.0], [85.2, 1652853.0], [85.3, 1664968.0], [85.4, 1664968.0], [85.5, 1667505.0], [85.6, 1667505.0], [85.7, 1672233.0], [85.8, 1672233.0], [85.9, 1674341.0], [86.0, 1674341.0], [86.1, 1674544.0], [86.2, 1674544.0], [86.3, 1680542.0], [86.4, 1680542.0], [86.5, 1680563.0], [86.6, 1680563.0], [86.7, 1683685.0], [86.8, 1683685.0], [86.9, 1685054.0], [87.0, 1685054.0], [87.1, 1687414.0], [87.2, 1687414.0], [87.3, 1690892.0], [87.4, 1690892.0], [87.5, 1690925.0], [87.6, 1690925.0], [87.7, 1692667.0], [87.8, 1692667.0], [87.9, 1695261.0], [88.0, 1695261.0], [88.1, 1722926.0], [88.2, 1722926.0], [88.3, 1738881.0], [88.4, 1738881.0], [88.5, 1742832.0], [88.6, 1742832.0], [88.7, 1746854.0], [88.8, 1746854.0], [88.9, 1749709.0], [89.0, 1749709.0], [89.1, 1752100.0], [89.2, 1752100.0], [89.3, 1753005.0], [89.4, 1753005.0], [89.5, 1754604.0], [89.6, 1754604.0], [89.7, 1757556.0], [89.8, 1757556.0], [89.9, 1758094.0], [90.0, 1758094.0], [90.1, 1760418.0], [90.2, 1760418.0], [90.3, 1763956.0], [90.4, 1763956.0], [90.5, 1764210.0], [90.6, 1764210.0], [90.7, 1765842.0], [90.8, 1765842.0], [90.9, 1768208.0], [91.0, 1768208.0], [91.1, 1768772.0], [91.2, 1768772.0], [91.3, 1771170.0], [91.4, 1771170.0], [91.5, 1771293.0], [91.6, 1771293.0], [91.7, 1775766.0], [91.8, 1775766.0], [91.9, 1777566.0], [92.0, 1777566.0], [92.1, 1782161.0], [92.2, 1782161.0], [92.3, 1782898.0], [92.4, 1782898.0], [92.5, 1787508.0], [92.6, 1787508.0], [92.7, 1788569.0], [92.8, 1788569.0], [92.9, 1791006.0], [93.0, 1791006.0], [93.1, 1811381.0], [93.2, 1811381.0], [93.3, 1816336.0], [93.4, 1816336.0], [93.5, 1827766.0], [93.6, 1827766.0], [93.7, 1831284.0], [93.8, 1831284.0], [93.9, 1833746.0], [94.0, 1833746.0], [94.1, 1837214.0], [94.2, 1837214.0], [94.3, 1840327.0], [94.4, 1840327.0], [94.5, 1841681.0], [94.6, 1841681.0], [94.7, 1849056.0], [94.8, 1849056.0], [94.9, 1851543.0], [95.0, 1851543.0], [95.1, 1857568.0], [95.2, 1857568.0], [95.3, 1862321.0], [95.4, 1862321.0], [95.5, 1864770.0], [95.6, 1864770.0], [95.7, 1867150.0], [95.8, 1867150.0], [95.9, 1871364.0], [96.0, 1871364.0], [96.1, 1872550.0], [96.2, 1872550.0], [96.3, 1872681.0], [96.4, 1872681.0], [96.5, 1875010.0], [96.6, 1875010.0], [96.7, 1876825.0], [96.8, 1876825.0], [96.9, 1876835.0], [97.0, 1876835.0], [97.1, 1881031.0], [97.2, 1881031.0], [97.3, 1888299.0], [97.4, 1888299.0], [97.5, 1888528.0], [97.6, 1888528.0], [97.7, 1890797.0], [97.8, 1890797.0], [97.9, 1897195.0], [98.0, 1897195.0], [98.1, 1897867.0], [98.2, 1897867.0], [98.3, 1904996.0], [98.4, 1904996.0], [98.5, 1911348.0], [98.6, 1911348.0], [98.7, 1913131.0], [98.8, 1913131.0], [98.9, 1915655.0], [99.0, 1915655.0], [99.1, 1918458.0], [99.2, 1918458.0], [99.3, 1939717.0], [99.4, 1939717.0], [99.5, 1943995.0], [99.6, 1943995.0], [99.7, 1946819.0], [99.8, 1946819.0], [99.9, 1980239.0], [100.0, 1980239.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 108000.0, "maxY": 6.0, "series": [{"data": [[1936700.0, 1.0], [1962300.0, 1.0], [1958200.0, 1.0], [2001200.0, 1.0], [1971500.0, 1.0], [2048300.0, 1.0], [1912100.0, 1.0], [1937700.0, 1.0], [1988900.0, 1.0], [2014500.0, 1.0], [2065700.0, 1.0], [1984800.0, 1.0], [1976600.0, 1.0], [2023700.0, 1.0], [1917200.0, 1.0], [2019600.0, 1.0], [1913100.0, 1.0], [1964300.0, 1.0], [2015500.0, 1.0], [1909000.0, 1.0], [2037000.0, 1.0], [2062600.0, 1.0], [2102000.0, 1.0], [2110200.0, 1.0], [2003200.0, 1.0], [1925500.0, 1.0], [1998200.0, 1.0], [1942900.0, 3.0], [1938800.0, 1.0], [1960300.0, 1.0], [1934700.0, 1.0], [1985900.0, 1.0], [2011500.0, 2.0], [2097700.0, 2.0], [2037100.0, 1.0], [1956200.0, 1.0], [1952100.0, 1.0], [1922400.0, 1.0], [1948000.0, 1.0], [1973600.0, 1.0], [2024800.0, 1.0], [1918300.0, 1.0], [1995100.0, 1.0], [1939800.0, 1.0], [1991000.0, 1.0], [1910100.0, 1.0], [2025800.0, 1.0], [1970500.0, 1.0], [1915200.0, 1.0], [1940800.0, 1.0], [1966400.0, 1.0], [1992000.0, 1.0], [2068800.0, 1.0], [1914300.0, 1.0], [2100100.0, 1.0], [2063800.0, 1.0], [1906100.0, 1.0], [1931700.0, 1.0], [2081200.0, 1.0], [1949100.0, 1.0], [2047400.0, 1.0], [2073000.0, 2.0], [1915300.0, 1.0], [1992100.0, 1.0], [2017700.0, 1.0], [2098100.0, 2.0], [1911200.0, 1.0], [1907100.0, 1.0], [1983900.0, 1.0], [2082200.0, 1.0], [1975700.0, 1.0], [2078100.0, 1.0], [1946000.0, 1.0], [1971600.0, 1.0], [2022800.0, 2.0], [2044300.0, 1.0], [2069900.0, 1.0], [2100200.0, 1.0], [1912200.0, 1.0], [2014600.0, 2.0], [2010500.0, 1.0], [2087300.0, 1.0], [1979900.0, 1.0], [1455600.0, 1.0], [1975800.0, 1.0], [1971700.0, 1.0], [2022900.0, 1.0], [2074100.0, 1.0], [2095600.0, 1.0], [2100000.0, 1.0], [2091500.0, 1.0], [1959400.0, 1.0], [1929700.0, 1.0], [1980900.0, 1.0], [2079200.0, 1.0], [1947100.0, 1.0], [1972700.0, 1.0], [2049500.0, 2.0], [1943000.0, 1.0], [2045400.0, 1.0], [2066900.0, 1.0], [1909200.0, 1.0], [2088400.0, 1.0], [1956300.0, 2.0], [2007500.0, 1.0], [1952200.0, 1.0], [1977800.0, 1.0], [1918400.0, 1.0], [2007100.0, 1.0], [1926200.0, 1.0], [1977400.0, 1.0], [1947700.0, 1.0], [1973300.0, 1.0], [1998900.0, 2.0], [2097300.0, 2.0], [2050100.0, 1.0], [1943600.0, 1.0], [1939500.0, 2.0], [1961000.0, 1.0], [1986600.0, 1.0], [2089000.0, 1.0], [1931300.0, 1.0], [1982500.0, 1.0], [2059300.0, 1.0], [1978400.0, 1.0], [1897500.0, 1.0], [1970200.0, 1.0], [2047000.0, 1.0], [1991700.0, 1.0], [2038800.0, 2.0], [2034700.0, 1.0], [1953800.0, 1.0], [2081800.0, 1.0], [1924100.0, 1.0], [1949700.0, 1.0], [2021500.0, 1.0], [1940600.0, 1.0], [2068600.0, 1.0], [1936500.0, 1.0], [1910900.0, 1.0], [1906800.0, 1.0], [2060400.0, 1.0], [2030700.0, 1.0], [1975400.0, 1.0], [1945700.0, 1.0], [2044000.0, 1.0], [2069600.0, 2.0], [1911900.0, 1.0], [1937500.0, 1.0], [1988700.0, 1.0], [2035800.0, 2.0], [2061400.0, 1.0], [2082900.0, 1.0], [1925200.0, 1.0], [1942600.0, 1.0], [1968200.0, 1.0], [2096200.0, 1.0], [1912900.0, 2.0], [1989700.0, 1.0], [2036800.0, 2.0], [1955000.0, 1.0], [1980600.0, 1.0], [2083000.0, 1.0], [1950900.0, 1.0], [1998000.0, 1.0], [2049200.0, 2.0], [2074800.0, 2.0], [1917100.0, 1.0], [1942700.0, 1.0], [1913000.0, 1.0], [1989800.0, 1.0], [1960100.0, 1.0], [1934500.0, 1.0], [1904800.0, 1.0], [1981600.0, 1.0], [2097600.0, 1.0], [1947800.0, 1.0], [1943700.0, 2.0], [1969300.0, 1.0], [2067600.0, 1.0], [2093200.0, 1.0], [1961100.0, 1.0], [2012300.0, 1.0], [2085000.0, 1.0], [1927300.0, 1.0], [1952900.0, 1.0], [2099700.0, 1.0], [2055300.0, 1.0], [1948800.0, 1.0], [2050300.0, 1.0], [2016500.0, 1.0], [1910000.0, 2.0], [1935600.0, 1.0], [2033900.0, 1.0], [1927400.0, 1.0], [1919200.0, 1.0], [1944800.0, 1.0], [1940700.0, 1.0], [2094300.0, 1.0], [2013400.0, 1.0], [2060500.0, 1.0], [2086100.0, 1.0], [1954000.0, 2.0], [2082000.0, 1.0], [1924300.0, 2.0], [2001100.0, 1.0], [2052300.0, 1.0], [2048200.0, 2.0], [2095300.0, 1.0], [1912000.0, 2.0], [1937600.0, 2.0], [1988800.0, 1.0], [2000700.0, 1.0], [1945400.0, 1.0], [2022200.0, 1.0], [2047800.0, 2.0], [2073400.0, 1.0], [1915700.0, 2.0], [1941300.0, 2.0], [1966900.0, 1.0], [1911600.0, 1.0], [1988400.0, 1.0], [1933100.0, 2.0], [1954600.0, 1.0], [1916700.0, 1.0], [1967900.0, 1.0], [2019100.0, 1.0], [1938200.0, 1.0], [1908500.0, 1.0], [2087700.0, 1.0], [2032400.0, 1.0], [1977100.0, 1.0], [2053900.0, 1.0], [2024200.0, 2.0], [2075400.0, 1.0], [1917700.0, 1.0], [1968900.0, 2.0], [1994500.0, 1.0], [1964800.0, 1.0], [2041600.0, 1.0], [1938300.0, 1.0], [1912700.0, 1.0], [1934200.0, 1.0], [1959800.0, 1.0], [2036600.0, 1.0], [2102800.0, 1.0], [1904500.0, 1.0], [2006900.0, 1.0], [2032500.0, 1.0], [2002800.0, 2.0], [2079600.0, 1.0], [1947500.0, 1.0], [2024300.0, 1.0], [2049900.0, 1.0], [2075500.0, 1.0], [1943400.0, 1.0], [1964900.0, 1.0], [1990500.0, 1.0], [2041700.0, 1.0], [2092900.0, 1.0], [1935200.0, 1.0], [1909600.0, 1.0], [1931100.0, 1.0], [2007900.0, 1.0], [1927000.0, 1.0], [2003800.0, 1.0], [2025300.0, 1.0], [1914700.0, 1.0], [1936200.0, 1.0], [1987400.0, 1.0], [2064200.0, 2.0], [1957700.0, 1.0], [1952700.0, 1.0], [2003900.0, 1.0], [2029500.0, 1.0], [1918900.0, 1.0], [2021300.0, 1.0], [1914800.0, 1.0], [1910700.0, 1.0], [1961900.0, 1.0], [2038700.0, 1.0], [1906600.0, 1.0], [2026400.0, 1.0], [1945500.0, 2.0], [2047900.0, 1.0], [1941400.0, 1.0], [1962900.0, 1.0], [1911700.0, 1.0], [1988500.0, 1.0], [2090900.0, 1.0], [1958800.0, 1.0], [1903500.0, 1.0], [2057100.0, 1.0], [1925000.0, 1.0], [1950600.0, 1.0], [2074500.0, 1.0], [1916800.0, 2.0], [2096000.0, 1.0], [1941500.0, 1.0], [1967100.0, 1.0], [2069500.0, 1.0], [1954800.0, 2.0], [1950700.0, 1.0], [2027500.0, 1.0], [1942500.0, 1.0], [2019300.0, 2.0], [2070500.0, 1.0], [1964000.0, 2.0], [1912800.0, 3.0], [1989600.0, 1.0], [2040800.0, 1.0], [2036700.0, 2.0], [2062300.0, 1.0], [2087900.0, 1.0], [1904600.0, 1.0], [1930200.0, 1.0], [1947600.0, 1.0], [1969100.0, 2.0], [2097100.0, 1.0], [1913800.0, 3.0], [2067400.0, 1.0], [2063300.0, 1.0], [2088900.0, 1.0], [1956800.0, 1.0], [1982400.0, 1.0], [2033600.0, 1.0], [1917500.0, 1.0], [2019900.0, 1.0], [1913400.0, 2.0], [1990200.0, 1.0], [2015800.0, 1.0], [2037300.0, 1.0], [1930800.0, 1.0], [1956400.0, 1.0], [1666600.0, 1.0], [2003500.0, 1.0], [2080300.0, 4.0], [1944100.0, 2.0], [1918500.0, 1.0], [1914400.0, 1.0], [2042400.0, 1.0], [2093600.0, 1.0], [1910300.0, 1.0], [1935900.0, 1.0], [2089500.0, 1.0], [2008600.0, 1.0], [2030100.0, 1.0], [2026000.0, 1.0], [2047500.0, 1.0], [1915400.0, 1.0], [1966600.0, 1.0], [1988100.0, 1.0], [2064900.0, 1.0], [2060800.0, 1.0], [2086400.0, 1.0], [1931900.0, 2.0], [2008700.0, 2.0], [1927800.0, 2.0], [1979000.0, 1.0], [1974900.0, 1.0], [2026100.0, 1.0], [1945200.0, 1.0], [2039400.0, 1.0], [2065000.0, 1.0], [2090600.0, 1.0], [2035300.0, 1.0], [2005600.0, 2.0], [1950300.0, 2.0], [1924700.0, 2.0], [1916500.0, 1.0], [1993300.0, 1.0], [2018900.0, 1.0], [2095700.0, 1.0], [1912400.0, 1.0], [1908300.0, 1.0], [2061900.0, 1.0], [1929800.0, 2.0], [2053700.0, 1.0], [1972800.0, 1.0], [1998400.0, 1.0], [2049600.0, 1.0], [1920700.0, 1.0], [2048700.0, 1.0], [2074300.0, 1.0], [1912500.0, 1.0], [2091700.0, 1.0], [1985200.0, 1.0], [2087600.0, 1.0], [1955500.0, 1.0], [2057900.0, 1.0], [2083500.0, 1.0], [2098600.0, 1.0], [2049700.0, 1.0], [1913500.0, 1.0], [1939100.0, 1.0], [1964700.0, 1.0], [2067100.0, 1.0], [1909400.0, 1.0], [1982100.0, 1.0], [2054800.0, 1.0], [2080400.0, 1.0], [2104800.0, 1.0], [1973900.0, 1.0], [2050700.0, 2.0], [1918600.0, 1.0], [1944200.0, 1.0], [1969800.0, 1.0], [1914500.0, 1.0], [2064000.0, 1.0], [2089600.0, 1.0], [1960700.0, 1.0], [2037500.0, 2.0], [1952500.0, 2.0], [1922800.0, 1.0], [1948400.0, 1.0], [2025200.0, 2.0], [1918700.0, 1.0], [1995500.0, 1.0], [2046700.0, 1.0], [2072300.0, 1.0], [1965800.0, 1.0], [1914600.0, 1.0], [2068200.0, 1.0], [1936100.0, 1.0], [1932000.0, 2.0], [1927900.0, 1.0], [2004700.0, 1.0], [2102600.0, 1.0], [1949400.0, 1.0], [1975000.0, 1.0], [1919700.0, 2.0], [2073300.0, 1.0], [1907400.0, 1.0], [2009800.0, 1.0], [2086600.0, 1.0], [1924800.0, 1.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[132000.0, 1.0], [1757500.0, 1.0], [1047700.0, 1.0], [787600.0, 3.0], [224800.0, 1.0], [485700.0, 1.0], [655000.0, 1.0], [385600.0, 1.0], [770200.0, 2.0], [1097000.0, 1.0], [1831200.0, 1.0], [1353000.0, 1.0], [475200.0, 1.0], [1305900.0, 1.0], [788100.0, 1.0], [1643800.0, 1.0], [1486100.0, 1.0], [630400.0, 1.0], [903300.0, 1.0], [1302800.0, 1.0], [359500.0, 1.0], [544900.0, 1.0], [557700.0, 1.0], [1417500.0, 1.0], [461900.0, 1.0], [1690900.0, 1.0], [1187100.0, 1.0], [257700.0, 2.0], [1913100.0, 1.0], [860300.0, 1.0], [1904900.0, 1.0], [1674500.0, 1.0], [130700.0, 1.0], [1022600.0, 1.0], [875700.0, 1.0], [926900.0, 1.0], [858800.0, 1.0], [883900.0, 1.0], [1231200.0, 1.0], [1265000.0, 1.0], [1341800.0, 1.0], [982200.0, 1.0], [1192300.0, 1.0], [1572200.0, 1.0], [131500.0, 1.0], [1867100.0, 1.0], [846500.0, 1.0], [1943900.0, 1.0], [305500.0, 1.0], [1291600.0, 1.0], [1611100.0, 1.0], [974500.0, 1.0], [363100.0, 2.0], [1095000.0, 1.0], [1530200.0, 1.0], [1782100.0, 1.0], [581800.0, 1.0], [1224000.0, 1.0], [944300.0, 1.0], [1897800.0, 1.0], [352600.0, 1.0], [1313100.0, 1.0], [1492300.0, 1.0], [1309000.0, 1.0], [461400.0, 1.0], [1108300.0, 1.0], [1342900.0, 1.0], [1547700.0, 1.0], [377700.0, 1.0], [776400.0, 1.0], [1036500.0, 1.0], [827600.0, 1.0], [1449400.0, 1.0], [257200.0, 1.0], [1066400.0, 1.0], [296800.0, 1.0], [1765800.0, 1.0], [643800.0, 1.0], [916700.0, 1.0], [1667500.0, 1.0], [938200.0, 1.0], [1104300.0, 1.0], [968900.0, 1.0], [1382800.0, 1.0], [462700.0, 3.0], [687300.0, 1.0], [550600.0, 1.0], [1890700.0, 1.0], [576200.0, 1.0], [1187200.0, 1.0], [1634700.0, 1.0], [362600.0, 2.0], [1494400.0, 2.0], [1502600.0, 1.0], [732400.0, 1.0], [783600.0, 1.0], [1054200.0, 1.0], [1079800.0, 1.0], [1339900.0, 1.0], [252600.0, 1.0], [246200.0, 1.0], [1754600.0, 1.0], [358000.0, 1.0], [1013500.0, 1.0], [1567200.0, 1.0], [791800.0, 1.0], [1695200.0, 1.0], [1191400.0, 1.0], [667900.0, 1.0], [958200.0, 1.0], [783100.0, 1.0], [131900.0, 3.0], [293500.0, 1.0], [363900.0, 2.0], [1563100.0, 1.0], [247100.0, 1.0], [1619400.0, 1.0], [1128900.0, 1.0], [1871300.0, 1.0], [1841600.0, 1.0], [1918400.0, 1.0], [124800.0, 1.0], [126400.0, 1.0], [1875000.0, 1.0], [356100.0, 1.0], [1674300.0, 1.0], [1205300.0, 1.0], [1044500.0, 1.0], [1315900.0, 1.0], [1443900.0, 1.0], [1738800.0, 1.0], [647700.0, 1.0], [246400.0, 1.0], [294400.0, 1.0], [587800.0, 1.0], [847900.0, 1.0], [1312800.0, 1.0], [1001500.0, 1.0], [1214500.0, 1.0], [540700.0, 1.0], [933400.0, 1.0], [1752100.0, 1.0], [758300.0, 1.0], [1791000.0, 1.0], [1048600.0, 1.0], [1151000.0, 1.0], [883200.0, 1.0], [1782800.0, 1.0], [1078300.0, 1.0], [247300.0, 1.0], [1672200.0, 1.0], [661000.0, 1.0], [385800.0, 1.0], [1536000.0, 1.0], [449800.0, 1.0], [118300.0, 1.0], [462600.0, 1.0], [469000.0, 1.0], [808500.0, 1.0], [1552500.0, 1.0], [359700.0, 1.0], [1680500.0, 2.0], [1202300.0, 1.0], [782900.0, 1.0], [1851500.0, 1.0], [880700.0, 1.0], [1254500.0, 1.0], [1053800.0, 1.0], [573500.0, 2.0], [1080400.0, 1.0], [1579100.0, 1.0], [1212500.0, 1.0], [1464400.0, 1.0], [788000.0, 1.0], [1775700.0, 1.0], [838700.0, 1.0], [1115200.0, 1.0], [1601600.0, 1.0], [1434700.0, 1.0], [1652800.0, 1.0], [761900.0, 1.0], [1281100.0, 1.0], [1127600.0, 1.0], [1281200.0, 1.0], [363300.0, 1.0], [1690800.0, 1.0], [459300.0, 1.0], [1063100.0, 1.0], [952400.0, 1.0], [1114300.0, 1.0], [1946800.0, 1.0], [256400.0, 1.0], [1840300.0, 1.0], [875100.0, 1.0], [640600.0, 1.0], [939100.0, 1.0], [1268900.0, 1.0], [1623200.0, 1.0], [580700.0, 1.0], [1576100.0, 1.0], [721500.0, 1.0], [1503400.0, 1.0], [358700.0, 1.0], [833600.0, 1.0], [1683600.0, 1.0], [1491100.0, 1.0], [1760400.0, 1.0], [1837200.0, 1.0], [257300.0, 1.0], [547400.0, 1.0], [675400.0, 1.0], [1133700.0, 1.0], [615500.0, 1.0], [1317000.0, 1.0], [743500.0, 1.0], [835700.0, 1.0], [1167600.0, 1.0], [976500.0, 1.0], [1768700.0, 1.0], [1248500.0, 1.0], [1888500.0, 1.0], [1150200.0, 1.0], [1939700.0, 1.0], [462900.0, 1.0], [946800.0, 1.0], [1534200.0, 1.0], [831100.0, 1.0], [362800.0, 1.0], [1265900.0, 1.0], [674400.0, 1.0], [576100.0, 1.0], [840800.0, 1.0], [458300.0, 1.0], [1347800.0, 1.0], [1144000.0, 1.0], [345400.0, 1.0], [1049800.0, 1.0], [874600.0, 1.0], [951400.0, 1.0], [143200.0, 1.0], [1758000.0, 1.0], [463300.0, 2.0], [998800.0, 1.0], [674200.0, 2.0], [1383200.0, 1.0], [1182500.0, 1.0], [1980200.0, 1.0], [1446700.0, 1.0], [131300.0, 1.0], [362700.0, 1.0], [841600.0, 1.0], [1404700.0, 1.0], [1097500.0, 1.0], [490700.0, 1.0], [593800.0, 1.0], [1768200.0, 1.0], [1149700.0, 1.0], [429000.0, 1.0], [1584900.0, 1.0], [952200.0, 1.0], [128300.0, 1.0], [132200.0, 1.0], [1627000.0, 1.0], [549300.0, 1.0], [1746800.0, 1.0], [231400.0, 2.0], [942000.0, 1.0], [479700.0, 1.0], [1827700.0, 1.0], [813500.0, 1.0], [1687400.0, 1.0], [1764200.0, 1.0], [783800.0, 1.0], [1018300.0, 1.0], [847800.0, 1.0], [437200.0, 1.0], [450000.0, 1.0], [634300.0, 1.0], [886200.0, 1.0], [462800.0, 1.0], [1457000.0, 1.0], [1811300.0, 1.0], [554400.0, 1.0], [1253200.0, 1.0], [1406800.0, 1.0], [733600.0, 1.0], [1777500.0, 1.0], [1495900.0, 1.0], [257900.0, 2.0], [562600.0, 1.0], [575400.0, 4.0], [1394500.0, 1.0], [1496900.0, 1.0], [387800.0, 1.0], [754600.0, 1.0], [1505100.0, 1.0], [1876800.0, 2.0], [1023400.0, 1.0], [850900.0, 1.0], [1692600.0, 1.0], [1312700.0, 1.0], [1582000.0, 1.0], [1385400.0, 1.0], [573400.0, 1.0], [1753000.0, 1.0], [675800.0, 1.0], [1881000.0, 1.0], [739800.0, 1.0], [1463200.0, 1.0], [1540000.0, 1.0], [526300.0, 1.0], [641500.0, 1.0], [1394600.0, 1.0], [1646500.0, 1.0], [131700.0, 6.0], [1088400.0, 1.0], [1553300.0, 1.0], [664000.0, 1.0], [395500.0, 1.0], [1071000.0, 1.0], [1075100.0, 1.0], [744900.0, 1.0], [1225600.0, 1.0], [646600.0, 2.0], [455400.0, 1.0], [1664900.0, 1.0], [1864700.0, 1.0], [1135600.0, 1.0], [870900.0, 1.0], [161400.0, 1.0], [1527800.0, 1.0], [1353700.0, 1.0], [840700.0, 1.0], [747000.0, 1.0], [836600.0, 1.0], [849400.0, 1.0], [1413100.0, 1.0], [1281000.0, 1.0], [674300.0, 2.0], [1332200.0, 1.0], [1857500.0, 1.0], [918500.0, 1.0], [1085400.0, 1.0], [1742800.0, 1.0], [1341400.0, 1.0], [1367000.0, 1.0], [1469400.0, 1.0], [1546200.0, 1.0], [1372100.0, 1.0], [1888200.0, 1.0], [363000.0, 1.0], [108000.0, 1.0], [516600.0, 1.0], [1529800.0, 1.0], [132800.0, 1.0], [547600.0, 1.0], [1580600.0, 1.0], [675600.0, 2.0], [352900.0, 1.0], [739600.0, 1.0], [1763900.0, 1.0], [219200.0, 1.0], [641300.0, 1.0], [944400.0, 1.0], [1401400.0, 1.0], [257600.0, 4.0], [291200.0, 1.0], [342400.0, 1.0], [1632800.0, 1.0], [863000.0, 1.0], [1538600.0, 1.0], [1415700.0, 1.0], [1287700.0, 1.0], [1642000.0, 1.0], [940800.0, 1.0], [1722900.0, 1.0], [1685000.0, 1.0], [641800.0, 1.0], [705800.0, 1.0], [1911300.0, 1.0], [115900.0, 1.0], [131400.0, 4.0], [827700.0, 1.0], [362900.0, 1.0], [1872500.0, 1.0], [217800.0, 1.0], [1185400.0, 1.0], [926000.0, 1.0], [1138300.0, 1.0], [1467000.0, 1.0], [1569400.0, 1.0], [1288800.0, 1.0], [1468000.0, 1.0], [1787500.0, 1.0], [541500.0, 1.0], [448400.0, 1.0], [132300.0, 1.0], [1093200.0, 1.0], [1455700.0, 1.0], [679200.0, 1.0], [1771100.0, 1.0], [1178200.0, 1.0], [228300.0, 1.0], [1566300.0, 1.0], [1054300.0, 1.0], [257100.0, 1.0], [1788500.0, 1.0], [264600.0, 1.0], [303000.0, 1.0], [883500.0, 1.0], [921900.0, 1.0], [1512000.0, 1.0], [866600.0, 1.0], [131000.0, 1.0], [873300.0, 1.0], [1195700.0, 1.0], [200400.0, 1.0], [456100.0, 1.0], [462500.0, 2.0], [971600.0, 1.0], [258000.0, 1.0], [1306300.0, 1.0], [1644200.0, 1.0], [1849000.0, 1.0], [1022300.0, 1.0], [1307300.0, 1.0], [1584800.0, 1.0], [1610400.0, 1.0], [1413800.0, 1.0], [1439400.0, 1.0], [1862300.0, 1.0], [1158800.0, 1.0], [1133200.0, 1.0], [575300.0, 2.0], [1119900.0, 1.0], [1247900.0, 1.0], [1897100.0, 1.0], [669000.0, 1.0], [1257100.0, 1.0], [854900.0, 1.0], [363700.0, 1.0], [1594100.0, 1.0], [1141500.0, 1.0], [1816300.0, 1.0], [773500.0, 1.0], [1833700.0, 1.0], [1872600.0, 1.0], [744800.0, 1.0], [834400.0, 1.0], [1915600.0, 1.0], [1185500.0, 1.0], [257500.0, 2.0], [936300.0, 1.0], [1629900.0, 1.0], [1237700.0, 1.0], [393400.0, 1.0], [1771200.0, 1.0], [1369800.0, 1.0], [476600.0, 1.0], [1749700.0, 1.0], [130800.0, 1.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2110200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1000.0, "series": [{"data": [[2.0, 1000.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.5, "minX": 1.53045264E12, "maxY": 500.0, "series": [{"data": [[1.53045366E12, 500.0], [1.53045648E12, 39.5], [1.53045426E12, 499.0], [1.53045588E12, 175.0], [1.53045264E12, 500.0], [1.53045468E12, 460.5], [1.5304563E12, 81.0], [1.53045306E12, 500.0], [1.53045528E12, 309.0], [1.53045444E12, 498.0], [1.53045606E12, 134.5], [1.53045282E12, 500.0], [1.53045504E12, 365.0], [1.53045546E12, 270.0], [1.53045324E12, 500.0], [1.53045486E12, 414.5], [1.53045384E12, 500.0], [1.5304527E12, 500.0], [1.53045492E12, 399.0], [1.53045552E12, 256.5], [1.53045654E12, 25.5], [1.5304533E12, 500.0], [1.53045372E12, 500.0], [1.53045594E12, 161.5], [1.53045534E12, 295.5], [1.53045432E12, 498.14285714285717], [1.53045348E12, 500.0], [1.5304557E12, 216.0], [1.5304551E12, 349.5], [1.53045408E12, 499.59999999999997], [1.5304539E12, 500.0], [1.53045612E12, 121.0], [1.53045288E12, 500.0], [1.5304545E12, 498.0], [1.53045396E12, 500.0], [1.53045618E12, 107.0], [1.53045558E12, 243.0], [1.53045456E12, 491.57894736842104], [1.53045276E12, 500.0], [1.53045438E12, 498.0], [1.53045336E12, 500.0], [1.53045498E12, 382.0], [1.5304566E12, 9.5], [1.53045414E12, 499.0], [1.53045636E12, 67.0], [1.53045312E12, 500.0], [1.53045474E12, 444.0], [1.53045294E12, 500.0], [1.53045516E12, 335.0], [1.53045576E12, 202.5], [1.53045354E12, 500.0], [1.530453E12, 500.0], [1.53045462E12, 476.0], [1.5304536E12, 500.0], [1.53045522E12, 322.0], [1.53045342E12, 500.0], [1.53045624E12, 94.0], [1.53045402E12, 500.0], [1.53045564E12, 229.5], [1.53045318E12, 500.0], [1.530456E12, 148.0], [1.53045378E12, 500.0], [1.5304554E12, 282.5], [1.5304542E12, 499.0], [1.53045642E12, 53.0], [1.53045582E12, 189.0], [1.5304548E12, 429.5]], "isOverall": false, "label": "bzm - Concurrency Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5304566E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 776257.2558746741, "minX": 1.0, "maxY": 2110230.0, "series": [{"data": [[2.0, 2069698.0], [3.0, 2048394.0], [4.0, 2064244.0], [5.0, 2074398.0], [6.0, 2082964.0], [7.0, 2086154.0], [8.0, 2086656.0], [9.0, 2087619.0], [10.0, 2093671.0], [11.0, 2098696.0], [12.0, 2095395.0], [13.0, 2095615.0], [14.0, 2091743.0], [15.0, 2091584.0], [16.0, 2094315.0], [17.0, 2110230.0], [18.0, 2097775.0], [19.0, 2102076.0], [20.0, 2092933.0], [21.0, 2102679.0], [22.0, 2104812.0], [23.0, 2102831.0], [24.0, 2098128.0], [25.0, 2097776.0], [26.0, 2098104.0], [27.0, 2097129.0], [28.0, 2096033.0], [29.0, 2089640.0], [30.0, 2087725.0], [31.0, 2090663.0], [33.0, 2099756.0], [32.0, 2100023.0], [35.0, 2100183.0], [34.0, 2096273.0], [37.0, 2097312.0], [36.0, 2100209.0], [39.0, 2095765.0], [38.0, 2097339.0], [41.0, 2087341.0], [40.0, 2093227.0], [43.0, 2080387.0], [42.0, 2079667.0], [45.0, 2089058.0], [44.0, 2082286.0], [47.0, 2097679.0], [46.0, 2080316.0], [49.0, 2089588.0], [48.0, 2081868.0], [51.0, 2081201.0], [50.0, 2082037.0], [53.0, 2083014.0], [52.0, 2080361.0], [55.0, 2073071.0], [54.0, 2083557.0], [57.0, 2073487.0], [56.0, 2072377.0], [59.0, 2069518.0], [58.0, 2085067.0], [61.0, 2079269.0], [60.0, 2080343.0], [63.0, 2088996.0], [62.0, 2090944.0], [67.0, 2075476.0], [66.0, 2086410.0], [65.0, 2087904.0], [64.0, 2088460.0], [71.0, 2067188.0], [70.0, 2066941.0], [69.0, 2069620.0], [68.0, 2074899.0], [75.0, 2075517.0], [74.0, 2080412.0], [73.0, 2065791.0], [72.0, 2078143.0], [79.0, 2068271.0], [78.0, 2069902.0], [77.0, 2068617.0], [76.0, 2074816.0], [83.0, 2060851.0], [82.0, 2064238.0], [81.0, 2063382.0], [80.0, 2064950.0], [87.0, 2068837.0], [86.0, 2064031.0], [85.0, 2067499.0], [84.0, 2061481.0], [91.0, 2073039.0], [90.0, 2074569.0], [89.0, 2070554.0], [88.0, 2073337.0], [95.0, 2060432.0], [94.0, 2061925.0], [93.0, 2067633.0], [92.0, 2074197.0], [99.0, 2046704.0], [98.0, 2050168.0], [97.0, 2050794.0], [96.0, 2049543.0], [103.0, 2057157.0], [102.0, 2057932.0], [101.0, 2060570.0], [100.0, 2062616.0], [107.0, 2047074.0], [106.0, 2047822.0], [105.0, 2050335.0], [104.0, 2049615.0], [111.0, 2048264.0], [110.0, 2044015.0], [109.0, 2048284.0], [108.0, 2045439.0], [115.0, 2049234.0], [114.0, 2062313.0], [113.0, 2047432.0], [112.0, 2053756.0], [119.0, 2053987.0], [118.0, 2063813.0], [117.0, 2065097.0], [116.0, 2054899.0], [123.0, 2036701.0], [122.0, 2042441.0], [121.0, 2047892.0], [120.0, 2059373.0], [127.0, 2050733.0], [126.0, 2048747.0], [125.0, 2040845.0], [124.0, 2034745.0], [135.0, 2039436.0], [134.0, 2035892.0], [133.0, 2035318.0], [132.0, 2033968.0], [131.0, 2038830.0], [130.0, 2038864.0], [129.0, 2049595.0], [128.0, 2049758.0], [143.0, 2052336.0], [142.0, 2047929.0], [141.0, 2047562.0], [140.0, 2041762.0], [139.0, 2035827.0], [138.0, 2036788.0], [137.0, 2041692.0], [136.0, 2036899.0], [151.0, 2025847.0], [150.0, 2024220.0], [149.0, 2029582.0], [148.0, 2033638.0], [147.0, 2044363.0], [146.0, 2049255.0], [145.0, 2049941.0], [144.0, 2038755.0], [159.0, 2024388.0], [158.0, 2026498.0], [157.0, 2022993.0], [156.0, 2032578.0], [155.0, 2036818.0], [154.0, 2037083.0], [153.0, 2037573.0], [152.0, 2022854.0], [167.0, 2037171.0], [166.0, 2027567.0], [165.0, 2022294.0], [164.0, 2022894.0], [163.0, 2025229.0], [162.0, 2025397.0], [161.0, 2017775.0], [160.0, 2019168.0], [175.0, 2026007.0], [174.0, 2026179.0], [173.0, 2030778.0], [172.0, 2037511.0], [171.0, 2036690.0], [170.0, 2037320.0], [169.0, 2030107.0], [168.0, 2032433.0], [183.0, 2019686.0], [182.0, 2018901.0], [181.0, 2021537.0], [180.0, 2024897.0], [179.0, 2011528.0], [178.0, 2011510.0], [177.0, 2014517.0], [176.0, 2014670.0], [191.0, 2007166.0], [190.0, 2008715.0], [189.0, 2001181.0], [188.0, 2015548.0], [187.0, 2003957.0], [186.0, 2005678.0], [185.0, 2006930.0], [184.0, 2009891.0], [199.0, 2019351.0], [198.0, 2019312.0], [197.0, 2021373.0], [196.0, 2023796.0], [195.0, 2025252.0], [194.0, 2024270.0], [193.0, 2019984.0], [192.0, 2008703.0], [207.0, 2005678.0], [206.0, 2001241.0], [205.0, 1998289.0], [204.0, 1998401.0], [203.0, 2004722.0], [202.0, 2012350.0], [201.0, 2015883.0], [200.0, 2014695.0], [215.0, 1993364.0], [214.0, 1992169.0], [213.0, 1991096.0], [212.0, 1991799.0], [211.0, 1990574.0], [210.0, 2003500.0], [209.0, 2007532.0], [208.0, 2010585.0], [223.0, 2002812.0], [222.0, 1984859.0], [221.0, 2013476.0], [220.0, 2008656.0], [219.0, 2016584.0], [218.0, 1988574.0], [217.0, 1989628.0], [216.0, 1998099.0], [231.0, 1985917.0], [230.0, 1992085.0], [229.0, 1995510.0], [228.0, 1998940.0], [227.0, 2003809.0], [226.0, 2003221.0], [225.0, 2007934.0], [224.0, 2002813.0], [239.0, 1975862.0], [238.0, 1973901.0], [237.0, 1982572.0], [236.0, 1988462.0], [235.0, 1989779.0], [234.0, 1988842.0], [233.0, 1979038.0], [232.0, 1983951.0], [247.0, 1998965.0], [246.0, 1971511.0], [245.0, 1969100.0], [244.0, 1976602.0], [243.0, 1971781.0], [242.0, 1972702.0], [241.0, 1971611.0], [240.0, 1975796.0], [255.0, 1981633.0], [254.0, 1979933.0], [253.0, 1986605.0], [252.0, 1989822.0], [251.0, 1988977.0], [250.0, 1988732.0], [249.0, 2000762.0], [248.0, 1994583.0], [270.0, 1959854.0], [271.0, 1967111.0], [269.0, 1956216.0], [268.0, 1962311.0], [267.0, 1956898.0], [266.0, 1958871.0], [265.0, 1961920.0], [264.0, 1967972.0], [263.0, 1973380.0], [257.0, 1980662.0], [256.0, 1980940.0], [259.0, 1969120.0], [258.0, 1966975.0], [262.0, 1972889.0], [261.0, 1964035.0], [260.0, 1974938.0], [286.0, 1954094.0], [287.0, 1956451.0], [285.0, 1952908.0], [284.0, 1966497.0], [283.0, 1968976.0], [282.0, 1969353.0], [281.0, 1966678.0], [280.0, 1968297.0], [279.0, 1975014.0], [273.0, 1948477.0], [272.0, 1952202.0], [275.0, 1988173.0], [274.0, 1977470.0], [278.0, 1975451.0], [277.0, 1977857.0], [276.0, 1985233.0], [302.0, 1970280.0], [303.0, 1970569.0], [301.0, 1938856.0], [300.0, 1964316.0], [299.0, 1933192.0], [298.0, 1935977.0], [297.0, 1940754.0], [296.0, 1944869.0], [295.0, 1942779.0], [289.0, 1959424.0], [288.0, 1956389.0], [291.0, 1950944.0], [290.0, 1950617.0], [294.0, 1939824.0], [293.0, 1940682.0], [292.0, 1944155.0], [318.0, 1936206.0], [319.0, 1929743.0], [317.0, 1937743.0], [316.0, 1934744.0], [315.0, 1931799.0], [314.0, 1941379.0], [313.0, 1937693.0], [312.0, 1941524.0], [311.0, 1945775.0], [305.0, 1958273.0], [304.0, 1964711.0], [307.0, 1953888.0], [306.0, 1957751.0], [310.0, 1946088.0], [309.0, 1950355.0], [308.0, 1954854.0], [334.0, 1939511.0], [335.0, 1937679.0], [333.0, 1942617.0], [332.0, 1943622.0], [331.0, 1948851.0], [330.0, 1954694.0], [329.0, 1931951.0], [328.0, 1955017.0], [327.0, 1920795.0], [321.0, 1927491.0], [320.0, 1927961.0], [323.0, 1931381.0], [322.0, 1927880.0], [326.0, 1918917.0], [325.0, 1924744.0], [324.0, 1925026.0], [350.0, 1914558.0], [351.0, 1914330.0], [349.0, 1915301.0], [348.0, 1912202.0], [347.0, 1913179.0], [346.0, 1913844.0], [345.0, 1917107.0], [344.0, 1918512.0], [343.0, 1913888.0], [337.0, 1930243.0], [336.0, 1933187.0], [339.0, 1919760.0], [338.0, 1925502.0], [342.0, 1914813.0], [341.0, 1918753.0], [340.0, 1922895.0], [366.0, 1932005.0], [367.0, 1924321.0], [365.0, 1932038.0], [364.0, 1939587.0], [363.0, 1943708.0], [362.0, 1943700.0], [361.0, 1948013.0], [360.0, 1949754.0], [359.0, 1947599.0], [353.0, 1904534.0], [352.0, 1906107.0], [355.0, 1927045.0], [354.0, 1914691.0], [358.0, 1949446.0], [357.0, 1941385.0], [356.0, 1952780.0], [382.0, 1925255.0], [383.0, 1942583.0], [381.0, 1903583.0], [380.0, 1918362.0], [379.0, 1917263.0], [378.0, 1913888.0], [377.0, 1912873.0], [376.0, 1909659.0], [375.0, 1913090.0], [369.0, 1914482.0], [368.0, 1924709.0], [371.0, 1917511.0], [370.0, 1911679.0], [374.0, 1913461.0], [373.0, 1912838.0], [372.0, 1916826.0], [398.0, 1914760.0], [399.0, 1916510.0], [397.0, 1917718.0], [396.0, 1922486.0], [395.0, 1934217.0], [394.0, 1935614.0], [393.0, 1937585.0], [392.0, 1940897.0], [391.0, 1952121.0], [385.0, 1942962.0], [384.0, 1952584.0], [387.0, 1947655.0], [386.0, 1950307.0], [390.0, 1954094.0], [389.0, 1955542.0], [388.0, 1950725.0], [414.0, 1947859.0], [415.0, 1944213.0], [413.0, 1949151.0], [412.0, 1961160.0], [411.0, 1945461.0], [410.0, 1947726.0], [409.0, 1912966.0], [408.0, 1926227.0], [407.0, 1906846.0], [401.0, 1912157.0], [400.0, 1912807.0], [403.0, 1911908.0], [402.0, 1911233.0], [406.0, 1915409.0], [405.0, 1910790.0], [404.0, 1912485.0], [430.0, 1910935.0], [431.0, 1908372.0], [429.0, 1911779.0], [428.0, 1912721.0], [427.0, 1913438.0], [426.0, 1916727.0], [425.0, 1924136.0], [424.0, 1927392.0], [423.0, 1927820.0], [417.0, 1964894.0], [416.0, 1965845.0], [419.0, 1952587.0], [418.0, 1960715.0], [422.0, 1945527.0], [421.0, 1945533.0], [420.0, 1947110.0], [446.0, 1969858.0], [447.0, 1964039.0], [445.0, 1977155.0], [444.0, 1934540.0], [443.0, 1964906.0], [442.0, 1982471.0], [441.0, 1938375.0], [440.0, 1939181.0], [439.0, 1930803.0], [433.0, 1910337.0], [432.0, 1910195.0], [435.0, 1897554.0], [434.0, 1908572.0], [438.0, 1938297.0], [437.0, 1936146.0], [436.0, 1907407.0], [462.0, 1904894.0], [463.0, 1906693.0], [461.0, 1904646.0], [460.0, 1915293.0], [459.0, 1918424.0], [458.0, 1918633.0], [457.0, 1919274.0], [456.0, 1919744.0], [455.0, 1924327.0], [449.0, 1956384.0], [448.0, 1961003.0], [451.0, 1941475.0], [450.0, 1943494.0], [454.0, 1931122.0], [453.0, 1931969.0], [452.0, 1936519.0], [478.0, 1962923.0], [479.0, 1960375.0], [477.0, 1968992.0], [476.0, 1978413.0], [475.0, 1982184.0], [474.0, 1987469.0], [473.0, 1995195.0], [472.0, 1990210.0], [471.0, 1973622.0], [465.0, 1909493.0], [464.0, 1916875.0], [467.0, 1912514.0], [466.0, 1913594.0], [470.0, 1935253.0], [469.0, 1907164.0], [468.0, 1912991.0], [494.0, 1912011.0], [495.0, 1909070.0], [493.0, 1912057.0], [492.0, 1915746.0], [491.0, 1915761.0], [490.0, 1924847.0], [489.0, 1929842.0], [488.0, 1929844.0], [487.0, 1936751.0], [481.0, 1954896.0], [480.0, 1960171.0], [483.0, 1944104.0], [482.0, 1945275.0], [486.0, 1943098.0], [485.0, 1942930.0], [484.0, 1942924.0], [500.0, 1455668.0], [499.0, 1666630.0], [498.0, 1910026.0], [497.0, 1909220.0], [496.0, 1910076.0], [1.0, 2055395.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[250.5, 1990456.599999999]], "isOverall": false, "label": "completarEncuestaPreInscripcion-Aggregated", "isController": false}, {"data": [[500.0, 776257.2558746741], [499.0, 1598281.8035714282], [498.0, 1826651.4000000001], [496.0, 1939717.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}, {"data": [[499.6400000000003, 996698.2220000006]], "isOverall": false, "label": "obtenerEncuesta-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6.433333333333334, "minX": 1.53045264E12, "maxY": 21233.233333333334, "series": [{"data": [[1.53045366E12, 10982.7], [1.53045648E12, 105.0], [1.53045426E12, 14643.416666666666], [1.53045588E12, 112.5], [1.53045264E12, 21233.233333333334], [1.53045468E12, 135.0], [1.5304563E12, 97.5], [1.53045306E12, 6589.2], [1.53045528E12, 97.5], [1.53045444E12, 10250.066666666668], [1.53045606E12, 90.0], [1.53045282E12, 5124.966666666666], [1.53045504E12, 112.5], [1.53045546E12, 97.5], [1.53045324E12, 11714.316666666668], [1.53045486E12, 120.0], [1.53045384E12, 14643.216666666667], [1.5304527E12, 1464.25], [1.53045492E12, 112.5], [1.53045552E12, 105.0], [1.53045654E12, 105.0], [1.5304533E12, 11714.683333333332], [1.53045372E12, 11714.816666666668], [1.53045594E12, 90.0], [1.53045534E12, 105.0], [1.53045432E12, 9526.0], [1.53045348E12, 7321.366666666667], [1.5304557E12, 97.5], [1.5304551E12, 120.0], [1.53045408E12, 10257.883333333333], [1.5304539E12, 8786.833333333334], [1.53045612E12, 112.5], [1.53045288E12, 16107.783333333333], [1.5304545E12, 10982.866666666667], [1.53045396E12, 12446.983333333334], [1.53045618E12, 97.5], [1.53045558E12, 97.5], [1.53045456E12, 2316.483333333333], [1.53045276E12, 19036.416666666668], [1.53045438E12, 12446.466666666667], [1.53045336E12, 10250.633333333333], [1.53045498E12, 142.5], [1.5304566E12, 135.0], [1.53045414E12, 10982.25], [1.53045636E12, 112.5], [1.53045312E12, 13179.433333333332], [1.53045474E12, 112.5], [1.53045294E12, 5125.416666666667], [1.53045516E12, 97.5], [1.53045576E12, 105.0], [1.53045354E12, 13179.1], [1.530453E12, 18304.233333333334], [1.53045462E12, 97.5], [1.5304536E12, 9518.166666666666], [1.53045522E12, 97.5], [1.53045342E12, 16840.433333333334], [1.53045624E12, 97.5], [1.53045402E12, 10982.55], [1.53045564E12, 105.0], [1.53045318E12, 8786.15], [1.530456E12, 112.5], [1.53045378E12, 9518.3], [1.5304554E12, 90.0], [1.5304542E12, 10250.333333333334], [1.53045642E12, 97.5], [1.53045582E12, 97.5], [1.5304548E12, 105.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53045366E12, 48.25], [1.53045648E12, 161.4], [1.53045426E12, 64.33333333333333], [1.53045588E12, 172.26666666666668], [1.53045264E12, 93.28333333333333], [1.53045468E12, 207.91666666666666], [1.5304563E12, 150.08333333333334], [1.53045306E12, 28.95], [1.53045528E12, 150.25], [1.53045444E12, 45.03333333333333], [1.53045606E12, 138.08333333333334], [1.53045282E12, 22.516666666666666], [1.53045504E12, 173.0], [1.53045546E12, 150.36666666666667], [1.53045324E12, 51.46666666666667], [1.53045486E12, 184.16666666666666], [1.53045384E12, 64.33333333333333], [1.5304527E12, 6.433333333333334], [1.53045492E12, 172.76666666666668], [1.53045552E12, 160.6], [1.53045654E12, 161.63333333333333], [1.5304533E12, 51.46666666666667], [1.53045372E12, 51.46666666666667], [1.53045594E12, 138.25], [1.53045534E12, 160.91666666666666], [1.53045432E12, 53.21666666666667], [1.53045348E12, 32.166666666666664], [1.5304557E12, 150.08333333333334], [1.5304551E12, 184.6], [1.53045408E12, 56.43333333333333], [1.5304539E12, 38.6], [1.53045612E12, 172.7], [1.53045288E12, 70.76666666666667], [1.5304545E12, 48.25], [1.53045396E12, 54.68333333333333], [1.53045618E12, 150.11666666666667], [1.53045558E12, 150.18333333333334], [1.53045456E12, 194.06666666666666], [1.53045276E12, 83.63333333333334], [1.53045438E12, 54.68333333333333], [1.53045336E12, 45.03333333333333], [1.53045498E12, 218.96666666666667], [1.5304566E12, 207.76666666666668], [1.53045414E12, 48.25], [1.53045636E12, 172.4], [1.53045312E12, 57.9], [1.53045474E12, 173.41666666666666], [1.53045294E12, 22.516666666666666], [1.53045516E12, 149.7], [1.53045576E12, 161.33333333333334], [1.53045354E12, 57.9], [1.530453E12, 80.41666666666667], [1.53045462E12, 149.5], [1.5304536E12, 41.81666666666667], [1.53045522E12, 150.08333333333334], [1.53045342E12, 73.98333333333333], [1.53045624E12, 149.98333333333332], [1.53045402E12, 48.25], [1.53045564E12, 162.0], [1.53045318E12, 38.6], [1.530456E12, 173.01666666666668], [1.53045378E12, 41.81666666666667], [1.5304554E12, 138.61666666666667], [1.5304542E12, 45.03333333333333], [1.53045642E12, 150.43333333333334], [1.53045582E12, 149.98333333333332], [1.5304548E12, 162.06666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5304566E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 129741.82758620688, "minX": 1.53045264E12, "maxY": 2097182.2857142854, "series": [{"data": [[1.53045618E12, 2050591.9230769232], [1.53045648E12, 2091365.6428571427], [1.53045558E12, 1979672.923076923], [1.53045456E12, 1924269.1875], [1.53045588E12, 2024972.3333333337], [1.53045468E12, 1916898.2777777775], [1.5304563E12, 2067107.076923077], [1.53045528E12, 1950358.384615385], [1.53045498E12, 1930991.8421052631], [1.5304566E12, 2084697.0], [1.53045606E12, 2038739.25], [1.53045504E12, 1933025.1999999997], [1.53045636E12, 2078719.7333333336], [1.53045474E12, 1951875.1333333333], [1.53045546E12, 1964823.6923076925], [1.53045516E12, 1934558.846153846], [1.53045576E12, 2010943.4285714289], [1.53045486E12, 1945238.75], [1.53045492E12, 1920438.4], [1.53045552E12, 1978474.3571428573], [1.53045462E12, 1968844.4615384615], [1.53045654E12, 2097182.2857142854], [1.53045522E12, 1930588.307692308], [1.53045594E12, 2025329.3333333335], [1.53045624E12, 2062731.6153846153], [1.53045534E12, 1946904.9285714284], [1.53045432E12, 1666630.0], [1.53045564E12, 1994508.0714285714], [1.5304557E12, 1997105.9999999998], [1.530456E12, 2038517.0666666667], [1.5304551E12, 1918392.2499999998], [1.53045408E12, 1455668.0], [1.5304554E12, 1965663.75], [1.53045642E12, 2080986.5384615385], [1.53045582E12, 2012073.9230769232], [1.5304548E12, 1913384.6428571427], [1.53045612E12, 2050705.2]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.53045396E12, 1362489.2352941178], [1.53045366E12, 1074344.866666667], [1.53045456E12, 1943768.0], [1.53045426E12, 1662868.6000000003], [1.53045264E12, 129741.82758620688], [1.53045276E12, 248320.19230769225], [1.53045438E12, 1779378.2352941178], [1.53045336E12, 795866.0714285714], [1.53045306E12, 540600.5555555555], [1.53045444E12, 1857059.5714285714], [1.53045414E12, 1544603.133333333], [1.53045282E12, 292760.85714285716], [1.53045312E12, 574702.3888888889], [1.53045294E12, 402085.7142857143], [1.53045324E12, 675549.1250000001], [1.53045384E12, 1250319.8], [1.53045354E12, 944033.5], [1.5304527E12, 180955.0], [1.530453E12, 464267.96], [1.5304536E12, 1018776.8461538461], [1.5304533E12, 750807.625], [1.53045372E12, 1124819.8125], [1.53045342E12, 852908.3043478262], [1.53045432E12, 1745431.6923076923], [1.53045402E12, 1433847.0666666667], [1.53045348E12, 897206.8], [1.53045318E12, 640467.5833333334], [1.53045408E12, 1493046.785714286], [1.53045378E12, 1174464.7692307692], [1.5304542E12, 1596969.9285714286], [1.5304539E12, 1309439.5000000002], [1.53045288E12, 360083.86363636365], [1.5304545E12, 1897592.1333333333]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5304566E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 129456.24137931036, "minX": 1.53045264E12, "maxY": 2097182.2857142854, "series": [{"data": [[1.53045618E12, 2050591.9230769232], [1.53045648E12, 2091365.6428571427], [1.53045558E12, 1979672.923076923], [1.53045456E12, 1924269.1875], [1.53045588E12, 2024972.3333333337], [1.53045468E12, 1916898.2777777775], [1.5304563E12, 2067107.076923077], [1.53045528E12, 1950358.384615385], [1.53045498E12, 1930991.8421052631], [1.5304566E12, 2084697.0], [1.53045606E12, 2038739.25], [1.53045504E12, 1933025.1999999997], [1.53045636E12, 2078719.7333333336], [1.53045474E12, 1951875.1333333333], [1.53045546E12, 1964823.6923076925], [1.53045516E12, 1934558.846153846], [1.53045576E12, 2010943.4285714289], [1.53045486E12, 1945238.75], [1.53045492E12, 1920438.4], [1.53045552E12, 1978474.3571428573], [1.53045462E12, 1968844.4615384615], [1.53045654E12, 2097182.2857142854], [1.53045522E12, 1930588.307692308], [1.53045594E12, 2025329.3333333335], [1.53045624E12, 2062731.6153846153], [1.53045534E12, 1946904.9285714284], [1.53045432E12, 1666630.0], [1.53045564E12, 1994508.0714285714], [1.5304557E12, 1997105.9999999998], [1.530456E12, 2038517.0666666667], [1.5304551E12, 1918392.2499999998], [1.53045408E12, 1455668.0], [1.5304554E12, 1965663.75], [1.53045642E12, 2080986.5384615385], [1.53045582E12, 2012073.9230769232], [1.5304548E12, 1913384.6428571427], [1.53045612E12, 2050705.2]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.53045396E12, 1362483.4705882352], [1.53045366E12, 1074337.0000000002], [1.53045456E12, 1943765.0], [1.53045426E12, 1662865.55], [1.53045264E12, 129456.24137931036], [1.53045276E12, 248217.1923076923], [1.53045438E12, 1779375.1764705882], [1.53045336E12, 795853.0714285715], [1.53045306E12, 540595.7777777778], [1.53045444E12, 1857055.7857142857], [1.53045414E12, 1544596.6666666667], [1.53045282E12, 292755.14285714284], [1.53045312E12, 574689.0555555554], [1.53045294E12, 402083.28571428574], [1.53045324E12, 675533.625], [1.53045384E12, 1250315.4], [1.53045354E12, 944025.611111111], [1.5304527E12, 180925.0], [1.530453E12, 464241.95999999996], [1.5304536E12, 1018768.4615384615], [1.5304533E12, 750801.4375], [1.53045372E12, 1124815.5624999998], [1.53045342E12, 852896.4347826086], [1.53045432E12, 1745427.3076923077], [1.53045402E12, 1433840.466666667], [1.53045348E12, 897199.2], [1.53045318E12, 640459.75], [1.53045408E12, 1493041.4285714286], [1.53045378E12, 1174455.8461538462], [1.5304542E12, 1596968.3571428573], [1.5304539E12, 1309433.75], [1.53045288E12, 359906.0], [1.5304545E12, 1897589.1333333335]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5304566E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53045264E12, "maxY": 217.5, "series": [{"data": [[1.53045618E12, 0.5384615384615384], [1.53045648E12, 0.6428571428571428], [1.53045558E12, 0.9230769230769231], [1.53045456E12, 1.0625000000000002], [1.53045588E12, 0.7333333333333334], [1.53045468E12, 0.7222222222222223], [1.5304563E12, 0.7692307692307693], [1.53045528E12, 0.6923076923076923], [1.53045498E12, 1.2631578947368427], [1.5304566E12, 0.6111111111111112], [1.53045606E12, 0.75], [1.53045504E12, 0.7999999999999999], [1.53045636E12, 2.333333333333333], [1.53045474E12, 0.9333333333333336], [1.53045546E12, 0.7692307692307692], [1.53045516E12, 0.846153846153846], [1.53045576E12, 0.7142857142857142], [1.53045486E12, 0.875], [1.53045492E12, 1.1333333333333335], [1.53045552E12, 0.7142857142857143], [1.53045462E12, 1.0769230769230769], [1.53045654E12, 0.6428571428571429], [1.53045522E12, 0.8461538461538461], [1.53045594E12, 0.75], [1.53045624E12, 0.3846153846153846], [1.53045534E12, 0.857142857142857], [1.53045432E12, 0.0], [1.53045564E12, 0.8571428571428571], [1.5304557E12, 0.6923076923076923], [1.530456E12, 0.8666666666666666], [1.5304551E12, 0.8125], [1.53045408E12, 7.0], [1.5304554E12, 1.3333333333333335], [1.53045642E12, 0.7692307692307692], [1.53045582E12, 0.6153846153846153], [1.5304548E12, 0.7142857142857143], [1.53045612E12, 0.6000000000000001]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.53045396E12, 1.0588235294117652], [1.53045366E12, 1.2000000000000002], [1.53045456E12, 1.3333333333333333], [1.53045426E12, 1.5999999999999999], [1.53045264E12, 210.27586206896555], [1.53045276E12, 154.3076923076923], [1.53045438E12, 1.5294117647058822], [1.53045336E12, 1.7857142857142856], [1.53045306E12, 2.7777777777777777], [1.53045444E12, 1.2857142857142856], [1.53045414E12, 1.5333333333333332], [1.53045282E12, 1.4285714285714286], [1.53045312E12, 2.1666666666666665], [1.53045294E12, 0.7142857142857143], [1.53045324E12, 2.0], [1.53045384E12, 1.3000000000000003], [1.53045354E12, 1.1111111111111114], [1.5304527E12, 217.5], [1.530453E12, 2.0399999999999996], [1.5304536E12, 1.3846153846153846], [1.5304533E12, 1.6249999999999998], [1.53045372E12, 1.8125], [1.53045342E12, 3.304347826086957], [1.53045432E12, 1.8461538461538463], [1.53045402E12, 0.9333333333333333], [1.53045348E12, 1.6], [1.53045318E12, 2.4166666666666665], [1.53045408E12, 1.3571428571428572], [1.53045378E12, 1.3846153846153846], [1.5304542E12, 1.7142857142857144], [1.5304539E12, 2.166666666666667], [1.53045288E12, 1.1818181818181823], [1.5304545E12, 2.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5304566E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 108013.0, "minX": 1.53045264E12, "maxY": 2110230.0, "series": [{"data": [[1.53045366E12, 1114351.0], [1.53045648E12, 2100209.0], [1.53045426E12, 1692667.0], [1.53045588E12, 2037511.0], [1.53045264E12, 143284.0], [1.53045468E12, 1936519.0], [1.5304563E12, 2075517.0], [1.53045306E12, 550634.0], [1.53045528E12, 1970569.0], [1.53045444E12, 1890797.0], [1.53045606E12, 2049595.0], [1.53045282E12, 305516.0], [1.53045504E12, 1949754.0], [1.53045546E12, 1988173.0], [1.53045324E12, 705845.0], [1.53045486E12, 1965845.0], [1.53045384E12, 1302862.0], [1.5304527E12, 200411.0], [1.53045492E12, 1940897.0], [1.53045552E12, 1989822.0], [1.53045654E12, 2104812.0], [1.5304533E12, 776460.0], [1.53045372E12, 1158897.0], [1.53045594E12, 2037171.0], [1.53045534E12, 1970280.0], [1.53045432E12, 1775766.0], [1.53045348E12, 944329.0], [1.5304557E12, 2016584.0], [1.5304551E12, 1952780.0], [1.53045408E12, 1536047.0], [1.5304539E12, 1353000.0], [1.53045612E12, 2065097.0], [1.53045288E12, 377727.0], [1.5304545E12, 1946819.0], [1.53045396E12, 1406835.0], [1.53045618E12, 2060570.0], [1.53045558E12, 2000762.0], [1.53045456E12, 1980239.0], [1.53045276E12, 258086.0], [1.53045438E12, 1833746.0], [1.53045336E12, 827754.0], [1.53045498E12, 1955542.0], [1.5304566E12, 2110230.0], [1.53045414E12, 1580620.0], [1.53045636E12, 2090944.0], [1.53045312E12, 593857.0], [1.53045474E12, 1982471.0], [1.53045294E12, 437228.0], [1.53045516E12, 1954694.0], [1.53045576E12, 2023796.0], [1.53045354E12, 976571.0], [1.530453E12, 490785.0], [1.53045462E12, 1995195.0], [1.5304536E12, 1054367.0], [1.53045522E12, 1955017.0], [1.53045342E12, 883263.0], [1.53045624E12, 2074569.0], [1.53045402E12, 1469483.0], [1.53045564E12, 2007934.0], [1.53045318E12, 655097.0], [1.530456E12, 2052336.0], [1.53045378E12, 1195713.0], [1.5304554E12, 1977857.0], [1.5304542E12, 1634736.0], [1.53045642E12, 2097679.0], [1.53045582E12, 2025252.0], [1.5304548E12, 1927820.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53045366E12, 1044586.0], [1.53045648E12, 2079667.0], [1.53045426E12, 1619483.0], [1.53045588E12, 2011510.0], [1.53045264E12, 108013.0], [1.53045468E12, 1904646.0], [1.5304563E12, 2060851.0], [1.53045306E12, 516662.0], [1.53045528E12, 1931799.0], [1.53045444E12, 1827766.0], [1.53045606E12, 2033968.0], [1.53045282E12, 264626.0], [1.53045504E12, 1911679.0], [1.53045546E12, 1948477.0], [1.53045324E12, 661096.0], [1.53045486E12, 1906846.0], [1.53045384E12, 1202382.0], [1.5304527E12, 161499.0], [1.53045492E12, 1910790.0], [1.53045552E12, 1964035.0], [1.53045654E12, 2087725.0], [1.5304533E12, 721548.0], [1.53045372E12, 1080402.0], [1.53045594E12, 2017775.0], [1.53045534E12, 1933192.0], [1.53045432E12, 1666630.0], [1.53045348E12, 850903.0], [1.5304557E12, 1984859.0], [1.5304551E12, 1904534.0], [1.53045408E12, 1443954.0], [1.5304539E12, 1253279.0], [1.53045612E12, 2034745.0], [1.53045288E12, 342413.0], [1.5304545E12, 1864770.0], [1.53045396E12, 1309066.0], [1.53045618E12, 2044015.0], [1.53045558E12, 1969100.0], [1.53045456E12, 1909070.0], [1.53045276E12, 217821.0], [1.53045438E12, 1742832.0], [1.53045336E12, 782949.0], [1.53045498E12, 1903583.0], [1.5304566E12, 2048394.0], [1.53045414E12, 1502688.0], [1.53045636E12, 2065791.0], [1.53045312E12, 554444.0], [1.53045474E12, 1930803.0], [1.53045294E12, 385617.0], [1.53045516E12, 1918753.0], [1.53045576E12, 1998289.0], [1.53045354E12, 903315.0], [1.530453E12, 448496.0], [1.53045462E12, 1935253.0], [1.5304536E12, 971637.0], [1.53045522E12, 1918917.0], [1.53045342E12, 831137.0], [1.53045624E12, 2046704.0], [1.53045402E12, 1369807.0], [1.53045564E12, 1979038.0], [1.53045318E12, 615571.0], [1.530456E12, 2022854.0], [1.53045378E12, 1128995.0], [1.5304554E12, 1952908.0], [1.5304542E12, 1563199.0], [1.53045642E12, 2069518.0], [1.53045582E12, 2001181.0], [1.5304548E12, 1897554.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53045366E12, 975952.1000000001], [1.53045648E12, 2045565.5], [1.53045426E12, 1538697.0], [1.53045588E12, 1981963.6], [1.53045264E12, 132335.0], [1.53045468E12, 1904894.0], [1.5304563E12, 2025295.5], [1.53045306E12, 477294.2], [1.53045528E12, 1942586.4], [1.53045444E12, 1684369.5], [1.53045606E12, 2001223.0], [1.53045282E12, 277917.0], [1.53045504E12, 1936658.2], [1.53045546E12, 1948551.8], [1.53045324E12, 652163.0], [1.53045486E12, 1924587.0], [1.53045384E12, 1150155.0], [1.5304527E12, 141195.6], [1.53045492E12, 1927392.0], [1.53045552E12, 1952586.4], [1.53045654E12, 2049456.6], [1.5304533E12, 679220.0], [1.53045372E12, 1053875.6], [1.53045594E12, 1988506.8], [1.53045534E12, 1943375.2], [1.53045432E12, 1580047.2], [1.53045348E12, 846921.0], [1.5304557E12, 1966366.6], [1.5304551E12, 1936751.0], [1.53045408E12, 1365708.4000000004], [1.5304539E12, 1191979.6], [1.53045612E12, 2008078.4000000001], [1.53045288E12, 363024.0], [1.5304545E12, 1754604.0], [1.53045396E12, 1264291.8000000003], [1.53045618E12, 2014692.5], [1.53045558E12, 1956300.0], [1.53045456E12, 1793043.5000000005], [1.53045276E12, 257662.0], [1.53045438E12, 1643708.7], [1.53045336E12, 756836.0], [1.53045498E12, 1934249.3], [1.5304566E12, 2057854.5], [1.53045414E12, 1416455.8], [1.53045636E12, 2034589.6], [1.53045312E12, 573482.4], [1.53045474E12, 1913061.0], [1.53045294E12, 363919.2], [1.53045516E12, 1938939.2], [1.53045576E12, 1970395.6], [1.53045354E12, 883411.5], [1.530453E12, 462753.5], [1.53045462E12, 1861370.4000000001], [1.5304536E12, 938445.0], [1.53045522E12, 1938697.4], [1.53045342E12, 831887.6], [1.53045624E12, 2021471.4], [1.53045402E12, 1310538.8], [1.53045564E12, 1961018.7], [1.53045318E12, 580996.0], [1.530456E12, 1993244.5], [1.53045378E12, 1092285.6], [1.5304554E12, 1945494.0], [1.5304542E12, 1468067.0], [1.53045642E12, 2037415.5], [1.53045582E12, 1975485.5], [1.5304548E12, 1915329.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53045366E12, 1095466.2], [1.53045648E12, 2091651.73], [1.53045426E12, 1684506.4000000001], [1.53045588E12, 2025750.3], [1.53045264E12, 143284.0], [1.53045468E12, 1979326.0], [1.5304563E12, 2068777.6], [1.53045306E12, 550270.0], [1.53045528E12, 1978431.26], [1.53045444E12, 1871541.9], [1.53045606E12, 2041710.9], [1.53045282E12, 305516.0], [1.53045504E12, 1979435.5599999998], [1.53045546E12, 1981444.9], [1.53045324E12, 692157.2199999999], [1.53045486E12, 1980336.25], [1.53045384E12, 1285699.08], [1.5304527E12, 200411.0], [1.53045492E12, 1980056.4], [1.53045552E12, 1987019.72], [1.53045654E12, 2098108.08], [1.5304533E12, 773843.7], [1.53045372E12, 1150254.88], [1.53045594E12, 2028938.5999999999], [1.53045534E12, 1978249.46], [1.53045432E12, 1762913.0399999998], [1.53045348E12, 932216.6199999999], [1.5304557E12, 2002845.6400000001], [1.5304551E12, 1979143.4], [1.53045408E12, 1503563.13], [1.5304539E12, 1325105.84], [1.53045612E12, 2050036.04], [1.53045288E12, 377727.0], [1.5304545E12, 1913131.0], [1.53045396E12, 1397326.0], [1.53045618E12, 2053984.69], [1.53045558E12, 1988817.75], [1.53045456E12, 1943066.08], [1.53045276E12, 258086.0], [1.53045438E12, 1789275.73], [1.53045336E12, 827082.5200000001], [1.53045498E12, 1979709.46], [1.5304566E12, 2098690.32], [1.53045414E12, 1565609.92], [1.53045636E12, 2077040.08], [1.53045312E12, 591108.96], [1.53045474E12, 1980919.75], [1.53045294E12, 437228.0], [1.53045516E12, 1978906.02], [1.53045576E12, 2013408.44], [1.53045354E12, 971474.7499999999], [1.530453E12, 489821.51], [1.53045462E12, 1979654.68], [1.5304536E12, 1049056.4], [1.53045522E12, 1978668.64], [1.53045342E12, 879439.25], [1.53045624E12, 2062573.58], [1.53045402E12, 1458538.56], [1.53045564E12, 1998945.25], [1.53045318E12, 650842.7], [1.530456E12, 2037535.18], [1.53045378E12, 1190907.28], [1.5304554E12, 1978274.0], [1.5304542E12, 1610988.2], [1.53045642E12, 2083258.35], [1.53045582E12, 2018793.68], [1.5304548E12, 1980647.4500000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53045366E12, 1053232.45], [1.53045648E12, 2068738.0], [1.53045426E12, 1623258.0], [1.53045588E12, 2004186.5], [1.53045264E12, 138063.0], [1.53045468E12, 1927344.5], [1.5304563E12, 2048277.0], [1.53045306E12, 541245.8], [1.53045528E12, 1952596.65], [1.53045444E12, 1774647.75], [1.53045606E12, 2024237.5], [1.53045282E12, 296261.5], [1.53045504E12, 1949387.0], [1.53045546E12, 1961018.7], [1.53045324E12, 674370.5], [1.53045486E12, 1945854.5], [1.53045384E12, 1218362.9999999998], [1.5304527E12, 177063.79999999993], [1.53045492E12, 1945530.0], [1.53045552E12, 1966796.8], [1.53045654E12, 2074886.55], [1.5304533E12, 744893.0], [1.53045372E12, 1097852.2000000002], [1.53045594E12, 2010376.8], [1.53045534E12, 1953960.1], [1.53045432E12, 1672865.4], [1.53045348E12, 874743.9], [1.5304557E12, 1982511.4], [1.5304551E12, 1949446.0], [1.53045408E12, 1452225.5499999998], [1.5304539E12, 1268344.8], [1.53045612E12, 2031770.9999999998], [1.53045288E12, 363629.85], [1.5304545E12, 1841681.0], [1.53045396E12, 1317017.6], [1.53045618E12, 2036894.95], [1.53045558E12, 1971275.5], [1.53045456E12, 1898223.4499999997], [1.53045276E12, 257932.9], [1.53045438E12, 1750784.95], [1.53045336E12, 786902.7999999999], [1.53045498E12, 1948569.5999999999], [1.5304566E12, 2081834.65], [1.53045414E12, 1496628.3], [1.53045636E12, 2053614.0], [1.53045312E12, 575434.9], [1.53045474E12, 1941035.5], [1.53045294E12, 389517.3], [1.53045516E12, 1949553.8], [1.53045576E12, 1989432.7], [1.53045354E12, 939553.5], [1.530453E12, 469375.25], [1.53045462E12, 1916839.8], [1.5304536E12, 975745.8], [1.53045522E12, 1949661.6], [1.53045342E12, 848919.7], [1.53045624E12, 2041965.7], [1.53045402E12, 1387258.4], [1.53045564E12, 1976629.65], [1.53045318E12, 641393.2], [1.530456E12, 2019304.8], [1.53045378E12, 1142554.5999999999], [1.5304554E12, 1957426.0], [1.5304542E12, 1547773.0], [1.53045642E12, 2062807.5], [1.53045582E12, 1995639.45], [1.5304548E12, 1939804.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5304566E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1906400.0, "minX": 0.0, "maxY": 1906400.0, "series": [{"data": [[0.0, 1906400.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.9E-324, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1906400.0, "minX": 0.0, "maxY": 1906400.0, "series": [{"data": [[0.0, 1906400.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.9E-324, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53045252E12, "maxY": 4.166666666666667, "series": [{"data": [[1.53045396E12, 0.2833333333333333], [1.53045366E12, 0.25], [1.53045456E12, 0.05], [1.53045426E12, 0.31666666666666665], [1.53045264E12, 1.3166666666666667], [1.53045276E12, 0.43333333333333335], [1.53045438E12, 0.2833333333333333], [1.53045336E12, 0.23333333333333334], [1.53045306E12, 0.15], [1.53045444E12, 0.23333333333333334], [1.53045414E12, 0.25], [1.53045252E12, 3.3333333333333335], [1.53045282E12, 0.11666666666666667], [1.53045312E12, 0.3], [1.53045294E12, 0.11666666666666667], [1.53045324E12, 0.26666666666666666], [1.53045384E12, 0.3333333333333333], [1.53045354E12, 0.3], [1.5304527E12, 0.03333333333333333], [1.530453E12, 0.4166666666666667], [1.5304536E12, 0.21666666666666667], [1.5304533E12, 0.26666666666666666], [1.53045372E12, 0.26666666666666666], [1.53045342E12, 0.38333333333333336], [1.53045432E12, 0.23333333333333334], [1.53045402E12, 0.25], [1.53045348E12, 0.16666666666666666], [1.53045318E12, 0.2], [1.53045408E12, 0.23333333333333334], [1.53045378E12, 0.21666666666666667], [1.5304542E12, 0.23333333333333334], [1.5304539E12, 0.2], [1.53045258E12, 4.166666666666667], [1.53045288E12, 0.36666666666666664], [1.5304545E12, 0.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53045456E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53045264E12, "maxY": 0.48333333333333334, "series": [{"data": [[1.53045366E12, 0.25], [1.53045648E12, 0.23333333333333334], [1.53045426E12, 0.3333333333333333], [1.53045588E12, 0.25], [1.53045264E12, 0.48333333333333334], [1.53045468E12, 0.3], [1.5304563E12, 0.21666666666666667], [1.53045306E12, 0.15], [1.53045528E12, 0.21666666666666667], [1.53045444E12, 0.23333333333333334], [1.53045606E12, 0.2], [1.53045282E12, 0.11666666666666667], [1.53045504E12, 0.25], [1.53045546E12, 0.21666666666666667], [1.53045324E12, 0.26666666666666666], [1.53045486E12, 0.26666666666666666], [1.53045384E12, 0.3333333333333333], [1.5304527E12, 0.03333333333333333], [1.53045492E12, 0.25], [1.53045552E12, 0.23333333333333334], [1.53045654E12, 0.23333333333333334], [1.5304533E12, 0.26666666666666666], [1.53045372E12, 0.26666666666666666], [1.53045594E12, 0.2], [1.53045534E12, 0.23333333333333334], [1.53045432E12, 0.23333333333333334], [1.53045348E12, 0.16666666666666666], [1.5304557E12, 0.21666666666666667], [1.5304551E12, 0.26666666666666666], [1.53045408E12, 0.25], [1.5304539E12, 0.2], [1.53045612E12, 0.25], [1.53045288E12, 0.36666666666666664], [1.5304545E12, 0.25], [1.53045396E12, 0.2833333333333333], [1.53045618E12, 0.21666666666666667], [1.53045558E12, 0.21666666666666667], [1.53045456E12, 0.31666666666666665], [1.53045276E12, 0.43333333333333335], [1.53045438E12, 0.2833333333333333], [1.53045336E12, 0.23333333333333334], [1.53045498E12, 0.31666666666666665], [1.5304566E12, 0.3], [1.53045414E12, 0.25], [1.53045636E12, 0.25], [1.53045312E12, 0.3], [1.53045474E12, 0.25], [1.53045294E12, 0.11666666666666667], [1.53045516E12, 0.21666666666666667], [1.53045576E12, 0.23333333333333334], [1.53045354E12, 0.3], [1.530453E12, 0.4166666666666667], [1.53045462E12, 0.21666666666666667], [1.5304536E12, 0.21666666666666667], [1.53045522E12, 0.21666666666666667], [1.53045342E12, 0.38333333333333336], [1.53045624E12, 0.21666666666666667], [1.53045402E12, 0.25], [1.53045564E12, 0.23333333333333334], [1.53045318E12, 0.2], [1.530456E12, 0.25], [1.53045378E12, 0.21666666666666667], [1.5304554E12, 0.2], [1.5304542E12, 0.23333333333333334], [1.53045642E12, 0.21666666666666667], [1.53045582E12, 0.21666666666666667], [1.5304548E12, 0.23333333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5304566E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53045264E12, "maxY": 0.48333333333333334, "series": [{"data": [[1.53045396E12, 0.2833333333333333], [1.53045366E12, 0.25], [1.53045456E12, 0.05], [1.53045426E12, 0.3333333333333333], [1.53045264E12, 0.48333333333333334], [1.53045276E12, 0.43333333333333335], [1.53045438E12, 0.2833333333333333], [1.53045336E12, 0.23333333333333334], [1.53045306E12, 0.15], [1.53045444E12, 0.23333333333333334], [1.53045414E12, 0.25], [1.53045282E12, 0.11666666666666667], [1.53045312E12, 0.3], [1.53045294E12, 0.11666666666666667], [1.53045324E12, 0.26666666666666666], [1.53045384E12, 0.3333333333333333], [1.53045354E12, 0.3], [1.5304527E12, 0.03333333333333333], [1.530453E12, 0.4166666666666667], [1.5304536E12, 0.21666666666666667], [1.5304533E12, 0.26666666666666666], [1.53045372E12, 0.26666666666666666], [1.53045342E12, 0.38333333333333336], [1.53045432E12, 0.21666666666666667], [1.53045402E12, 0.25], [1.53045348E12, 0.16666666666666666], [1.53045318E12, 0.2], [1.53045408E12, 0.23333333333333334], [1.53045378E12, 0.21666666666666667], [1.5304542E12, 0.23333333333333334], [1.5304539E12, 0.2], [1.53045288E12, 0.36666666666666664], [1.5304545E12, 0.25]], "isOverall": false, "label": "obtenerEncuesta-success", "isController": false}, {"data": [[1.53045618E12, 0.21666666666666667], [1.53045648E12, 0.23333333333333334], [1.53045558E12, 0.21666666666666667], [1.53045456E12, 0.26666666666666666], [1.53045588E12, 0.25], [1.53045468E12, 0.3], [1.5304563E12, 0.21666666666666667], [1.53045528E12, 0.21666666666666667], [1.53045498E12, 0.31666666666666665], [1.5304566E12, 0.3], [1.53045606E12, 0.2], [1.53045504E12, 0.25], [1.53045636E12, 0.25], [1.53045474E12, 0.25], [1.53045546E12, 0.21666666666666667], [1.53045516E12, 0.21666666666666667], [1.53045576E12, 0.23333333333333334], [1.53045486E12, 0.26666666666666666], [1.53045492E12, 0.25], [1.53045552E12, 0.23333333333333334], [1.53045462E12, 0.21666666666666667], [1.53045654E12, 0.23333333333333334], [1.53045522E12, 0.21666666666666667], [1.53045594E12, 0.2], [1.53045624E12, 0.21666666666666667], [1.53045534E12, 0.23333333333333334], [1.53045432E12, 0.016666666666666666], [1.53045564E12, 0.23333333333333334], [1.5304557E12, 0.21666666666666667], [1.530456E12, 0.25], [1.5304551E12, 0.26666666666666666], [1.53045408E12, 0.016666666666666666], [1.5304554E12, 0.2], [1.53045642E12, 0.21666666666666667], [1.53045582E12, 0.21666666666666667], [1.5304548E12, 0.23333333333333334], [1.53045612E12, 0.25]], "isOverall": false, "label": "completarEncuestaPreInscripcion-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5304566E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
