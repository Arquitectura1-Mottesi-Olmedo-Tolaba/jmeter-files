/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var percentileThreshold = 0;
var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
function prepareSeries(data){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        series.color = index;
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 73571.0, "minX": 0.0, "maxY": 1861494.0, "series": [{"data": [[0.0, 1281007.0], [0.1, 1281007.0], [0.2, 1281007.0], [0.3, 1281007.0], [0.4, 1281007.0], [0.5, 1281007.0], [0.6, 1281007.0], [0.7, 1281007.0], [0.8, 1281007.0], [0.9, 1281007.0], [1.0, 1281007.0], [1.1, 1281007.0], [1.2, 1281007.0], [1.3, 1281007.0], [1.4, 1281007.0], [1.5, 1281007.0], [1.6, 1281007.0], [1.7, 1281007.0], [1.8, 1281007.0], [1.9, 1281007.0], [2.0, 1281007.0], [2.1, 1281007.0], [2.2, 1281007.0], [2.3, 1281007.0], [2.4, 1281007.0], [2.5, 1354636.0], [2.6, 1354636.0], [2.7, 1354636.0], [2.8, 1354636.0], [2.9, 1354636.0], [3.0, 1354636.0], [3.1, 1354636.0], [3.2, 1354636.0], [3.3, 1354636.0], [3.4, 1354636.0], [3.5, 1354636.0], [3.6, 1354636.0], [3.7, 1354636.0], [3.8, 1354636.0], [3.9, 1354636.0], [4.0, 1354636.0], [4.1, 1354636.0], [4.2, 1354636.0], [4.3, 1354636.0], [4.4, 1354636.0], [4.5, 1354636.0], [4.6, 1354636.0], [4.7, 1354636.0], [4.8, 1354636.0], [4.9, 1380275.0], [5.0, 1380275.0], [5.1, 1380275.0], [5.2, 1380275.0], [5.3, 1380275.0], [5.4, 1380275.0], [5.5, 1380275.0], [5.6, 1380275.0], [5.7, 1380275.0], [5.8, 1380275.0], [5.9, 1380275.0], [6.0, 1380275.0], [6.1, 1380275.0], [6.2, 1380275.0], [6.3, 1380275.0], [6.4, 1380275.0], [6.5, 1380275.0], [6.6, 1380275.0], [6.7, 1380275.0], [6.8, 1380275.0], [6.9, 1380275.0], [7.0, 1380275.0], [7.1, 1380275.0], [7.2, 1380275.0], [7.3, 1380275.0], [7.4, 1541809.0], [7.5, 1541809.0], [7.6, 1541809.0], [7.7, 1541809.0], [7.8, 1541809.0], [7.9, 1541809.0], [8.0, 1541809.0], [8.1, 1541809.0], [8.2, 1541809.0], [8.3, 1541809.0], [8.4, 1541809.0], [8.5, 1541809.0], [8.6, 1541809.0], [8.7, 1541809.0], [8.8, 1541809.0], [8.9, 1541809.0], [9.0, 1541809.0], [9.1, 1541809.0], [9.2, 1541809.0], [9.3, 1541809.0], [9.4, 1541809.0], [9.5, 1541809.0], [9.6, 1541809.0], [9.7, 1541809.0], [9.8, 1586181.0], [9.9, 1586181.0], [10.0, 1586181.0], [10.1, 1586181.0], [10.2, 1586181.0], [10.3, 1586181.0], [10.4, 1586181.0], [10.5, 1586181.0], [10.6, 1586181.0], [10.7, 1586181.0], [10.8, 1586181.0], [10.9, 1586181.0], [11.0, 1586181.0], [11.1, 1586181.0], [11.2, 1586181.0], [11.3, 1586181.0], [11.4, 1586181.0], [11.5, 1586181.0], [11.6, 1586181.0], [11.7, 1586181.0], [11.8, 1586181.0], [11.9, 1586181.0], [12.0, 1586181.0], [12.1, 1586181.0], [12.2, 1605412.0], [12.3, 1605412.0], [12.4, 1605412.0], [12.5, 1605412.0], [12.6, 1605412.0], [12.7, 1605412.0], [12.8, 1605412.0], [12.9, 1605412.0], [13.0, 1605412.0], [13.1, 1605412.0], [13.2, 1605412.0], [13.3, 1605412.0], [13.4, 1605412.0], [13.5, 1605412.0], [13.6, 1605412.0], [13.7, 1605412.0], [13.8, 1605412.0], [13.9, 1605412.0], [14.0, 1605412.0], [14.1, 1605412.0], [14.2, 1605412.0], [14.3, 1605412.0], [14.4, 1605412.0], [14.5, 1605412.0], [14.6, 1605412.0], [14.7, 1616764.0], [14.8, 1616764.0], [14.9, 1616764.0], [15.0, 1616764.0], [15.1, 1616764.0], [15.2, 1616764.0], [15.3, 1616764.0], [15.4, 1616764.0], [15.5, 1616764.0], [15.6, 1616764.0], [15.7, 1616764.0], [15.8, 1616764.0], [15.9, 1616764.0], [16.0, 1616764.0], [16.1, 1616764.0], [16.2, 1616764.0], [16.3, 1616764.0], [16.4, 1616764.0], [16.5, 1616764.0], [16.6, 1616764.0], [16.7, 1616764.0], [16.8, 1616764.0], [16.9, 1616764.0], [17.0, 1616764.0], [17.1, 1617682.0], [17.2, 1617682.0], [17.3, 1617682.0], [17.4, 1617682.0], [17.5, 1617682.0], [17.6, 1617682.0], [17.7, 1617682.0], [17.8, 1617682.0], [17.9, 1617682.0], [18.0, 1617682.0], [18.1, 1617682.0], [18.2, 1617682.0], [18.3, 1617682.0], [18.4, 1617682.0], [18.5, 1617682.0], [18.6, 1617682.0], [18.7, 1617682.0], [18.8, 1617682.0], [18.9, 1617682.0], [19.0, 1617682.0], [19.1, 1617682.0], [19.2, 1617682.0], [19.3, 1617682.0], [19.4, 1617682.0], [19.5, 1617682.0], [19.6, 1629336.0], [19.7, 1629336.0], [19.8, 1629336.0], [19.9, 1629336.0], [20.0, 1629336.0], [20.1, 1629336.0], [20.2, 1629336.0], [20.3, 1629336.0], [20.4, 1629336.0], [20.5, 1629336.0], [20.6, 1629336.0], [20.7, 1629336.0], [20.8, 1629336.0], [20.9, 1629336.0], [21.0, 1629336.0], [21.1, 1629336.0], [21.2, 1629336.0], [21.3, 1629336.0], [21.4, 1629336.0], [21.5, 1629336.0], [21.6, 1629336.0], [21.7, 1629336.0], [21.8, 1629336.0], [21.9, 1629336.0], [22.0, 1723352.0], [22.1, 1723352.0], [22.2, 1723352.0], [22.3, 1723352.0], [22.4, 1723352.0], [22.5, 1723352.0], [22.6, 1723352.0], [22.7, 1723352.0], [22.8, 1723352.0], [22.9, 1723352.0], [23.0, 1723352.0], [23.1, 1723352.0], [23.2, 1723352.0], [23.3, 1723352.0], [23.4, 1723352.0], [23.5, 1723352.0], [23.6, 1723352.0], [23.7, 1723352.0], [23.8, 1723352.0], [23.9, 1723352.0], [24.0, 1723352.0], [24.1, 1723352.0], [24.2, 1723352.0], [24.3, 1723352.0], [24.4, 1737598.0], [24.5, 1737598.0], [24.6, 1737598.0], [24.7, 1737598.0], [24.8, 1737598.0], [24.9, 1737598.0], [25.0, 1737598.0], [25.1, 1737598.0], [25.2, 1737598.0], [25.3, 1737598.0], [25.4, 1737598.0], [25.5, 1737598.0], [25.6, 1737598.0], [25.7, 1737598.0], [25.8, 1737598.0], [25.9, 1737598.0], [26.0, 1737598.0], [26.1, 1737598.0], [26.2, 1737598.0], [26.3, 1737598.0], [26.4, 1737598.0], [26.5, 1737598.0], [26.6, 1737598.0], [26.7, 1737598.0], [26.8, 1737598.0], [26.9, 1737819.0], [27.0, 1737819.0], [27.1, 1737819.0], [27.2, 1737819.0], [27.3, 1737819.0], [27.4, 1737819.0], [27.5, 1737819.0], [27.6, 1737819.0], [27.7, 1737819.0], [27.8, 1737819.0], [27.9, 1737819.0], [28.0, 1737819.0], [28.1, 1737819.0], [28.2, 1737819.0], [28.3, 1737819.0], [28.4, 1737819.0], [28.5, 1737819.0], [28.6, 1737819.0], [28.7, 1737819.0], [28.8, 1737819.0], [28.9, 1737819.0], [29.0, 1737819.0], [29.1, 1737819.0], [29.2, 1737819.0], [29.3, 1741274.0], [29.4, 1741274.0], [29.5, 1741274.0], [29.6, 1741274.0], [29.7, 1741274.0], [29.8, 1741274.0], [29.9, 1741274.0], [30.0, 1741274.0], [30.1, 1741274.0], [30.2, 1741274.0], [30.3, 1741274.0], [30.4, 1741274.0], [30.5, 1741274.0], [30.6, 1741274.0], [30.7, 1741274.0], [30.8, 1741274.0], [30.9, 1741274.0], [31.0, 1741274.0], [31.1, 1741274.0], [31.2, 1741274.0], [31.3, 1741274.0], [31.4, 1741274.0], [31.5, 1741274.0], [31.6, 1741274.0], [31.7, 1741274.0], [31.8, 1782621.0], [31.9, 1782621.0], [32.0, 1782621.0], [32.1, 1782621.0], [32.2, 1782621.0], [32.3, 1782621.0], [32.4, 1782621.0], [32.5, 1782621.0], [32.6, 1782621.0], [32.7, 1782621.0], [32.8, 1782621.0], [32.9, 1782621.0], [33.0, 1782621.0], [33.1, 1782621.0], [33.2, 1782621.0], [33.3, 1782621.0], [33.4, 1782621.0], [33.5, 1782621.0], [33.6, 1782621.0], [33.7, 1782621.0], [33.8, 1782621.0], [33.9, 1782621.0], [34.0, 1782621.0], [34.1, 1782621.0], [34.2, 1788690.0], [34.3, 1788690.0], [34.4, 1788690.0], [34.5, 1788690.0], [34.6, 1788690.0], [34.7, 1788690.0], [34.8, 1788690.0], [34.9, 1788690.0], [35.0, 1788690.0], [35.1, 1788690.0], [35.2, 1788690.0], [35.3, 1788690.0], [35.4, 1788690.0], [35.5, 1788690.0], [35.6, 1788690.0], [35.7, 1788690.0], [35.8, 1788690.0], [35.9, 1788690.0], [36.0, 1788690.0], [36.1, 1788690.0], [36.2, 1788690.0], [36.3, 1788690.0], [36.4, 1788690.0], [36.5, 1788690.0], [36.6, 1791592.0], [36.7, 1791592.0], [36.8, 1791592.0], [36.9, 1791592.0], [37.0, 1791592.0], [37.1, 1791592.0], [37.2, 1791592.0], [37.3, 1791592.0], [37.4, 1791592.0], [37.5, 1791592.0], [37.6, 1791592.0], [37.7, 1791592.0], [37.8, 1791592.0], [37.9, 1791592.0], [38.0, 1791592.0], [38.1, 1791592.0], [38.2, 1791592.0], [38.3, 1791592.0], [38.4, 1791592.0], [38.5, 1791592.0], [38.6, 1791592.0], [38.7, 1791592.0], [38.8, 1791592.0], [38.9, 1791592.0], [39.0, 1791592.0], [39.1, 1798718.0], [39.2, 1798718.0], [39.3, 1798718.0], [39.4, 1798718.0], [39.5, 1798718.0], [39.6, 1798718.0], [39.7, 1798718.0], [39.8, 1798718.0], [39.9, 1798718.0], [40.0, 1798718.0], [40.1, 1798718.0], [40.2, 1798718.0], [40.3, 1798718.0], [40.4, 1798718.0], [40.5, 1798718.0], [40.6, 1798718.0], [40.7, 1798718.0], [40.8, 1798718.0], [40.9, 1798718.0], [41.0, 1798718.0], [41.1, 1798718.0], [41.2, 1798718.0], [41.3, 1798718.0], [41.4, 1798718.0], [41.5, 1807543.0], [41.6, 1807543.0], [41.7, 1807543.0], [41.8, 1807543.0], [41.9, 1807543.0], [42.0, 1807543.0], [42.1, 1807543.0], [42.2, 1807543.0], [42.3, 1807543.0], [42.4, 1807543.0], [42.5, 1807543.0], [42.6, 1807543.0], [42.7, 1807543.0], [42.8, 1807543.0], [42.9, 1807543.0], [43.0, 1807543.0], [43.1, 1807543.0], [43.2, 1807543.0], [43.3, 1807543.0], [43.4, 1807543.0], [43.5, 1807543.0], [43.6, 1807543.0], [43.7, 1807543.0], [43.8, 1807543.0], [43.9, 1807543.0], [44.0, 1808563.0], [44.1, 1808563.0], [44.2, 1808563.0], [44.3, 1808563.0], [44.4, 1808563.0], [44.5, 1808563.0], [44.6, 1808563.0], [44.7, 1808563.0], [44.8, 1808563.0], [44.9, 1808563.0], [45.0, 1808563.0], [45.1, 1808563.0], [45.2, 1808563.0], [45.3, 1808563.0], [45.4, 1808563.0], [45.5, 1808563.0], [45.6, 1808563.0], [45.7, 1808563.0], [45.8, 1808563.0], [45.9, 1808563.0], [46.0, 1808563.0], [46.1, 1808563.0], [46.2, 1808563.0], [46.3, 1808563.0], [46.4, 1810194.0], [46.5, 1810194.0], [46.6, 1810194.0], [46.7, 1810194.0], [46.8, 1810194.0], [46.9, 1810194.0], [47.0, 1810194.0], [47.1, 1810194.0], [47.2, 1810194.0], [47.3, 1810194.0], [47.4, 1810194.0], [47.5, 1810194.0], [47.6, 1810194.0], [47.7, 1810194.0], [47.8, 1810194.0], [47.9, 1810194.0], [48.0, 1810194.0], [48.1, 1810194.0], [48.2, 1810194.0], [48.3, 1810194.0], [48.4, 1810194.0], [48.5, 1810194.0], [48.6, 1810194.0], [48.7, 1810194.0], [48.8, 1815510.0], [48.9, 1815510.0], [49.0, 1815510.0], [49.1, 1815510.0], [49.2, 1815510.0], [49.3, 1815510.0], [49.4, 1815510.0], [49.5, 1815510.0], [49.6, 1815510.0], [49.7, 1815510.0], [49.8, 1815510.0], [49.9, 1815510.0], [50.0, 1815510.0], [50.1, 1815510.0], [50.2, 1815510.0], [50.3, 1815510.0], [50.4, 1815510.0], [50.5, 1815510.0], [50.6, 1815510.0], [50.7, 1815510.0], [50.8, 1815510.0], [50.9, 1815510.0], [51.0, 1815510.0], [51.1, 1815510.0], [51.2, 1815510.0], [51.3, 1817358.0], [51.4, 1817358.0], [51.5, 1817358.0], [51.6, 1817358.0], [51.7, 1817358.0], [51.8, 1817358.0], [51.9, 1817358.0], [52.0, 1817358.0], [52.1, 1817358.0], [52.2, 1817358.0], [52.3, 1817358.0], [52.4, 1817358.0], [52.5, 1817358.0], [52.6, 1817358.0], [52.7, 1817358.0], [52.8, 1817358.0], [52.9, 1817358.0], [53.0, 1817358.0], [53.1, 1817358.0], [53.2, 1817358.0], [53.3, 1817358.0], [53.4, 1817358.0], [53.5, 1817358.0], [53.6, 1817358.0], [53.7, 1822513.0], [53.8, 1822513.0], [53.9, 1822513.0], [54.0, 1822513.0], [54.1, 1822513.0], [54.2, 1822513.0], [54.3, 1822513.0], [54.4, 1822513.0], [54.5, 1822513.0], [54.6, 1822513.0], [54.7, 1822513.0], [54.8, 1822513.0], [54.9, 1822513.0], [55.0, 1822513.0], [55.1, 1822513.0], [55.2, 1822513.0], [55.3, 1822513.0], [55.4, 1822513.0], [55.5, 1822513.0], [55.6, 1822513.0], [55.7, 1822513.0], [55.8, 1822513.0], [55.9, 1822513.0], [56.0, 1822513.0], [56.1, 1834445.0], [56.2, 1834445.0], [56.3, 1834445.0], [56.4, 1834445.0], [56.5, 1834445.0], [56.6, 1834445.0], [56.7, 1834445.0], [56.8, 1834445.0], [56.9, 1834445.0], [57.0, 1834445.0], [57.1, 1834445.0], [57.2, 1834445.0], [57.3, 1834445.0], [57.4, 1834445.0], [57.5, 1834445.0], [57.6, 1834445.0], [57.7, 1834445.0], [57.8, 1834445.0], [57.9, 1834445.0], [58.0, 1834445.0], [58.1, 1834445.0], [58.2, 1834445.0], [58.3, 1834445.0], [58.4, 1834445.0], [58.5, 1834445.0], [58.6, 1836016.0], [58.7, 1836016.0], [58.8, 1836016.0], [58.9, 1836016.0], [59.0, 1836016.0], [59.1, 1836016.0], [59.2, 1836016.0], [59.3, 1836016.0], [59.4, 1836016.0], [59.5, 1836016.0], [59.6, 1836016.0], [59.7, 1836016.0], [59.8, 1836016.0], [59.9, 1836016.0], [60.0, 1836016.0], [60.1, 1836016.0], [60.2, 1836016.0], [60.3, 1836016.0], [60.4, 1836016.0], [60.5, 1836016.0], [60.6, 1836016.0], [60.7, 1836016.0], [60.8, 1836016.0], [60.9, 1836016.0], [61.0, 1836496.0], [61.1, 1836496.0], [61.2, 1836496.0], [61.3, 1836496.0], [61.4, 1836496.0], [61.5, 1836496.0], [61.6, 1836496.0], [61.7, 1836496.0], [61.8, 1836496.0], [61.9, 1836496.0], [62.0, 1836496.0], [62.1, 1836496.0], [62.2, 1836496.0], [62.3, 1836496.0], [62.4, 1836496.0], [62.5, 1836496.0], [62.6, 1836496.0], [62.7, 1836496.0], [62.8, 1836496.0], [62.9, 1836496.0], [63.0, 1836496.0], [63.1, 1836496.0], [63.2, 1836496.0], [63.3, 1836496.0], [63.4, 1836496.0], [63.5, 1845776.0], [63.6, 1845776.0], [63.7, 1845776.0], [63.8, 1845776.0], [63.9, 1845776.0], [64.0, 1845776.0], [64.1, 1845776.0], [64.2, 1845776.0], [64.3, 1845776.0], [64.4, 1845776.0], [64.5, 1845776.0], [64.6, 1845776.0], [64.7, 1845776.0], [64.8, 1845776.0], [64.9, 1845776.0], [65.0, 1845776.0], [65.1, 1845776.0], [65.2, 1845776.0], [65.3, 1845776.0], [65.4, 1845776.0], [65.5, 1845776.0], [65.6, 1845776.0], [65.7, 1845776.0], [65.8, 1845776.0], [65.9, 1850008.0], [66.0, 1850008.0], [66.1, 1850008.0], [66.2, 1850008.0], [66.3, 1850008.0], [66.4, 1850008.0], [66.5, 1850008.0], [66.6, 1850008.0], [66.7, 1850008.0], [66.8, 1850008.0], [66.9, 1850008.0], [67.0, 1850008.0], [67.1, 1850008.0], [67.2, 1850008.0], [67.3, 1850008.0], [67.4, 1850008.0], [67.5, 1850008.0], [67.6, 1850008.0], [67.7, 1850008.0], [67.8, 1850008.0], [67.9, 1850008.0], [68.0, 1850008.0], [68.1, 1850008.0], [68.2, 1850008.0], [68.3, 1854426.0], [68.4, 1854426.0], [68.5, 1854426.0], [68.6, 1854426.0], [68.7, 1854426.0], [68.8, 1854426.0], [68.9, 1854426.0], [69.0, 1854426.0], [69.1, 1854426.0], [69.2, 1854426.0], [69.3, 1854426.0], [69.4, 1854426.0], [69.5, 1854426.0], [69.6, 1854426.0], [69.7, 1854426.0], [69.8, 1854426.0], [69.9, 1854426.0], [70.0, 1854426.0], [70.1, 1854426.0], [70.2, 1854426.0], [70.3, 1854426.0], [70.4, 1854426.0], [70.5, 1854426.0], [70.6, 1854426.0], [70.7, 1854426.0], [70.8, 1854434.0], [70.9, 1854434.0], [71.0, 1854434.0], [71.1, 1854434.0], [71.2, 1854434.0], [71.3, 1854434.0], [71.4, 1854434.0], [71.5, 1854434.0], [71.6, 1854434.0], [71.7, 1854434.0], [71.8, 1854434.0], [71.9, 1854434.0], [72.0, 1854434.0], [72.1, 1854434.0], [72.2, 1854434.0], [72.3, 1854434.0], [72.4, 1854434.0], [72.5, 1854434.0], [72.6, 1854434.0], [72.7, 1854434.0], [72.8, 1854434.0], [72.9, 1854434.0], [73.0, 1854434.0], [73.1, 1854434.0], [73.2, 1858357.0], [73.3, 1858357.0], [73.4, 1858357.0], [73.5, 1858357.0], [73.6, 1858357.0], [73.7, 1858357.0], [73.8, 1858357.0], [73.9, 1858357.0], [74.0, 1858357.0], [74.1, 1858357.0], [74.2, 1858357.0], [74.3, 1858357.0], [74.4, 1858357.0], [74.5, 1858357.0], [74.6, 1858357.0], [74.7, 1858357.0], [74.8, 1858357.0], [74.9, 1858357.0], [75.0, 1858357.0], [75.1, 1858357.0], [75.2, 1858357.0], [75.3, 1858357.0], [75.4, 1858357.0], [75.5, 1858357.0], [75.6, 1858357.0], [75.7, 1858422.0], [75.8, 1858422.0], [75.9, 1858422.0], [76.0, 1858422.0], [76.1, 1858422.0], [76.2, 1858422.0], [76.3, 1858422.0], [76.4, 1858422.0], [76.5, 1858422.0], [76.6, 1858422.0], [76.7, 1858422.0], [76.8, 1858422.0], [76.9, 1858422.0], [77.0, 1858422.0], [77.1, 1858422.0], [77.2, 1858422.0], [77.3, 1858422.0], [77.4, 1858422.0], [77.5, 1858422.0], [77.6, 1858422.0], [77.7, 1858422.0], [77.8, 1858422.0], [77.9, 1858422.0], [78.0, 1858422.0], [78.1, 1858622.0], [78.2, 1858622.0], [78.3, 1858622.0], [78.4, 1858622.0], [78.5, 1858622.0], [78.6, 1858622.0], [78.7, 1858622.0], [78.8, 1858622.0], [78.9, 1858622.0], [79.0, 1858622.0], [79.1, 1858622.0], [79.2, 1858622.0], [79.3, 1858622.0], [79.4, 1858622.0], [79.5, 1858622.0], [79.6, 1858622.0], [79.7, 1858622.0], [79.8, 1858622.0], [79.9, 1858622.0], [80.0, 1858622.0], [80.1, 1858622.0], [80.2, 1858622.0], [80.3, 1858622.0], [80.4, 1858622.0], [80.5, 1858729.0], [80.6, 1858729.0], [80.7, 1858729.0], [80.8, 1858729.0], [80.9, 1858729.0], [81.0, 1858729.0], [81.1, 1858729.0], [81.2, 1858729.0], [81.3, 1858729.0], [81.4, 1858729.0], [81.5, 1858729.0], [81.6, 1858729.0], [81.7, 1858729.0], [81.8, 1858729.0], [81.9, 1858729.0], [82.0, 1858729.0], [82.1, 1858729.0], [82.2, 1858729.0], [82.3, 1858729.0], [82.4, 1858729.0], [82.5, 1858729.0], [82.6, 1858729.0], [82.7, 1858729.0], [82.8, 1858729.0], [82.9, 1858729.0], [83.0, 1858988.0], [83.1, 1858988.0], [83.2, 1858988.0], [83.3, 1858988.0], [83.4, 1858988.0], [83.5, 1858988.0], [83.6, 1858988.0], [83.7, 1858988.0], [83.8, 1858988.0], [83.9, 1858988.0], [84.0, 1858988.0], [84.1, 1858988.0], [84.2, 1858988.0], [84.3, 1858988.0], [84.4, 1858988.0], [84.5, 1858988.0], [84.6, 1858988.0], [84.7, 1858988.0], [84.8, 1858988.0], [84.9, 1858988.0], [85.0, 1858988.0], [85.1, 1858988.0], [85.2, 1858988.0], [85.3, 1858988.0], [85.4, 1860123.0], [85.5, 1860123.0], [85.6, 1860123.0], [85.7, 1860123.0], [85.8, 1860123.0], [85.9, 1860123.0], [86.0, 1860123.0], [86.1, 1860123.0], [86.2, 1860123.0], [86.3, 1860123.0], [86.4, 1860123.0], [86.5, 1860123.0], [86.6, 1860123.0], [86.7, 1860123.0], [86.8, 1860123.0], [86.9, 1860123.0], [87.0, 1860123.0], [87.1, 1860123.0], [87.2, 1860123.0], [87.3, 1860123.0], [87.4, 1860123.0], [87.5, 1860123.0], [87.6, 1860123.0], [87.7, 1860123.0], [87.8, 1860123.0], [87.9, 1860164.0], [88.0, 1860164.0], [88.1, 1860164.0], [88.2, 1860164.0], [88.3, 1860164.0], [88.4, 1860164.0], [88.5, 1860164.0], [88.6, 1860164.0], [88.7, 1860164.0], [88.8, 1860164.0], [88.9, 1860164.0], [89.0, 1860164.0], [89.1, 1860164.0], [89.2, 1860164.0], [89.3, 1860164.0], [89.4, 1860164.0], [89.5, 1860164.0], [89.6, 1860164.0], [89.7, 1860164.0], [89.8, 1860164.0], [89.9, 1860164.0], [90.0, 1860164.0], [90.1, 1860164.0], [90.2, 1860164.0], [90.3, 1860348.0], [90.4, 1860348.0], [90.5, 1860348.0], [90.6, 1860348.0], [90.7, 1860348.0], [90.8, 1860348.0], [90.9, 1860348.0], [91.0, 1860348.0], [91.1, 1860348.0], [91.2, 1860348.0], [91.3, 1860348.0], [91.4, 1860348.0], [91.5, 1860348.0], [91.6, 1860348.0], [91.7, 1860348.0], [91.8, 1860348.0], [91.9, 1860348.0], [92.0, 1860348.0], [92.1, 1860348.0], [92.2, 1860348.0], [92.3, 1860348.0], [92.4, 1860348.0], [92.5, 1860348.0], [92.6, 1860348.0], [92.7, 1860736.0], [92.8, 1860736.0], [92.9, 1860736.0], [93.0, 1860736.0], [93.1, 1860736.0], [93.2, 1860736.0], [93.3, 1860736.0], [93.4, 1860736.0], [93.5, 1860736.0], [93.6, 1860736.0], [93.7, 1860736.0], [93.8, 1860736.0], [93.9, 1860736.0], [94.0, 1860736.0], [94.1, 1860736.0], [94.2, 1860736.0], [94.3, 1860736.0], [94.4, 1860736.0], [94.5, 1860736.0], [94.6, 1860736.0], [94.7, 1860736.0], [94.8, 1860736.0], [94.9, 1860736.0], [95.0, 1860736.0], [95.1, 1860736.0], [95.2, 1860756.0], [95.3, 1860756.0], [95.4, 1860756.0], [95.5, 1860756.0], [95.6, 1860756.0], [95.7, 1860756.0], [95.8, 1860756.0], [95.9, 1860756.0], [96.0, 1860756.0], [96.1, 1860756.0], [96.2, 1860756.0], [96.3, 1860756.0], [96.4, 1860756.0], [96.5, 1860756.0], [96.6, 1860756.0], [96.7, 1860756.0], [96.8, 1860756.0], [96.9, 1860756.0], [97.0, 1860756.0], [97.1, 1860756.0], [97.2, 1860756.0], [97.3, 1860756.0], [97.4, 1860756.0], [97.5, 1860756.0], [97.6, 1861494.0], [97.7, 1861494.0], [97.8, 1861494.0], [97.9, 1861494.0], [98.0, 1861494.0], [98.1, 1861494.0], [98.2, 1861494.0], [98.3, 1861494.0], [98.4, 1861494.0], [98.5, 1861494.0], [98.6, 1861494.0], [98.7, 1861494.0], [98.8, 1861494.0], [98.9, 1861494.0], [99.0, 1861494.0], [99.1, 1861494.0], [99.2, 1861494.0], [99.3, 1861494.0], [99.4, 1861494.0], [99.5, 1861494.0], [99.6, 1861494.0], [99.7, 1861494.0], [99.8, 1861494.0], [99.9, 1861494.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[0.0, 73571.0], [0.1, 73571.0], [0.2, 93997.0], [0.3, 93997.0], [0.4, 94072.0], [0.5, 94072.0], [0.6, 94072.0], [0.7, 98293.0], [0.8, 98317.0], [0.9, 98317.0], [1.0, 98354.0], [1.1, 98354.0], [1.2, 98398.0], [1.3, 98398.0], [1.4, 99017.0], [1.5, 99017.0], [1.6, 104666.0], [1.7, 104666.0], [1.8, 104779.0], [1.9, 104779.0], [2.0, 111242.0], [2.1, 111242.0], [2.2, 111285.0], [2.3, 111285.0], [2.4, 111847.0], [2.5, 111847.0], [2.6, 112036.0], [2.7, 112036.0], [2.8, 112036.0], [2.9, 112515.0], [3.0, 112515.0], [3.1, 112578.0], [3.2, 112578.0], [3.3, 113051.0], [3.4, 113051.0], [3.5, 113081.0], [3.6, 113081.0], [3.7, 113303.0], [3.8, 113303.0], [3.9, 113503.0], [4.0, 113503.0], [4.1, 113729.0], [4.2, 113729.0], [4.3, 114126.0], [4.4, 114126.0], [4.5, 114592.0], [4.6, 114592.0], [4.7, 114779.0], [4.8, 114779.0], [4.9, 114861.0], [5.0, 114861.0], [5.1, 115097.0], [5.2, 115097.0], [5.3, 115099.0], [5.4, 115099.0], [5.5, 115668.0], [5.6, 115668.0], [5.7, 119446.0], [5.8, 119446.0], [5.9, 132908.0], [6.0, 132908.0], [6.1, 135393.0], [6.2, 135393.0], [6.3, 149547.0], [6.4, 149547.0], [6.5, 159628.0], [6.6, 159628.0], [6.7, 164745.0], [6.8, 164745.0], [6.9, 164957.0], [7.0, 164957.0], [7.1, 181342.0], [7.2, 181342.0], [7.3, 183815.0], [7.4, 183815.0], [7.5, 189903.0], [7.6, 189903.0], [7.7, 228559.0], [7.8, 228559.0], [7.9, 229468.0], [8.0, 229468.0], [8.1, 230927.0], [8.2, 230927.0], [8.3, 235086.0], [8.4, 235086.0], [8.5, 235341.0], [8.6, 235341.0], [8.7, 240484.0], [8.8, 246395.0], [8.9, 246395.0], [9.0, 246905.0], [9.1, 246905.0], [9.2, 247026.0], [9.3, 247026.0], [9.4, 247352.0], [9.5, 247352.0], [9.6, 253376.0], [9.7, 253376.0], [9.8, 253821.0], [9.9, 253821.0], [10.0, 253934.0], [10.1, 253934.0], [10.2, 253994.0], [10.3, 253994.0], [10.4, 254408.0], [10.5, 254408.0], [10.6, 254539.0], [10.7, 254539.0], [10.8, 254845.0], [10.9, 254845.0], [11.0, 254856.0], [11.1, 254856.0], [11.2, 254962.0], [11.3, 254962.0], [11.4, 255226.0], [11.5, 255226.0], [11.6, 257340.0], [11.7, 257340.0], [11.8, 257435.0], [11.9, 257435.0], [12.0, 257651.0], [12.1, 257651.0], [12.2, 257773.0], [12.3, 257773.0], [12.4, 258958.0], [12.5, 258958.0], [12.6, 258977.0], [12.7, 258977.0], [12.8, 259939.0], [12.9, 259939.0], [13.0, 260085.0], [13.1, 260085.0], [13.2, 260119.0], [13.3, 260119.0], [13.4, 264876.0], [13.5, 264876.0], [13.6, 264933.0], [13.7, 264933.0], [13.8, 265148.0], [13.9, 265148.0], [14.0, 274226.0], [14.1, 274226.0], [14.2, 275222.0], [14.3, 275222.0], [14.4, 320647.0], [14.5, 320647.0], [14.6, 346285.0], [14.7, 346285.0], [14.8, 347362.0], [14.9, 347362.0], [15.0, 350192.0], [15.1, 350192.0], [15.2, 350227.0], [15.3, 350227.0], [15.4, 350543.0], [15.5, 350543.0], [15.6, 355548.0], [15.7, 355548.0], [15.8, 357073.0], [15.9, 357073.0], [16.0, 376880.0], [16.1, 376880.0], [16.2, 381777.0], [16.3, 381777.0], [16.4, 381859.0], [16.5, 381859.0], [16.6, 387370.0], [16.7, 387370.0], [16.8, 387845.0], [16.9, 387845.0], [17.0, 387883.0], [17.1, 387883.0], [17.2, 393908.0], [17.3, 393908.0], [17.4, 399181.0], [17.5, 399181.0], [17.6, 399514.0], [17.7, 399514.0], [17.8, 399611.0], [17.9, 399611.0], [18.0, 399690.0], [18.1, 399690.0], [18.2, 399787.0], [18.3, 399787.0], [18.4, 399844.0], [18.5, 399844.0], [18.6, 399971.0], [18.7, 399971.0], [18.8, 400197.0], [18.9, 400197.0], [19.0, 400299.0], [19.1, 400299.0], [19.2, 400670.0], [19.3, 400670.0], [19.4, 400776.0], [19.5, 400776.0], [19.6, 400818.0], [19.7, 400818.0], [19.8, 400900.0], [19.9, 400900.0], [20.0, 401041.0], [20.1, 401041.0], [20.2, 401143.0], [20.3, 401143.0], [20.4, 401610.0], [20.5, 401610.0], [20.6, 401660.0], [20.7, 401660.0], [20.8, 401931.0], [20.9, 401931.0], [21.0, 407401.0], [21.1, 407401.0], [21.2, 407856.0], [21.3, 407856.0], [21.4, 408759.0], [21.5, 408759.0], [21.6, 408864.0], [21.7, 408864.0], [21.8, 409050.0], [21.9, 409050.0], [22.0, 414075.0], [22.1, 414075.0], [22.2, 414522.0], [22.3, 414522.0], [22.4, 440099.0], [22.5, 440099.0], [22.6, 441280.0], [22.7, 441280.0], [22.8, 497678.0], [22.9, 497678.0], [23.0, 500165.0], [23.1, 500165.0], [23.2, 500432.0], [23.3, 500432.0], [23.4, 501179.0], [23.5, 501179.0], [23.6, 506140.0], [23.7, 506140.0], [23.8, 506617.0], [23.9, 506617.0], [24.0, 506744.0], [24.1, 506744.0], [24.2, 522127.0], [24.3, 522127.0], [24.4, 533437.0], [24.5, 533437.0], [24.6, 533512.0], [24.7, 533512.0], [24.8, 533633.0], [24.9, 533633.0], [25.0, 534113.0], [25.1, 534113.0], [25.2, 534185.0], [25.3, 534185.0], [25.4, 534255.0], [25.5, 534255.0], [25.6, 540311.0], [25.7, 540311.0], [25.8, 540669.0], [25.9, 540669.0], [26.0, 541681.0], [26.1, 541681.0], [26.2, 541775.0], [26.3, 541775.0], [26.4, 548198.0], [26.5, 548198.0], [26.6, 548285.0], [26.7, 548285.0], [26.8, 548309.0], [26.9, 548309.0], [27.0, 548381.0], [27.1, 548381.0], [27.2, 548489.0], [27.3, 548489.0], [27.4, 548767.0], [27.5, 548767.0], [27.6, 548930.0], [27.7, 548930.0], [27.8, 549230.0], [27.9, 549230.0], [28.0, 549545.0], [28.1, 549545.0], [28.2, 558575.0], [28.3, 558575.0], [28.4, 559506.0], [28.5, 559506.0], [28.6, 559545.0], [28.7, 559545.0], [28.8, 559596.0], [28.9, 559596.0], [29.0, 559645.0], [29.1, 559645.0], [29.2, 560071.0], [29.3, 560071.0], [29.4, 560229.0], [29.5, 560229.0], [29.6, 560256.0], [29.7, 560256.0], [29.8, 571487.0], [29.9, 571487.0], [30.0, 581998.0], [30.1, 581998.0], [30.2, 582159.0], [30.3, 582159.0], [30.4, 588908.0], [30.5, 588908.0], [30.6, 589495.0], [30.7, 589495.0], [30.8, 596120.0], [30.9, 596120.0], [31.0, 604825.0], [31.1, 604825.0], [31.2, 605435.0], [31.3, 605435.0], [31.4, 605597.0], [31.5, 605597.0], [31.6, 610752.0], [31.7, 610752.0], [31.8, 627826.0], [31.9, 627826.0], [32.0, 650134.0], [32.1, 650134.0], [32.2, 650772.0], [32.3, 650772.0], [32.4, 667980.0], [32.5, 667980.0], [32.6, 668358.0], [32.7, 668358.0], [32.8, 668402.0], [32.9, 668402.0], [33.0, 673333.0], [33.1, 673333.0], [33.2, 673479.0], [33.3, 673479.0], [33.4, 673715.0], [33.5, 673715.0], [33.6, 685245.0], [33.7, 685245.0], [33.8, 692829.0], [33.9, 692829.0], [34.0, 693262.0], [34.1, 693262.0], [34.2, 699714.0], [34.3, 699714.0], [34.4, 699779.0], [34.5, 699779.0], [34.6, 700033.0], [34.7, 700033.0], [34.8, 707022.0], [34.9, 707022.0], [35.0, 707128.0], [35.1, 707128.0], [35.2, 718860.0], [35.3, 718860.0], [35.4, 726117.0], [35.5, 726117.0], [35.6, 726426.0], [35.7, 726426.0], [35.8, 727099.0], [35.9, 727099.0], [36.0, 727530.0], [36.1, 727530.0], [36.2, 727838.0], [36.3, 727838.0], [36.4, 727925.0], [36.5, 727925.0], [36.6, 727975.0], [36.7, 727975.0], [36.8, 734087.0], [36.9, 734087.0], [37.0, 734481.0], [37.1, 734481.0], [37.2, 735493.0], [37.3, 735493.0], [37.4, 735943.0], [37.5, 735943.0], [37.6, 736182.0], [37.7, 736182.0], [37.8, 743357.0], [37.9, 743357.0], [38.0, 743650.0], [38.1, 743650.0], [38.2, 743656.0], [38.3, 743656.0], [38.4, 743656.0], [38.5, 745095.0], [38.6, 745095.0], [38.7, 746037.0], [38.8, 746037.0], [38.9, 746076.0], [39.0, 746076.0], [39.1, 746155.0], [39.2, 746155.0], [39.3, 746441.0], [39.4, 746441.0], [39.5, 752459.0], [39.6, 752459.0], [39.7, 753750.0], [39.8, 753750.0], [39.9, 754600.0], [40.0, 754600.0], [40.1, 754637.0], [40.2, 754637.0], [40.3, 755083.0], [40.4, 755083.0], [40.5, 755750.0], [40.6, 755750.0], [40.7, 758568.0], [40.8, 758568.0], [40.9, 786487.0], [41.0, 786487.0], [41.1, 792522.0], [41.2, 792522.0], [41.3, 800101.0], [41.4, 800101.0], [41.5, 800164.0], [41.6, 800164.0], [41.7, 800167.0], [41.8, 800167.0], [41.9, 800207.0], [42.0, 800207.0], [42.1, 800284.0], [42.2, 800284.0], [42.3, 805980.0], [42.4, 805980.0], [42.5, 806842.0], [42.6, 806842.0], [42.7, 806883.0], [42.8, 806883.0], [42.9, 806910.0], [43.0, 806910.0], [43.1, 806937.0], [43.2, 806937.0], [43.3, 808009.0], [43.4, 808009.0], [43.5, 816476.0], [43.6, 816476.0], [43.7, 816606.0], [43.8, 816606.0], [43.9, 817107.0], [44.0, 817107.0], [44.1, 817207.0], [44.2, 817207.0], [44.3, 819425.0], [44.4, 819425.0], [44.5, 820810.0], [44.6, 820810.0], [44.7, 823469.0], [44.8, 823469.0], [44.9, 823973.0], [45.0, 823973.0], [45.1, 826132.0], [45.2, 826132.0], [45.3, 826693.0], [45.4, 826693.0], [45.5, 826758.0], [45.6, 826758.0], [45.7, 827153.0], [45.8, 827153.0], [45.9, 828620.0], [46.0, 828620.0], [46.1, 844303.0], [46.2, 844303.0], [46.3, 860530.0], [46.4, 860530.0], [46.5, 863387.0], [46.6, 863387.0], [46.7, 863924.0], [46.8, 863924.0], [46.9, 875208.0], [47.0, 875208.0], [47.1, 896523.0], [47.2, 896523.0], [47.3, 901386.0], [47.4, 901386.0], [47.5, 907809.0], [47.6, 907809.0], [47.7, 912225.0], [47.8, 912225.0], [47.9, 919034.0], [48.0, 919034.0], [48.1, 930184.0], [48.2, 930184.0], [48.3, 941446.0], [48.4, 941446.0], [48.5, 941787.0], [48.6, 941787.0], [48.7, 941857.0], [48.8, 941857.0], [48.9, 947552.0], [49.0, 947552.0], [49.1, 954323.0], [49.2, 954323.0], [49.3, 955893.0], [49.4, 955893.0], [49.5, 958617.0], [49.6, 958617.0], [49.7, 958824.0], [49.8, 958824.0], [49.9, 958837.0], [50.0, 958837.0], [50.1, 959407.0], [50.2, 959407.0], [50.3, 964574.0], [50.4, 964574.0], [50.5, 965061.0], [50.6, 965061.0], [50.7, 965629.0], [50.8, 965629.0], [50.9, 965638.0], [51.0, 965638.0], [51.1, 965686.0], [51.2, 965686.0], [51.3, 968566.0], [51.4, 968566.0], [51.5, 968580.0], [51.6, 968580.0], [51.7, 970707.0], [51.8, 970707.0], [51.9, 971331.0], [52.0, 971331.0], [52.1, 971504.0], [52.2, 971504.0], [52.3, 974338.0], [52.4, 974338.0], [52.5, 975432.0], [52.6, 975432.0], [52.7, 975457.0], [52.8, 975457.0], [52.9, 976621.0], [53.0, 976621.0], [53.1, 977432.0], [53.2, 977432.0], [53.3, 977594.0], [53.4, 977594.0], [53.5, 977706.0], [53.6, 977706.0], [53.7, 977771.0], [53.8, 977771.0], [53.9, 980257.0], [54.0, 980257.0], [54.1, 987333.0], [54.2, 987333.0], [54.3, 988428.0], [54.4, 988428.0], [54.5, 1021751.0], [54.6, 1021751.0], [54.7, 1027298.0], [54.8, 1027298.0], [54.9, 1034220.0], [55.0, 1034220.0], [55.1, 1035297.0], [55.2, 1035297.0], [55.3, 1035421.0], [55.4, 1035421.0], [55.5, 1035979.0], [55.6, 1035979.0], [55.7, 1045334.0], [55.8, 1045334.0], [55.9, 1047526.0], [56.0, 1047526.0], [56.1, 1049278.0], [56.2, 1049278.0], [56.3, 1054282.0], [56.4, 1054282.0], [56.5, 1061598.0], [56.6, 1061598.0], [56.7, 1062506.0], [56.8, 1062506.0], [56.9, 1069250.0], [57.0, 1069250.0], [57.1, 1069683.0], [57.2, 1069683.0], [57.3, 1074962.0], [57.4, 1074962.0], [57.5, 1081590.0], [57.6, 1081590.0], [57.7, 1084822.0], [57.8, 1084822.0], [57.9, 1085785.0], [58.0, 1085785.0], [58.1, 1085808.0], [58.2, 1085808.0], [58.3, 1085825.0], [58.4, 1085825.0], [58.5, 1085952.0], [58.6, 1085952.0], [58.7, 1085962.0], [58.8, 1085962.0], [58.9, 1086013.0], [59.0, 1086013.0], [59.1, 1086051.0], [59.2, 1086051.0], [59.3, 1086087.0], [59.4, 1086087.0], [59.5, 1088071.0], [59.6, 1088071.0], [59.7, 1097633.0], [59.8, 1097633.0], [59.9, 1105714.0], [60.0, 1105714.0], [60.1, 1108398.0], [60.2, 1108398.0], [60.3, 1108570.0], [60.4, 1108570.0], [60.5, 1108614.0], [60.6, 1108614.0], [60.7, 1109547.0], [60.8, 1109547.0], [60.9, 1113464.0], [61.0, 1113464.0], [61.1, 1114334.0], [61.2, 1114334.0], [61.3, 1115121.0], [61.4, 1115121.0], [61.5, 1115913.0], [61.6, 1115913.0], [61.7, 1116232.0], [61.8, 1116232.0], [61.9, 1122843.0], [62.0, 1122843.0], [62.1, 1141465.0], [62.2, 1141465.0], [62.3, 1147855.0], [62.4, 1147855.0], [62.5, 1148008.0], [62.6, 1148008.0], [62.7, 1153868.0], [62.8, 1153868.0], [62.9, 1153999.0], [63.0, 1153999.0], [63.1, 1154019.0], [63.2, 1154019.0], [63.3, 1155312.0], [63.4, 1155312.0], [63.5, 1161050.0], [63.6, 1161050.0], [63.7, 1163849.0], [63.8, 1163849.0], [63.9, 1165228.0], [64.0, 1165228.0], [64.1, 1165352.0], [64.2, 1165352.0], [64.3, 1165421.0], [64.4, 1165421.0], [64.5, 1165949.0], [64.6, 1165949.0], [64.7, 1166102.0], [64.8, 1166102.0], [64.9, 1167356.0], [65.0, 1167356.0], [65.1, 1167911.0], [65.2, 1167911.0], [65.3, 1168030.0], [65.4, 1168030.0], [65.5, 1170701.0], [65.6, 1170701.0], [65.7, 1179187.0], [65.8, 1179187.0], [65.9, 1187008.0], [66.0, 1187008.0], [66.1, 1188429.0], [66.2, 1188429.0], [66.3, 1189384.0], [66.4, 1189384.0], [66.5, 1190924.0], [66.6, 1190924.0], [66.7, 1191819.0], [66.8, 1191819.0], [66.9, 1192970.0], [67.0, 1192970.0], [67.1, 1202847.0], [67.2, 1202847.0], [67.3, 1208313.0], [67.4, 1208313.0], [67.5, 1230856.0], [67.6, 1230856.0], [67.7, 1232978.0], [67.8, 1232978.0], [67.9, 1248507.0], [68.0, 1248507.0], [68.1, 1254108.0], [68.2, 1254108.0], [68.3, 1267235.0], [68.4, 1267235.0], [68.5, 1267425.0], [68.6, 1267425.0], [68.7, 1273846.0], [68.8, 1273846.0], [68.9, 1277006.0], [69.0, 1277006.0], [69.1, 1288711.0], [69.2, 1288711.0], [69.3, 1288779.0], [69.4, 1288779.0], [69.5, 1289176.0], [69.6, 1289176.0], [69.7, 1289300.0], [69.8, 1289300.0], [69.9, 1293470.0], [70.0, 1293470.0], [70.1, 1295327.0], [70.2, 1295327.0], [70.3, 1296399.0], [70.4, 1296399.0], [70.5, 1300347.0], [70.6, 1300347.0], [70.7, 1300658.0], [70.8, 1300658.0], [70.9, 1300804.0], [71.0, 1300804.0], [71.1, 1300831.0], [71.2, 1300831.0], [71.3, 1300992.0], [71.4, 1300992.0], [71.5, 1301119.0], [71.6, 1301119.0], [71.7, 1304406.0], [71.8, 1304406.0], [71.9, 1305534.0], [72.0, 1305534.0], [72.1, 1305914.0], [72.2, 1305914.0], [72.3, 1305963.0], [72.4, 1305963.0], [72.5, 1306239.0], [72.6, 1306239.0], [72.7, 1306321.0], [72.8, 1306321.0], [72.9, 1306333.0], [73.0, 1306333.0], [73.1, 1307308.0], [73.2, 1307308.0], [73.3, 1312536.0], [73.4, 1312536.0], [73.5, 1312687.0], [73.6, 1312687.0], [73.7, 1312873.0], [73.8, 1312873.0], [73.9, 1313328.0], [74.0, 1313328.0], [74.1, 1352780.0], [74.2, 1352780.0], [74.3, 1354823.0], [74.4, 1354823.0], [74.5, 1356402.0], [74.6, 1356402.0], [74.7, 1365515.0], [74.8, 1365515.0], [74.9, 1368689.0], [75.0, 1368689.0], [75.1, 1368832.0], [75.2, 1368832.0], [75.3, 1369017.0], [75.4, 1369017.0], [75.5, 1376902.0], [75.6, 1376902.0], [75.7, 1377805.0], [75.8, 1377805.0], [75.9, 1377888.0], [76.0, 1377888.0], [76.1, 1377901.0], [76.2, 1377901.0], [76.3, 1378203.0], [76.4, 1378203.0], [76.5, 1386135.0], [76.6, 1386135.0], [76.7, 1386245.0], [76.8, 1386245.0], [76.9, 1392940.0], [77.0, 1392940.0], [77.1, 1393351.0], [77.2, 1393351.0], [77.3, 1394395.0], [77.4, 1394395.0], [77.5, 1394414.0], [77.6, 1394414.0], [77.7, 1394739.0], [77.8, 1394739.0], [77.9, 1395487.0], [78.0, 1395487.0], [78.1, 1395717.0], [78.2, 1395717.0], [78.3, 1395734.0], [78.4, 1395734.0], [78.5, 1406765.0], [78.6, 1406765.0], [78.7, 1407813.0], [78.8, 1407813.0], [78.9, 1408143.0], [79.0, 1408143.0], [79.1, 1419306.0], [79.2, 1419306.0], [79.3, 1443990.0], [79.4, 1443990.0], [79.5, 1444592.0], [79.6, 1444592.0], [79.7, 1450088.0], [79.8, 1450088.0], [79.9, 1455652.0], [80.0, 1455652.0], [80.1, 1455688.0], [80.2, 1455688.0], [80.3, 1460481.0], [80.4, 1460481.0], [80.5, 1460906.0], [80.6, 1460906.0], [80.7, 1462433.0], [80.8, 1462433.0], [80.9, 1464494.0], [81.0, 1464494.0], [81.1, 1465840.0], [81.2, 1465840.0], [81.3, 1467160.0], [81.4, 1467160.0], [81.5, 1472821.0], [81.6, 1472821.0], [81.7, 1473061.0], [81.8, 1473061.0], [81.9, 1474140.0], [82.0, 1474140.0], [82.1, 1474495.0], [82.2, 1474495.0], [82.3, 1474727.0], [82.4, 1474727.0], [82.5, 1474748.0], [82.6, 1474748.0], [82.7, 1474902.0], [82.8, 1474902.0], [82.9, 1480235.0], [83.0, 1480235.0], [83.1, 1480257.0], [83.2, 1480257.0], [83.3, 1482915.0], [83.4, 1482915.0], [83.5, 1483747.0], [83.6, 1483747.0], [83.7, 1485380.0], [83.8, 1485380.0], [83.9, 1491001.0], [84.0, 1491001.0], [84.1, 1494111.0], [84.2, 1494111.0], [84.3, 1495301.0], [84.4, 1495301.0], [84.5, 1522825.0], [84.6, 1522825.0], [84.7, 1525014.0], [84.8, 1525014.0], [84.9, 1531622.0], [85.0, 1531622.0], [85.1, 1537366.0], [85.2, 1537366.0], [85.3, 1545196.0], [85.4, 1545196.0], [85.5, 1551923.0], [85.6, 1551923.0], [85.7, 1569320.0], [85.8, 1569320.0], [85.9, 1579211.0], [86.0, 1579211.0], [86.1, 1583843.0], [86.2, 1583843.0], [86.3, 1584393.0], [86.4, 1584393.0], [86.5, 1595313.0], [86.6, 1595313.0], [86.7, 1606532.0], [86.8, 1606532.0], [86.9, 1606670.0], [87.0, 1606670.0], [87.1, 1606707.0], [87.2, 1606707.0], [87.3, 1606797.0], [87.4, 1606797.0], [87.5, 1609797.0], [87.6, 1609797.0], [87.7, 1610975.0], [87.8, 1610975.0], [87.9, 1611003.0], [88.0, 1611003.0], [88.1, 1611016.0], [88.2, 1611016.0], [88.3, 1611100.0], [88.4, 1611100.0], [88.5, 1611133.0], [88.6, 1611133.0], [88.7, 1612465.0], [88.8, 1612465.0], [88.9, 1612558.0], [89.0, 1612558.0], [89.1, 1612677.0], [89.2, 1612677.0], [89.3, 1613110.0], [89.4, 1613110.0], [89.5, 1613675.0], [89.6, 1613675.0], [89.7, 1619826.0], [89.8, 1619826.0], [89.9, 1620703.0], [90.0, 1620703.0], [90.1, 1621083.0], [90.2, 1621083.0], [90.3, 1621395.0], [90.4, 1621395.0], [90.5, 1622461.0], [90.6, 1622461.0], [90.7, 1623069.0], [90.8, 1623069.0], [90.9, 1623196.0], [91.0, 1623196.0], [91.1, 1627133.0], [91.2, 1627133.0], [91.3, 1629065.0], [91.4, 1629065.0], [91.5, 1635605.0], [91.6, 1635605.0], [91.7, 1665394.0], [91.8, 1665394.0], [91.9, 1665947.0], [92.0, 1665947.0], [92.1, 1665988.0], [92.2, 1665988.0], [92.3, 1666074.0], [92.4, 1666074.0], [92.5, 1666088.0], [92.6, 1666088.0], [92.7, 1672397.0], [92.8, 1672397.0], [92.9, 1677269.0], [93.0, 1677269.0], [93.1, 1677414.0], [93.2, 1677414.0], [93.3, 1677432.0], [93.4, 1677432.0], [93.5, 1677755.0], [93.6, 1677755.0], [93.7, 1690306.0], [93.8, 1690306.0], [93.9, 1705651.0], [94.0, 1705651.0], [94.1, 1712086.0], [94.2, 1712086.0], [94.3, 1712581.0], [94.4, 1712581.0], [94.5, 1718672.0], [94.6, 1718672.0], [94.7, 1719164.0], [94.8, 1719164.0], [94.9, 1724422.0], [95.0, 1724422.0], [95.1, 1724562.0], [95.2, 1724562.0], [95.3, 1725055.0], [95.4, 1725055.0], [95.5, 1725436.0], [95.6, 1725436.0], [95.7, 1725977.0], [95.8, 1725977.0], [95.9, 1726401.0], [96.0, 1726401.0], [96.1, 1726484.0], [96.2, 1726484.0], [96.3, 1726644.0], [96.4, 1726644.0], [96.5, 1727076.0], [96.6, 1727076.0], [96.7, 1727307.0], [96.8, 1727307.0], [96.9, 1728116.0], [97.0, 1728116.0], [97.1, 1729274.0], [97.2, 1729274.0], [97.3, 1730583.0], [97.4, 1730583.0], [97.5, 1731337.0], [97.6, 1731337.0], [97.7, 1733140.0], [97.8, 1733140.0], [97.9, 1735165.0], [98.0, 1735165.0], [98.1, 1735313.0], [98.2, 1735313.0], [98.3, 1739098.0], [98.4, 1739098.0], [98.5, 1748755.0], [98.6, 1748755.0], [98.7, 1749047.0], [98.8, 1749047.0], [98.9, 1753746.0], [99.0, 1753746.0], [99.1, 1778921.0], [99.2, 1778921.0], [99.3, 1795047.0], [99.4, 1795047.0], [99.5, 1795102.0], [99.6, 1795102.0], [99.7, 1801429.0], [99.8, 1801429.0], [99.9, 1806329.0], [100.0, 1806329.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"), function(series){
                series.curvedLines = {apply: true, tension: 1};
                series.threshold = {
                        below: percentileThreshold,
                        color: $("#slider-vertical").children("div").css("background-color")
                };
            });
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 73500.0, "maxY": 6.0, "series": [{"data": [[1845500.0, 1.0], [1723000.0, 1.0], [1541500.0, 1.0], [1616500.0, 1.0], [1854000.0, 2.0], [1808500.0, 1.0], [1817000.0, 1.0], [1380000.0, 1.0], [1281000.0, 1.0], [1836000.0, 2.0], [1860000.0, 3.0], [1798500.0, 1.0], [1822500.0, 1.0], [1782500.0, 1.0], [1617500.0, 1.0], [1737500.0, 2.0], [1586000.0, 1.0], [1860500.0, 2.0], [1810000.0, 1.0], [1834000.0, 1.0], [1850000.0, 1.0], [1858000.0, 2.0], [1788500.0, 1.0], [1354500.0, 1.0], [1629000.0, 1.0], [1605000.0, 1.0], [1741000.0, 1.0], [1861000.0, 1.0], [1815500.0, 1.0], [1807500.0, 1.0], [1791500.0, 1.0], [1858500.0, 3.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1054000.0, 1.0], [1352500.0, 1.0], [964500.0, 1.0], [1288500.0, 2.0], [548500.0, 2.0], [826000.0, 1.0], [1267000.0, 2.0], [954000.0, 1.0], [1395000.0, 1.0], [260000.0, 2.0], [1801000.0, 1.0], [1460000.0, 1.0], [1161000.0, 1.0], [1395500.0, 2.0], [440000.0, 1.0], [1289000.0, 2.0], [975000.0, 2.0], [1545000.0, 1.0], [560000.0, 3.0], [826500.0, 2.0], [1460500.0, 1.0], [1609500.0, 1.0], [752000.0, 1.0], [407500.0, 1.0], [816000.0, 1.0], [912000.0, 1.0], [230500.0, 1.0], [1097500.0, 1.0], [246500.0, 1.0], [254500.0, 4.0], [549000.0, 1.0], [1354500.0, 1.0], [1482500.0, 1.0], [559500.0, 4.0], [1141000.0, 1.0], [111500.0, 1.0], [901000.0, 1.0], [115500.0, 1.0], [1610500.0, 1.0], [965000.0, 1.0], [1525000.0, 1.0], [792500.0, 1.0], [1627000.0, 1.0], [1392500.0, 1.0], [1115000.0, 1.0], [1179000.0, 1.0], [1307000.0, 1.0], [974000.0, 1.0], [1712500.0, 1.0], [257000.0, 2.0], [274000.0, 1.0], [1116000.0, 1.0], [941500.0, 2.0], [707000.0, 2.0], [1606500.0, 4.0], [1115500.0, 1.0], [1393000.0, 1.0], [1027000.0, 1.0], [548000.0, 5.0], [1735000.0, 2.0], [1394000.0, 2.0], [401500.0, 3.0], [558500.0, 1.0], [718500.0, 1.0], [497500.0, 1.0], [259500.0, 1.0], [1629000.0, 1.0], [1394500.0, 1.0], [1522500.0, 1.0], [1074500.0, 1.0], [1202500.0, 1.0], [1480000.0, 2.0], [407000.0, 1.0], [1672000.0, 1.0], [113000.0, 3.0], [1778500.0, 1.0], [1368500.0, 2.0], [1731000.0, 1.0], [1795000.0, 2.0], [588500.0, 1.0], [1155000.0, 1.0], [930000.0, 1.0], [1069500.0, 1.0], [246000.0, 1.0], [254000.0, 1.0], [727000.0, 1.0], [1049000.0, 1.0], [1113000.0, 1.0], [823000.0, 1.0], [673500.0, 1.0], [919000.0, 1.0], [1369000.0, 1.0], [1114000.0, 1.0], [1306000.0, 3.0], [1753500.0, 1.0], [1690000.0, 1.0], [610500.0, 1.0], [1305500.0, 3.0], [589000.0, 1.0], [823500.0, 1.0], [1733000.0, 1.0], [685000.0, 1.0], [1583500.0, 1.0], [1047500.0, 1.0], [401000.0, 2.0], [1584000.0, 1.0], [1455500.0, 2.0], [1712000.0, 1.0], [114500.0, 3.0], [941000.0, 1.0], [727500.0, 4.0], [534000.0, 3.0], [1579000.0, 1.0], [1472500.0, 1.0], [320500.0, 1.0], [896500.0, 1.0], [726000.0, 2.0], [1494000.0, 1.0], [400500.0, 4.0], [1365500.0, 1.0], [1622000.0, 1.0], [235000.0, 2.0], [1109500.0, 1.0], [1665000.0, 1.0], [1729000.0, 1.0], [533500.0, 2.0], [875000.0, 1.0], [971000.0, 1.0], [1473000.0, 1.0], [1035000.0, 2.0], [1537000.0, 1.0], [1623000.0, 2.0], [1154000.0, 1.0], [149500.0, 1.0], [1665500.0, 2.0], [1474000.0, 2.0], [189500.0, 1.0], [844000.0, 1.0], [1666000.0, 2.0], [1153500.0, 2.0], [253500.0, 3.0], [1495000.0, 1.0], [758500.0, 1.0], [1474500.0, 3.0], [907500.0, 1.0], [1304000.0, 1.0], [673000.0, 2.0], [347000.0, 1.0], [971500.0, 1.0], [1035500.0, 1.0], [1069000.0, 1.0], [112000.0, 1.0], [1730500.0, 1.0], [1086000.0, 3.0], [820500.0, 1.0], [650000.0, 1.0], [746000.0, 4.0], [1192500.0, 1.0], [1725500.0, 1.0], [1726000.0, 2.0], [1085500.0, 5.0], [240000.0, 1.0], [692500.0, 1.0], [506500.0, 2.0], [1491000.0, 1.0], [1034000.0, 1.0], [1108000.0, 1.0], [1406500.0, 1.0], [1300000.0, 1.0], [1619500.0, 1.0], [735000.0, 1.0], [400000.0, 2.0], [863000.0, 1.0], [959000.0, 1.0], [1726500.0, 1.0], [1727000.0, 2.0], [1108500.0, 2.0], [970500.0, 1.0], [1386000.0, 2.0], [736000.0, 1.0], [1450000.0, 1.0], [1705500.0, 1.0], [1300500.0, 4.0], [399500.0, 6.0], [800000.0, 5.0], [650500.0, 1.0], [1620500.0, 1.0], [1748500.0, 1.0], [258500.0, 2.0], [533000.0, 1.0], [1088000.0, 1.0], [1621000.0, 2.0], [73500.0, 1.0], [863500.0, 1.0], [1749000.0, 1.0], [357000.0, 1.0], [693000.0, 1.0], [1408000.0, 1.0], [93500.0, 1.0], [1407500.0, 1.0], [1728000.0, 1.0], [113500.0, 2.0], [1301000.0, 1.0], [501000.0, 1.0], [735500.0, 1.0], [1045000.0, 1.0], [1595000.0, 1.0], [1254000.0, 1.0], [968500.0, 2.0], [181000.0, 1.0], [734000.0, 2.0], [1232500.0, 1.0], [229000.0, 1.0], [1061500.0, 1.0], [253000.0, 1.0], [1467000.0, 1.0], [1148000.0, 1.0], [1062500.0, 1.0], [346000.0, 1.0], [1190500.0, 1.0], [755000.0, 1.0], [1021500.0, 1.0], [541500.0, 2.0], [819000.0, 1.0], [605500.0, 1.0], [1724000.0, 1.0], [1531500.0, 1.0], [1147500.0, 1.0], [506000.0, 1.0], [522000.0, 1.0], [596000.0, 1.0], [159500.0, 1.0], [1084500.0, 1.0], [958500.0, 3.0], [183500.0, 1.0], [393500.0, 1.0], [1105500.0, 1.0], [980000.0, 1.0], [1724500.0, 1.0], [1725000.0, 2.0], [947500.0, 1.0], [1170500.0, 1.0], [745000.0, 1.0], [99000.0, 1.0], [399000.0, 1.0], [111000.0, 2.0], [627500.0, 1.0], [1277000.0, 1.0], [115000.0, 2.0], [119000.0, 1.0], [1191500.0, 1.0], [755500.0, 1.0], [828500.0, 1.0], [1166000.0, 1.0], [860500.0, 1.0], [1613500.0, 1.0], [350500.0, 1.0], [1677500.0, 1.0], [786000.0, 1.0], [540500.0, 1.0], [414500.0, 1.0], [604500.0, 1.0], [1187000.0, 1.0], [1806000.0, 1.0], [1165500.0, 1.0], [1188000.0, 1.0], [1635500.0, 1.0], [977500.0, 3.0], [743000.0, 1.0], [1230500.0, 1.0], [1443500.0, 1.0], [500000.0, 2.0], [753500.0, 1.0], [132500.0, 1.0], [1444500.0, 1.0], [164500.0, 2.0], [355500.0, 1.0], [387500.0, 2.0], [808000.0, 1.0], [1167000.0, 1.0], [1465500.0, 1.0], [228500.0, 1.0], [1295000.0, 1.0], [1081500.0, 1.0], [754500.0, 2.0], [1273500.0, 1.0], [265000.0, 1.0], [1168000.0, 1.0], [605000.0, 1.0], [1296000.0, 1.0], [409000.0, 1.0], [104500.0, 2.0], [441000.0, 1.0], [1189000.0, 1.0], [112500.0, 2.0], [1551500.0, 1.0], [1167500.0, 1.0], [743500.0, 2.0], [135000.0, 1.0], [264500.0, 2.0], [816500.0, 1.0], [1312500.0, 3.0], [1611000.0, 4.0], [582000.0, 1.0], [1376500.0, 1.0], [1739000.0, 1.0], [976500.0, 1.0], [376500.0, 1.0], [1462000.0, 1.0], [1248500.0, 1.0], [408500.0, 2.0], [1419000.0, 1.0], [247000.0, 2.0], [255000.0, 1.0], [805500.0, 1.0], [571000.0, 1.0], [1356000.0, 1.0], [350000.0, 2.0], [965500.0, 3.0], [549500.0, 1.0], [1612000.0, 1.0], [414000.0, 1.0], [581500.0, 1.0], [827000.0, 1.0], [1483500.0, 1.0], [1313000.0, 1.0], [1163500.0, 1.0], [987000.0, 1.0], [1718500.0, 1.0], [1569000.0, 1.0], [540000.0, 1.0], [806500.0, 4.0], [1719000.0, 1.0], [668000.0, 2.0], [700000.0, 1.0], [1378000.0, 1.0], [381500.0, 2.0], [1377500.0, 3.0], [1612500.0, 2.0], [988000.0, 1.0], [257500.0, 2.0], [275000.0, 1.0], [1613000.0, 1.0], [1677000.0, 3.0], [1208000.0, 1.0], [955500.0, 1.0], [1122500.0, 1.0], [94000.0, 1.0], [1464000.0, 1.0], [98000.0, 4.0], [387000.0, 1.0], [817000.0, 2.0], [1165000.0, 3.0], [114000.0, 1.0], [1293000.0, 1.0], [667500.0, 1.0], [699500.0, 2.0], [977000.0, 1.0], [1485000.0, 1.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 1861000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.5302934E12, "maxY": 500.0, "series": [{"data": [[1.53029436E12, 284.53333333333336], [1.53029406E12, 372.0], [1.53029496E12, 113.0], [1.53029466E12, 201.0], [1.53029364E12, 470.5], [1.53029526E12, 31.5], [1.53029424E12, 309.5], [1.53029394E12, 393.5], [1.53029484E12, 149.0666666666667], [1.53029454E12, 230.0], [1.53029352E12, 500.0], [1.53029514E12, 58.5], [1.53029412E12, 351.037037037037], [1.53029382E12, 428.5], [1.53029472E12, 184.0], [1.53029442E12, 264.5], [1.53029532E12, 14.0], [1.5302934E12, 383.3333333333333], [1.53029502E12, 100.0], [1.530294E12, 383.0], [1.5302937E12, 463.5], [1.5302946E12, 213.5], [1.5302943E12, 303.0], [1.5302952E12, 41.5], [1.5302949E12, 129.0], [1.53029358E12, 487.8064516129032], [1.53029388E12, 414.0], [1.53029448E12, 248.5], [1.53029418E12, 325.0], [1.53029508E12, 80.0], [1.53029478E12, 163.5], [1.53029346E12, 487.9310344827586], [1.53029376E12, 444.06896551724134]], "isOverall": false, "label": "bzm - Concurrency Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53029532E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 73571.0, "minX": 1.0, "maxY": 1861494.0, "series": [{"data": [[33.0, 1798718.0], [2.0, 1858729.0], [3.0, 1860164.0], [58.0, 1723352.0], [4.0, 1858357.0], [5.0, 1860123.0], [91.0, 1616764.0], [90.0, 1617682.0], [92.0, 1605412.0], [6.0, 1858422.0], [100.0, 1629336.0], [105.0, 1586181.0], [111.0, 1541809.0], [7.0, 1737819.0], [8.0, 1858988.0], [9.0, 1791592.0], [152.0, 1380275.0], [165.0, 1354636.0], [10.0, 1860348.0], [11.0, 1860736.0], [189.0, 1281007.0], [12.0, 1861494.0], [13.0, 1737598.0], [14.0, 1860756.0], [15.0, 1782621.0], [16.0, 1788690.0], [1.0, 1808563.0], [17.0, 1858622.0], [18.0, 1807543.0], [19.0, 1741274.0], [20.0, 1822513.0], [21.0, 1854426.0], [22.0, 1834445.0], [23.0, 1810194.0], [24.0, 1854434.0], [25.0, 1850008.0], [26.0, 1836496.0], [27.0, 1845776.0], [28.0, 1836016.0], [29.0, 1817358.0], [30.0, 1815510.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[40.268292682926806, 1755238.7073170734]], "isOverall": false, "label": "completarEncuestaPreInscripcion-Aggregated", "isController": false}, {"data": [[31.0, 1806329.0], [32.0, 1801429.0], [35.0, 1795102.0], [34.0, 1795047.0], [37.0, 1753746.0], [36.0, 1778921.0], [39.0, 1748755.0], [38.0, 1749047.0], [41.0, 1735165.0], [40.0, 1739098.0], [43.0, 1733140.0], [42.0, 1735313.0], [45.0, 1730583.0], [44.0, 1731337.0], [47.0, 1728116.0], [46.0, 1729274.0], [49.0, 1727076.0], [48.0, 1727307.0], [51.0, 1726484.0], [50.0, 1726644.0], [53.0, 1725977.0], [52.0, 1726401.0], [55.0, 1725055.0], [54.0, 1725436.0], [57.0, 1724422.0], [56.0, 1724562.0], [59.0, 1719164.0], [61.0, 1712581.0], [60.0, 1718672.0], [63.0, 1705651.0], [62.0, 1712086.0], [67.0, 1677414.0], [66.0, 1677432.0], [65.0, 1677755.0], [64.0, 1690306.0], [71.0, 1666074.0], [70.0, 1666088.0], [69.0, 1672397.0], [68.0, 1677269.0], [75.0, 1629065.0], [74.0, 1665394.0], [73.0, 1665947.0], [72.0, 1665988.0], [79.0, 1611133.0], [78.0, 1623196.0], [77.0, 1635605.0], [76.0, 1622461.0], [83.0, 1611003.0], [82.0, 1611016.0], [81.0, 1623069.0], [80.0, 1611100.0], [87.0, 1621083.0], [86.0, 1621395.0], [85.0, 1609797.0], [84.0, 1610975.0], [89.0, 1619826.0], [88.0, 1620703.0], [95.0, 1612558.0], [94.0, 1612677.0], [93.0, 1613110.0], [99.0, 1606707.0], [98.0, 1606670.0], [97.0, 1606797.0], [96.0, 1612465.0], [103.0, 1595313.0], [102.0, 1613675.0], [101.0, 1606532.0], [107.0, 1627133.0], [106.0, 1583843.0], [104.0, 1584393.0], [110.0, 1551923.0], [109.0, 1569320.0], [108.0, 1579211.0], [115.0, 1537366.0], [114.0, 1522825.0], [113.0, 1531622.0], [112.0, 1545196.0], [119.0, 1494111.0], [118.0, 1482915.0], [117.0, 1495301.0], [116.0, 1525014.0], [123.0, 1483747.0], [122.0, 1491001.0], [121.0, 1480235.0], [120.0, 1480257.0], [127.0, 1474902.0], [126.0, 1464494.0], [125.0, 1465840.0], [124.0, 1467160.0], [135.0, 1473061.0], [134.0, 1460906.0], [133.0, 1485380.0], [132.0, 1474140.0], [131.0, 1474495.0], [130.0, 1474727.0], [129.0, 1474748.0], [128.0, 1462433.0], [143.0, 1419306.0], [142.0, 1443990.0], [141.0, 1444592.0], [140.0, 1450088.0], [139.0, 1455652.0], [138.0, 1455688.0], [137.0, 1460481.0], [136.0, 1472821.0], [151.0, 1386245.0], [150.0, 1406765.0], [149.0, 1394739.0], [148.0, 1395487.0], [147.0, 1407813.0], [146.0, 1395725.5], [144.0, 1408143.0], [159.0, 1386135.0], [158.0, 1376902.0], [157.0, 1378203.0], [156.0, 1392940.0], [155.0, 1393351.0], [154.0, 1394395.0], [153.0, 1394414.0], [167.0, 1356402.0], [166.0, 1368832.0], [164.0, 1369017.0], [163.0, 1377805.0], [162.0, 1365515.0], [161.0, 1377901.0], [160.0, 1377888.0], [175.0, 1312873.0], [174.0, 1300804.0], [173.0, 1300658.0], [172.0, 1300831.0], [171.0, 1313328.0], [170.0, 1352780.0], [169.0, 1354823.0], [168.0, 1368689.0], [183.0, 1305963.0], [182.0, 1305914.0], [181.0, 1306333.0], [180.0, 1306321.0], [179.0, 1306239.0], [178.0, 1312536.0], [177.0, 1300347.0], [176.0, 1312687.0], [191.0, 1277006.0], [190.0, 1307308.0], [188.0, 1295327.0], [187.0, 1296399.0], [186.0, 1304406.0], [185.0, 1305534.0], [184.0, 1293470.0], [199.0, 1267425.0], [198.0, 1273846.0], [197.0, 1288711.0], [196.0, 1288779.0], [195.0, 1300992.0], [194.0, 1301119.0], [193.0, 1289176.0], [192.0, 1289300.0], [207.0, 1192970.0], [206.0, 1202847.0], [205.0, 1208313.0], [204.0, 1230856.0], [203.0, 1232978.0], [202.0, 1248507.0], [201.0, 1254108.0], [200.0, 1267235.0], [215.0, 1168030.0], [214.0, 1170701.0], [213.0, 1179187.0], [212.0, 1187008.0], [211.0, 1188429.0], [210.0, 1189384.0], [209.0, 1190924.0], [208.0, 1191819.0], [223.0, 1163849.0], [222.0, 1165228.0], [221.0, 1165352.0], [220.0, 1165421.0], [219.0, 1165949.0], [218.0, 1166102.0], [217.0, 1167356.0], [216.0, 1167911.0], [231.0, 1141465.0], [230.0, 1147855.0], [229.0, 1148008.0], [228.0, 1153868.0], [227.0, 1153999.0], [226.0, 1154019.0], [225.0, 1155312.0], [224.0, 1161050.0], [239.0, 1108570.0], [238.0, 1115121.0], [237.0, 1115913.0], [236.0, 1116232.0], [235.0, 1105714.0], [234.0, 1113464.0], [233.0, 1114334.0], [232.0, 1122843.0], [247.0, 1085825.0], [246.0, 1085952.0], [245.0, 1086051.0], [244.0, 1086013.0], [243.0, 1086087.0], [242.0, 1108398.0], [241.0, 1109547.0], [240.0, 1108614.0], [255.0, 1069683.0], [254.0, 1081590.0], [253.0, 1088071.0], [252.0, 1084822.0], [251.0, 1097633.0], [250.0, 1085785.0], [249.0, 1085808.0], [248.0, 1085962.0], [269.0, 1021751.0], [270.0, 977771.0], [268.0, 1027298.0], [259.0, 1061598.0], [258.0, 1062506.0], [257.0, 1074962.0], [256.0, 1069250.0], [267.0, 1034220.0], [266.0, 1035297.0], [265.0, 1035421.0], [264.0, 1047526.0], [263.0, 1035979.0], [262.0, 1045334.0], [261.0, 1049278.0], [260.0, 1054282.0], [286.0, 977706.0], [287.0, 965686.0], [285.0, 954323.0], [284.0, 965629.0], [283.0, 955893.0], [282.0, 980257.0], [281.0, 968580.0], [280.0, 968566.0], [279.0, 974338.0], [273.0, 976621.0], [272.0, 977513.0], [275.0, 964574.0], [274.0, 988428.0], [278.0, 975457.0], [277.0, 987333.0], [276.0, 975432.0], [302.0, 919034.0], [303.0, 901386.0], [301.0, 941787.0], [300.0, 930184.0], [299.0, 941446.0], [298.0, 941857.0], [297.0, 958824.0], [296.0, 970707.0], [295.0, 958617.0], [289.0, 965061.0], [288.0, 965638.0], [291.0, 959407.0], [290.0, 971504.0], [294.0, 958837.0], [293.0, 947552.0], [292.0, 971331.0], [318.0, 823469.0], [319.0, 820810.0], [317.0, 823973.0], [316.0, 826132.0], [315.0, 826693.0], [314.0, 826758.0], [313.0, 827153.0], [312.0, 828620.0], [311.0, 844303.0], [305.0, 896523.0], [304.0, 912225.0], [307.0, 860530.0], [306.0, 907809.0], [310.0, 863387.0], [309.0, 875208.0], [308.0, 863924.0], [334.0, 800164.0], [335.0, 800101.0], [333.0, 800284.0], [332.0, 800167.0], [331.0, 800207.0], [330.0, 805980.0], [329.0, 806842.0], [328.0, 806883.0], [327.0, 806910.0], [321.0, 817207.0], [320.0, 819425.0], [323.0, 816606.0], [322.0, 817107.0], [326.0, 806937.0], [325.0, 808009.0], [324.0, 816476.0], [350.0, 73571.0], [351.0, 746096.0], [349.0, 746076.0], [348.0, 746441.0], [347.0, 752459.0], [346.0, 753750.0], [345.0, 754637.0], [344.0, 754600.0], [343.0, 755083.0], [337.0, 786487.0], [336.0, 792522.0], [339.0, 743656.0], [338.0, 758568.0], [342.0, 743357.0], [341.0, 755750.0], [340.0, 743650.0], [366.0, 707128.0], [367.0, 707022.0], [365.0, 718860.0], [364.0, 726117.0], [363.0, 726426.0], [362.0, 727099.0], [361.0, 727530.0], [360.0, 727838.0], [359.0, 727975.0], [353.0, 736182.0], [352.0, 745095.0], [355.0, 735493.0], [354.0, 735943.0], [358.0, 727925.0], [357.0, 734087.0], [356.0, 734481.0], [382.0, 627826.0], [383.0, 610752.0], [381.0, 650134.0], [380.0, 650772.0], [379.0, 667980.0], [378.0, 668358.0], [377.0, 668402.0], [376.0, 673333.0], [375.0, 673479.0], [369.0, 699779.0], [368.0, 700033.0], [371.0, 693262.0], [370.0, 699714.0], [374.0, 673715.0], [373.0, 685245.0], [372.0, 692829.0], [398.0, 559506.0], [399.0, 559596.0], [397.0, 559545.0], [396.0, 559645.0], [395.0, 560256.0], [394.0, 560229.0], [393.0, 560071.0], [392.0, 582159.0], [391.0, 571487.0], [385.0, 605435.0], [384.0, 605597.0], [387.0, 596120.0], [386.0, 604825.0], [390.0, 581998.0], [389.0, 588908.0], [388.0, 589495.0], [414.0, 534185.0], [400.0, 248881.33333333334], [401.0, 549545.0], [403.0, 548930.0], [402.0, 549230.0], [407.0, 548381.0], [406.0, 548198.0], [405.0, 548489.0], [404.0, 548767.0], [415.0, 534113.0], [413.0, 540311.0], [412.0, 540669.0], [411.0, 541775.0], [410.0, 541681.0], [409.0, 548285.0], [408.0, 548309.0], [430.0, 414522.0], [431.0, 414075.0], [429.0, 440099.0], [428.0, 441280.0], [427.0, 497678.0], [426.0, 500165.0], [425.0, 500432.0], [424.0, 501179.0], [423.0, 506140.0], [417.0, 533512.0], [416.0, 534255.0], [419.0, 533437.0], [418.0, 533633.0], [422.0, 506744.0], [421.0, 506617.0], [420.0, 522127.0], [446.0, 407401.0], [447.0, 401143.0], [445.0, 407856.0], [444.0, 408759.0], [443.0, 408864.0], [442.0, 409050.0], [441.0, 399181.0], [440.0, 399602.0], [438.0, 399611.0], [433.0, 401610.0], [432.0, 401931.0], [435.0, 400299.0], [434.0, 401660.0], [437.0, 399971.0], [436.0, 399787.0], [462.0, 357073.0], [450.0, 167060.22222222222], [448.0, 401041.0], [451.0, 400776.0], [455.0, 393908.0], [454.0, 399844.0], [453.0, 400197.0], [452.0, 400670.0], [463.0, 355548.0], [461.0, 376880.0], [460.0, 381777.0], [459.0, 381859.0], [458.0, 387370.0], [457.0, 387845.0], [456.0, 387883.0], [478.0, 254856.0], [479.0, 254845.0], [477.0, 255226.0], [476.0, 257340.0], [475.0, 257435.0], [474.0, 257651.0], [473.0, 257773.0], [472.0, 264876.0], [471.0, 274226.0], [465.0, 350227.0], [464.0, 350543.0], [467.0, 347362.0], [466.0, 350192.0], [470.0, 275222.0], [469.0, 320647.0], [468.0, 346285.0], [494.0, 258977.0], [495.0, 258958.0], [493.0, 247026.0], [492.0, 247352.0], [491.0, 259939.0], [490.0, 260085.0], [489.0, 260119.0], [488.0, 264933.0], [487.0, 265148.0], [481.0, 254539.0], [480.0, 254962.0], [483.0, 253934.0], [482.0, 254408.0], [486.0, 253376.0], [485.0, 253821.0], [484.0, 253994.0], [500.0, 142684.81250000003], [499.0, 228559.0], [498.0, 229468.0], [497.0, 246395.0], [496.0, 246905.0]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}, {"data": [[286.8080000000002, 933613.6740000007]], "isOverall": false, "label": "obtenerEncuesta-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.5302934E12, "maxY": 22687.1, "series": [{"data": [[1.53029436E12, 0.0], [1.53029406E12, 0.0], [1.53029496E12, 0.0], [1.53029466E12, 0.0], [1.53029364E12, 0.0], [1.53029526E12, 0.0], [1.53029424E12, 0.0], [1.53029394E12, 0.0], [1.53029484E12, 0.0], [1.53029454E12, 0.0], [1.53029352E12, 0.0], [1.53029514E12, 0.0], [1.53029412E12, 0.0], [1.53029382E12, 0.0], [1.53029472E12, 0.0], [1.53029442E12, 0.0], [1.53029532E12, 0.0], [1.5302934E12, 0.0], [1.53029502E12, 0.0], [1.530294E12, 0.0], [1.5302937E12, 0.0], [1.5302946E12, 0.0], [1.5302943E12, 0.0], [1.5302952E12, 0.0], [1.5302949E12, 0.0], [1.53029358E12, 0.0], [1.53029388E12, 0.0], [1.53029448E12, 0.0], [1.53029418E12, 0.0], [1.53029508E12, 0.0], [1.53029478E12, 0.0], [1.53029346E12, 0.0], [1.53029376E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53029436E12, 21954.466666666667], [1.53029406E12, 10977.5], [1.53029496E12, 4398.083333333333], [1.53029466E12, 5122.983333333334], [1.53029364E12, 2927.366666666667], [1.53029526E12, 2957.4666666666667], [1.53029424E12, 4391.133333333333], [1.53029394E12, 10245.65], [1.53029484E12, 10253.216666666667], [1.53029454E12, 10977.533333333333], [1.53029352E12, 4391.2], [1.53029514E12, 15375.65], [1.53029412E12, 19759.533333333333], [1.53029382E12, 1463.6666666666667], [1.53029472E12, 19035.383333333335], [1.53029442E12, 7318.45], [1.53029532E12, 202.5], [1.5302934E12, 2195.6], [1.53029502E12, 11008.0], [1.530294E12, 5122.416666666667], [1.5302937E12, 7318.016666666666], [1.5302946E12, 13173.183333333332], [1.5302943E12, 5122.833333333333], [1.5302952E12, 8781.816666666668], [1.5302949E12, 18295.883333333335], [1.53029358E12, 22687.1], [1.53029388E12, 19760.1], [1.53029448E12, 16100.383333333333], [1.53029418E12, 18296.25], [1.53029508E12, 14644.166666666666], [1.53029478E12, 9521.033333333333], [1.53029346E12, 21223.033333333333], [1.53029376E12, 21223.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53029532E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 87213.33333333333, "minX": 1.5302934E12, "maxY": 1828175.2222222222, "series": [{"data": [[1.53029484E12, 1380275.0], [1.53029532E12, 1828175.2222222222], [1.53029502E12, 1609423.25], [1.53029496E12, 1541809.0], [1.53029514E12, 1723352.0], [1.53029508E12, 1617682.0], [1.53029478E12, 1354636.0], [1.53029526E12, 1816900.5], [1.53029472E12, 1281007.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.53029436E12, 967413.3666666667], [1.53029406E12, 688609.2666666668], [1.53029496E12, 1535657.6666666667], [1.53029466E12, 1253565.0000000002], [1.53029364E12, 283742.75], [1.53029526E12, 1799476.75], [1.53029424E12, 855995.3333333334], [1.53029394E12, 570542.1428571428], [1.53029484E12, 1402074.2142857143], [1.53029454E12, 1137861.6666666665], [1.53029352E12, 174065.0], [1.53029514E12, 1709528.1428571425], [1.53029412E12, 741200.3703703705], [1.53029382E12, 440689.5], [1.53029472E12, 1300860.0384615387], [1.53029442E12, 1038638.6000000001], [1.5302934E12, 87213.33333333333], [1.53029502E12, 1602026.933333333], [1.530294E12, 622191.5714285714], [1.5302937E12, 359774.6], [1.5302946E12, 1179607.2777777775], [1.5302943E12, 915564.0], [1.5302952E12, 1741041.25], [1.5302949E12, 1471967.0], [1.53029358E12, 251285.870967742], [1.53029388E12, 531362.4814814816], [1.53029448E12, 1087629.4545454546], [1.53029418E12, 811332.0799999998], [1.53029508E12, 1630545.9], [1.53029478E12, 1370068.6153846153], [1.53029346E12, 113155.5172413793], [1.53029376E12, 401247.44827586215]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53029532E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 87186.33333333333, "minX": 1.5302934E12, "maxY": 1828175.2222222222, "series": [{"data": [[1.53029484E12, 1380275.0], [1.53029532E12, 1828175.2222222222], [1.53029502E12, 1609423.25], [1.53029496E12, 1541809.0], [1.53029514E12, 1723352.0], [1.53029508E12, 1617682.0], [1.53029478E12, 1354636.0], [1.53029526E12, 1816900.5], [1.53029472E12, 1281007.0]], "isOverall": false, "label": "completarEncuestaPreInscripcion", "isController": false}, {"data": [[1.53029436E12, 967397.6000000001], [1.53029406E12, 688577.8666666666], [1.53029496E12, 1535656.6666666667], [1.53029466E12, 1253550.714285714], [1.53029364E12, 283736.75], [1.53029526E12, 1799474.75], [1.53029424E12, 855993.1666666666], [1.53029394E12, 570537.7142857143], [1.53029484E12, 1402068.5714285716], [1.53029454E12, 1137859.1333333333], [1.53029352E12, 174055.5], [1.53029514E12, 1709523.714285714], [1.53029412E12, 741187.9629629629], [1.53029382E12, 440688.5], [1.53029472E12, 1300841.9615384613], [1.53029442E12, 1038634.8], [1.5302934E12, 87186.33333333333], [1.53029502E12, 1602002.1333333333], [1.530294E12, 622183.2857142857], [1.5302937E12, 359731.5999999999], [1.5302946E12, 1179578.7222222222], [1.5302943E12, 915524.0], [1.5302952E12, 1741038.5833333333], [1.5302949E12, 1471964.64], [1.53029358E12, 251091.4838709678], [1.53029388E12, 531192.4074074074], [1.53029448E12, 1087621.1363636365], [1.53029418E12, 811328.4], [1.53029508E12, 1630541.2], [1.53029478E12, 1370066.2307692308], [1.53029346E12, 113085.68965517242], [1.53029376E12, 401215.7241379311]], "isOverall": false, "label": "obtenerEncuesta", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53029532E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 93997.0, "minX": 2.0, "maxY": 1803879.0, "series": [{"data": [[2.0, 440689.5], [8.0, 1803879.0], [10.0, 701805.0], [3.0, 93997.0], [12.0, 1735239.0], [14.0, 974450.0], [15.0, 1147855.0], [4.0, 274724.0], [18.0, 1174944.0], [19.0, 1606707.0], [21.0, 1621395.0], [22.0, 1393759.0], [6.0, 509261.5], [25.0, 1135872.5], [27.0, 1017787.0], [7.0, 1086321.5], [29.0, 268458.5], [30.0, 968573.0], [31.0, 254539.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            }
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93996.0, "minX": 2.0, "maxY": 1803876.0, "series": [{"data": [[2.0, 440688.5], [8.0, 1803876.0], [10.0, 701798.0], [3.0, 93996.0], [12.0, 1735239.0], [14.0, 974446.0], [15.0, 1147854.0], [4.0, 274717.5], [18.0, 1174943.5], [19.0, 1606700.0], [21.0, 1621376.0], [22.0, 1393755.5], [6.0, 509258.5], [25.0, 1135870.5], [27.0, 1017768.0], [7.0, 1086289.5], [29.0, 268457.0], [30.0, 968570.5], [31.0, 254531.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            }
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.53029334E12, "maxY": 3.6, "series": [{"data": [[1.53029358E12, 0.05], [1.5302934E12, 3.6], [1.53029352E12, 0.1], [1.53029334E12, 3.1166666666666667], [1.53029346E12, 2.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53029358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.5302934E12, "maxY": 0.5166666666666667, "series": [{"data": [[1.53029436E12, 0.5], [1.53029406E12, 0.25], [1.53029496E12, 0.11666666666666667], [1.53029466E12, 0.11666666666666667], [1.53029364E12, 0.06666666666666667], [1.53029526E12, 0.13333333333333333], [1.53029424E12, 0.1], [1.53029394E12, 0.23333333333333334], [1.53029484E12, 0.25], [1.53029454E12, 0.25], [1.53029352E12, 0.1], [1.53029514E12, 0.36666666666666664], [1.53029412E12, 0.45], [1.53029382E12, 0.03333333333333333], [1.53029472E12, 0.45], [1.53029442E12, 0.16666666666666666], [1.53029532E12, 0.45], [1.5302934E12, 0.05], [1.53029502E12, 0.31666666666666665], [1.530294E12, 0.11666666666666667], [1.5302937E12, 0.16666666666666666], [1.5302946E12, 0.3], [1.5302943E12, 0.11666666666666667], [1.5302952E12, 0.2], [1.5302949E12, 0.4166666666666667], [1.53029358E12, 0.5166666666666667], [1.53029388E12, 0.45], [1.53029448E12, 0.36666666666666664], [1.53029418E12, 0.4166666666666667], [1.53029508E12, 0.35], [1.53029478E12, 0.23333333333333334], [1.53029346E12, 0.48333333333333334], [1.53029376E12, 0.48333333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53029532E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5302934E12, "maxY": 0.5166666666666667, "series": [{"data": [[1.53029436E12, 0.5], [1.53029406E12, 0.25], [1.53029496E12, 0.1], [1.53029466E12, 0.11666666666666667], [1.53029364E12, 0.06666666666666667], [1.53029526E12, 0.06666666666666667], [1.53029424E12, 0.1], [1.53029394E12, 0.23333333333333334], [1.53029484E12, 0.23333333333333334], [1.53029454E12, 0.25], [1.53029352E12, 0.1], [1.53029514E12, 0.35], [1.53029412E12, 0.45], [1.53029382E12, 0.03333333333333333], [1.53029472E12, 0.43333333333333335], [1.53029442E12, 0.16666666666666666], [1.5302934E12, 0.05], [1.53029502E12, 0.25], [1.530294E12, 0.11666666666666667], [1.5302937E12, 0.16666666666666666], [1.5302946E12, 0.3], [1.5302943E12, 0.11666666666666667], [1.5302952E12, 0.2], [1.5302949E12, 0.4166666666666667], [1.53029358E12, 0.5166666666666667], [1.53029388E12, 0.45], [1.53029448E12, 0.36666666666666664], [1.53029418E12, 0.4166666666666667], [1.53029508E12, 0.3333333333333333], [1.53029478E12, 0.21666666666666667], [1.53029346E12, 0.48333333333333334], [1.53029376E12, 0.48333333333333334]], "isOverall": false, "label": "obtenerEncuesta-success", "isController": false}, {"data": [[1.53029484E12, 0.016666666666666666], [1.53029532E12, 0.45], [1.53029502E12, 0.06666666666666667], [1.53029496E12, 0.016666666666666666], [1.53029514E12, 0.016666666666666666], [1.53029508E12, 0.016666666666666666], [1.53029478E12, 0.016666666666666666], [1.53029526E12, 0.06666666666666667], [1.53029472E12, 0.016666666666666666]], "isOverall": false, "label": "completarEncuestaPreInscripcion-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53029532E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#responseTimesOverTime";
        } else if (elem.id == "bodyLantenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

// create slider
$(function() {
    $( "#slider-vertical" ).slider({
      orientation: "vertical",
      range: "min",
      min: responseTimePercentilesInfos.data.result.minY,
      max: responseTimePercentilesInfos.data.result.maxY,
      value: 0,
      stop: function(event, ui ) {
       percentileThreshold= ui.value;
       refreshResponseTimePercentiles();
       $("#amount").val(percentileThreshold);
      }
    });
    $("#amount" ).val( $( "#slider-vertical" ).slider( "value" ) );
    $("#slider-vertical").children("div").css("background-color","purple");
    $("#amount" ).css("color", $("#slider-vertical").children("div").css("background-color"));
    $("#slider-vertical").children("div").css("opacity","0.3");
});

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
